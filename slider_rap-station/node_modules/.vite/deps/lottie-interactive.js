import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/lottie-interactive/dist/lottie-interactive.js
var require_lottie_interactive = __commonJS({
  "node_modules/lottie-interactive/dist/lottie-interactive.js"(exports, module) {
    (() => {
      var __webpack_modules__ = { 992: (module, exports, __webpack_require__) => {
        var __WEBPACK_AMD_DEFINE_RESULT__, root, factory;
        "undefined" != typeof navigator && (root = window || {}, factory = function(window) {
          "use strict";
          var svgNS = "http://www.w3.org/2000/svg", locationHref = "", initialDefaultFrame = -999999, subframeEnabled = true, expressionsPlugin, isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent), cachedColors = {}, bmRnd, bmPow = Math.pow, bmSqrt = Math.sqrt, bmFloor = Math.floor, bmMax = Math.max, bmMin = Math.min, BMMath = {};
          function ProjectInterface() {
            return {};
          }
          !function() {
            var t, e = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"], i = e.length;
            for (t = 0; t < i; t += 1)
              BMMath[e[t]] = Math[e[t]];
          }(), BMMath.random = Math.random, BMMath.abs = function(t) {
            if ("object" == typeof t && t.length) {
              var e, i = createSizedArray(t.length), r = t.length;
              for (e = 0; e < r; e += 1)
                i[e] = Math.abs(t[e]);
              return i;
            }
            return Math.abs(t);
          };
          var defaultCurveSegments = 150, degToRads = Math.PI / 180, roundCorner = 0.5519;
          function roundValues(t) {
            bmRnd = t ? Math.round : function(t2) {
              return t2;
            };
          }
          function styleDiv(t) {
            t.style.position = "absolute", t.style.top = 0, t.style.left = 0, t.style.display = "block", t.style.transformOrigin = "0 0", t.style.webkitTransformOrigin = "0 0", t.style.backfaceVisibility = "visible", t.style.webkitBackfaceVisibility = "visible", t.style.transformStyle = "preserve-3d", t.style.webkitTransformStyle = "preserve-3d", t.style.mozTransformStyle = "preserve-3d";
          }
          function BMEnterFrameEvent(t, e, i, r) {
            this.type = t, this.currentTime = e, this.totalTime = i, this.direction = r < 0 ? -1 : 1;
          }
          function BMCompleteEvent(t, e) {
            this.type = t, this.direction = e < 0 ? -1 : 1;
          }
          function BMCompleteLoopEvent(t, e, i, r) {
            this.type = t, this.currentLoop = i, this.totalLoops = e, this.direction = r < 0 ? -1 : 1;
          }
          function BMSegmentStartEvent(t, e, i) {
            this.type = t, this.firstFrame = e, this.totalFrames = i;
          }
          function BMDestroyEvent(t, e) {
            this.type = t, this.target = e;
          }
          function BMRenderFrameErrorEvent(t, e) {
            this.type = "renderFrameError", this.nativeError = t, this.currentTime = e;
          }
          function BMConfigErrorEvent(t) {
            this.type = "configError", this.nativeError = t;
          }
          function BMAnimationConfigErrorEvent(t, e) {
            this.type = t, this.nativeError = e;
          }
          roundValues(false);
          var createElementID = (_count = 0, function() {
            return "__lottie_element_" + (_count += 1);
          }), _count;
          function HSVtoRGB(t, e, i) {
            var r, s, a, n, o, h, l, p;
            switch (h = i * (1 - e), l = i * (1 - (o = 6 * t - (n = Math.floor(6 * t))) * e), p = i * (1 - (1 - o) * e), n % 6) {
              case 0:
                r = i, s = p, a = h;
                break;
              case 1:
                r = l, s = i, a = h;
                break;
              case 2:
                r = h, s = i, a = p;
                break;
              case 3:
                r = h, s = l, a = i;
                break;
              case 4:
                r = p, s = h, a = i;
                break;
              case 5:
                r = i, s = h, a = l;
            }
            return [r, s, a];
          }
          function RGBtoHSV(t, e, i) {
            var r, s = Math.max(t, e, i), a = Math.min(t, e, i), n = s - a, o = 0 === s ? 0 : n / s, h = s / 255;
            switch (s) {
              case a:
                r = 0;
                break;
              case t:
                r = e - i + n * (e < i ? 6 : 0), r /= 6 * n;
                break;
              case e:
                r = i - t + 2 * n, r /= 6 * n;
                break;
              case i:
                r = t - e + 4 * n, r /= 6 * n;
            }
            return [r, o, h];
          }
          function addSaturationToRGB(t, e) {
            var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
            return i[1] += e, i[1] > 1 ? i[1] = 1 : i[1] <= 0 && (i[1] = 0), HSVtoRGB(i[0], i[1], i[2]);
          }
          function addBrightnessToRGB(t, e) {
            var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
            return i[2] += e, i[2] > 1 ? i[2] = 1 : i[2] < 0 && (i[2] = 0), HSVtoRGB(i[0], i[1], i[2]);
          }
          function addHueToRGB(t, e) {
            var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
            return i[0] += e / 360, i[0] > 1 ? i[0] -= 1 : i[0] < 0 && (i[0] += 1), HSVtoRGB(i[0], i[1], i[2]);
          }
          var rgbToHex = function() {
            var t, e, i = [];
            for (t = 0; t < 256; t += 1)
              e = t.toString(16), i[t] = 1 === e.length ? "0" + e : e;
            return function(t2, e2, r) {
              return t2 < 0 && (t2 = 0), e2 < 0 && (e2 = 0), r < 0 && (r = 0), "#" + i[t2] + i[e2] + i[r];
            };
          }();
          function BaseEvent() {
          }
          BaseEvent.prototype = { triggerEvent: function(t, e) {
            if (this._cbs[t])
              for (var i = this._cbs[t].length, r = 0; r < i; r += 1)
                this._cbs[t][r](e);
          }, addEventListener: function(t, e) {
            return this._cbs[t] || (this._cbs[t] = []), this._cbs[t].push(e), function() {
              this.removeEventListener(t, e);
            }.bind(this);
          }, removeEventListener: function(t, e) {
            if (e) {
              if (this._cbs[t]) {
                for (var i = 0, r = this._cbs[t].length; i < r; )
                  this._cbs[t][i] === e && (this._cbs[t].splice(i, 1), i -= 1, r -= 1), i += 1;
                this._cbs[t].length || (this._cbs[t] = null);
              }
            } else
              this._cbs[t] = null;
          } };
          var createTypedArray = function() {
            function t(t2, e) {
              var i, r = 0, s = [];
              switch (t2) {
                case "int16":
                case "uint8c":
                  i = 1;
                  break;
                default:
                  i = 1.1;
              }
              for (r = 0; r < e; r += 1)
                s.push(i);
              return s;
            }
            return "function" == typeof Uint8ClampedArray && "function" == typeof Float32Array ? function(e, i) {
              return "float32" === e ? new Float32Array(i) : "int16" === e ? new Int16Array(i) : "uint8c" === e ? new Uint8ClampedArray(i) : t(e, i);
            } : t;
          }();
          function createSizedArray(t) {
            return Array.apply(null, { length: t });
          }
          function createNS(t) {
            return document.createElementNS(svgNS, t);
          }
          function createTag(t) {
            return document.createElement(t);
          }
          function DynamicPropertyContainer() {
          }
          DynamicPropertyContainer.prototype = { addDynamicProperty: function(t) {
            -1 === this.dynamicProperties.indexOf(t) && (this.dynamicProperties.push(t), this.container.addDynamicProperty(this), this._isAnimated = true);
          }, iterateDynamicProperties: function() {
            var t;
            this._mdf = false;
            var e = this.dynamicProperties.length;
            for (t = 0; t < e; t += 1)
              this.dynamicProperties[t].getValue(), this.dynamicProperties[t]._mdf && (this._mdf = true);
          }, initDynamicPropertyContainer: function(t) {
            this.container = t, this.dynamicProperties = [], this._mdf = false, this._isAnimated = false;
          } };
          var getBlendMode = (blendModeEnums = { 0: "source-over", 1: "multiply", 2: "screen", 3: "overlay", 4: "darken", 5: "lighten", 6: "color-dodge", 7: "color-burn", 8: "hard-light", 9: "soft-light", 10: "difference", 11: "exclusion", 12: "hue", 13: "saturation", 14: "color", 15: "luminosity" }, function(t) {
            return blendModeEnums[t] || "";
          }), blendModeEnums, Matrix = function() {
            var t = Math.cos, e = Math.sin, i = Math.tan, r = Math.round;
            function s() {
              return this.props[0] = 1, this.props[1] = 0, this.props[2] = 0, this.props[3] = 0, this.props[4] = 0, this.props[5] = 1, this.props[6] = 0, this.props[7] = 0, this.props[8] = 0, this.props[9] = 0, this.props[10] = 1, this.props[11] = 0, this.props[12] = 0, this.props[13] = 0, this.props[14] = 0, this.props[15] = 1, this;
            }
            function a(i2) {
              if (0 === i2)
                return this;
              var r2 = t(i2), s2 = e(i2);
              return this._t(r2, -s2, 0, 0, s2, r2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
            }
            function n(i2) {
              if (0 === i2)
                return this;
              var r2 = t(i2), s2 = e(i2);
              return this._t(1, 0, 0, 0, 0, r2, -s2, 0, 0, s2, r2, 0, 0, 0, 0, 1);
            }
            function o(i2) {
              if (0 === i2)
                return this;
              var r2 = t(i2), s2 = e(i2);
              return this._t(r2, 0, s2, 0, 0, 1, 0, 0, -s2, 0, r2, 0, 0, 0, 0, 1);
            }
            function h(i2) {
              if (0 === i2)
                return this;
              var r2 = t(i2), s2 = e(i2);
              return this._t(r2, -s2, 0, 0, s2, r2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
            }
            function l(t2, e2) {
              return this._t(1, e2, t2, 1, 0, 0);
            }
            function p(t2, e2) {
              return this.shear(i(t2), i(e2));
            }
            function c(r2, s2) {
              var a2 = t(s2), n2 = e(s2);
              return this._t(a2, n2, 0, 0, -n2, a2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, i(r2), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(a2, -n2, 0, 0, n2, a2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
            }
            function m(t2, e2, i2) {
              return i2 || 0 === i2 || (i2 = 1), 1 === t2 && 1 === e2 && 1 === i2 ? this : this._t(t2, 0, 0, 0, 0, e2, 0, 0, 0, 0, i2, 0, 0, 0, 0, 1);
            }
            function f(t2, e2, i2, r2, s2, a2, n2, o2, h2, l2, p2, c2, m2, f2, d2, u2) {
              return this.props[0] = t2, this.props[1] = e2, this.props[2] = i2, this.props[3] = r2, this.props[4] = s2, this.props[5] = a2, this.props[6] = n2, this.props[7] = o2, this.props[8] = h2, this.props[9] = l2, this.props[10] = p2, this.props[11] = c2, this.props[12] = m2, this.props[13] = f2, this.props[14] = d2, this.props[15] = u2, this;
            }
            function d(t2, e2, i2) {
              return i2 = i2 || 0, 0 !== t2 || 0 !== e2 || 0 !== i2 ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t2, e2, i2, 1) : this;
            }
            function u(t2, e2, i2, r2, s2, a2, n2, o2, h2, l2, p2, c2, m2, f2, d2, u2) {
              var y2 = this.props;
              if (1 === t2 && 0 === e2 && 0 === i2 && 0 === r2 && 0 === s2 && 1 === a2 && 0 === n2 && 0 === o2 && 0 === h2 && 0 === l2 && 1 === p2 && 0 === c2)
                return y2[12] = y2[12] * t2 + y2[15] * m2, y2[13] = y2[13] * a2 + y2[15] * f2, y2[14] = y2[14] * p2 + y2[15] * d2, y2[15] *= u2, this._identityCalculated = false, this;
              var g2 = y2[0], v2 = y2[1], b2 = y2[2], P2 = y2[3], E2 = y2[4], x2 = y2[5], S2 = y2[6], C2 = y2[7], A2 = y2[8], _2 = y2[9], k2 = y2[10], T2 = y2[11], w2 = y2[12], M2 = y2[13], D2 = y2[14], F2 = y2[15];
              return y2[0] = g2 * t2 + v2 * s2 + b2 * h2 + P2 * m2, y2[1] = g2 * e2 + v2 * a2 + b2 * l2 + P2 * f2, y2[2] = g2 * i2 + v2 * n2 + b2 * p2 + P2 * d2, y2[3] = g2 * r2 + v2 * o2 + b2 * c2 + P2 * u2, y2[4] = E2 * t2 + x2 * s2 + S2 * h2 + C2 * m2, y2[5] = E2 * e2 + x2 * a2 + S2 * l2 + C2 * f2, y2[6] = E2 * i2 + x2 * n2 + S2 * p2 + C2 * d2, y2[7] = E2 * r2 + x2 * o2 + S2 * c2 + C2 * u2, y2[8] = A2 * t2 + _2 * s2 + k2 * h2 + T2 * m2, y2[9] = A2 * e2 + _2 * a2 + k2 * l2 + T2 * f2, y2[10] = A2 * i2 + _2 * n2 + k2 * p2 + T2 * d2, y2[11] = A2 * r2 + _2 * o2 + k2 * c2 + T2 * u2, y2[12] = w2 * t2 + M2 * s2 + D2 * h2 + F2 * m2, y2[13] = w2 * e2 + M2 * a2 + D2 * l2 + F2 * f2, y2[14] = w2 * i2 + M2 * n2 + D2 * p2 + F2 * d2, y2[15] = w2 * r2 + M2 * o2 + D2 * c2 + F2 * u2, this._identityCalculated = false, this;
            }
            function y() {
              return this._identityCalculated || (this._identity = !(1 !== this.props[0] || 0 !== this.props[1] || 0 !== this.props[2] || 0 !== this.props[3] || 0 !== this.props[4] || 1 !== this.props[5] || 0 !== this.props[6] || 0 !== this.props[7] || 0 !== this.props[8] || 0 !== this.props[9] || 1 !== this.props[10] || 0 !== this.props[11] || 0 !== this.props[12] || 0 !== this.props[13] || 0 !== this.props[14] || 1 !== this.props[15]), this._identityCalculated = true), this._identity;
            }
            function g(t2) {
              for (var e2 = 0; e2 < 16; ) {
                if (t2.props[e2] !== this.props[e2])
                  return false;
                e2 += 1;
              }
              return true;
            }
            function v(t2) {
              var e2;
              for (e2 = 0; e2 < 16; e2 += 1)
                t2.props[e2] = this.props[e2];
              return t2;
            }
            function b(t2) {
              var e2;
              for (e2 = 0; e2 < 16; e2 += 1)
                this.props[e2] = t2[e2];
            }
            function P(t2, e2, i2) {
              return { x: t2 * this.props[0] + e2 * this.props[4] + i2 * this.props[8] + this.props[12], y: t2 * this.props[1] + e2 * this.props[5] + i2 * this.props[9] + this.props[13], z: t2 * this.props[2] + e2 * this.props[6] + i2 * this.props[10] + this.props[14] };
            }
            function E(t2, e2, i2) {
              return t2 * this.props[0] + e2 * this.props[4] + i2 * this.props[8] + this.props[12];
            }
            function x(t2, e2, i2) {
              return t2 * this.props[1] + e2 * this.props[5] + i2 * this.props[9] + this.props[13];
            }
            function S(t2, e2, i2) {
              return t2 * this.props[2] + e2 * this.props[6] + i2 * this.props[10] + this.props[14];
            }
            function C() {
              var t2 = this.props[0] * this.props[5] - this.props[1] * this.props[4], e2 = this.props[5] / t2, i2 = -this.props[1] / t2, r2 = -this.props[4] / t2, s2 = this.props[0] / t2, a2 = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / t2, n2 = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / t2, o2 = new Matrix();
              return o2.props[0] = e2, o2.props[1] = i2, o2.props[4] = r2, o2.props[5] = s2, o2.props[12] = a2, o2.props[13] = n2, o2;
            }
            function A(t2) {
              return this.getInverseMatrix().applyToPointArray(t2[0], t2[1], t2[2] || 0);
            }
            function _(t2) {
              var e2, i2 = t2.length, r2 = [];
              for (e2 = 0; e2 < i2; e2 += 1)
                r2[e2] = A(t2[e2]);
              return r2;
            }
            function k(t2, e2, i2) {
              var r2 = createTypedArray("float32", 6);
              if (this.isIdentity())
                r2[0] = t2[0], r2[1] = t2[1], r2[2] = e2[0], r2[3] = e2[1], r2[4] = i2[0], r2[5] = i2[1];
              else {
                var s2 = this.props[0], a2 = this.props[1], n2 = this.props[4], o2 = this.props[5], h2 = this.props[12], l2 = this.props[13];
                r2[0] = t2[0] * s2 + t2[1] * n2 + h2, r2[1] = t2[0] * a2 + t2[1] * o2 + l2, r2[2] = e2[0] * s2 + e2[1] * n2 + h2, r2[3] = e2[0] * a2 + e2[1] * o2 + l2, r2[4] = i2[0] * s2 + i2[1] * n2 + h2, r2[5] = i2[0] * a2 + i2[1] * o2 + l2;
              }
              return r2;
            }
            function T(t2, e2, i2) {
              return this.isIdentity() ? [t2, e2, i2] : [t2 * this.props[0] + e2 * this.props[4] + i2 * this.props[8] + this.props[12], t2 * this.props[1] + e2 * this.props[5] + i2 * this.props[9] + this.props[13], t2 * this.props[2] + e2 * this.props[6] + i2 * this.props[10] + this.props[14]];
            }
            function w(t2, e2) {
              if (this.isIdentity())
                return t2 + "," + e2;
              var i2 = this.props;
              return Math.round(100 * (t2 * i2[0] + e2 * i2[4] + i2[12])) / 100 + "," + Math.round(100 * (t2 * i2[1] + e2 * i2[5] + i2[13])) / 100;
            }
            function M() {
              for (var t2 = 0, e2 = this.props, i2 = "matrix3d("; t2 < 16; )
                i2 += r(1e4 * e2[t2]) / 1e4, i2 += 15 === t2 ? ")" : ",", t2 += 1;
              return i2;
            }
            function D(t2) {
              return t2 < 1e-6 && t2 > 0 || t2 > -1e-6 && t2 < 0 ? r(1e4 * t2) / 1e4 : t2;
            }
            function F() {
              var t2 = this.props;
              return "matrix(" + D(t2[0]) + "," + D(t2[1]) + "," + D(t2[4]) + "," + D(t2[5]) + "," + D(t2[12]) + "," + D(t2[13]) + ")";
            }
            return function() {
              this.reset = s, this.rotate = a, this.rotateX = n, this.rotateY = o, this.rotateZ = h, this.skew = p, this.skewFromAxis = c, this.shear = l, this.scale = m, this.setTransform = f, this.translate = d, this.transform = u, this.applyToPoint = P, this.applyToX = E, this.applyToY = x, this.applyToZ = S, this.applyToPointArray = T, this.applyToTriplePoints = k, this.applyToPointStringified = w, this.toCSS = M, this.to2dCSS = F, this.clone = v, this.cloneFromProps = b, this.equals = g, this.inversePoints = _, this.inversePoint = A, this.getInverseMatrix = C, this._t = this.transform, this.isIdentity = y, this._identity = true, this._identityCalculated = false, this.props = createTypedArray("float32", 16), this.reset();
            };
          }();
          !function(t, e) {
            var i = this, r = 256, s = e.pow(r, 6), a = e.pow(2, 52), n = 2 * a, o = 255;
            function h(t2) {
              var e2, i2 = t2.length, s2 = this, a2 = 0, n2 = s2.i = s2.j = 0, h2 = s2.S = [];
              for (i2 || (t2 = [i2++]); a2 < r; )
                h2[a2] = a2++;
              for (a2 = 0; a2 < r; a2++)
                h2[a2] = h2[n2 = o & n2 + t2[a2 % i2] + (e2 = h2[a2])], h2[n2] = e2;
              s2.g = function(t3) {
                for (var e3, i3 = 0, a3 = s2.i, n3 = s2.j, h3 = s2.S; t3--; )
                  e3 = h3[a3 = o & a3 + 1], i3 = i3 * r + h3[o & (h3[a3] = h3[n3 = o & n3 + e3]) + (h3[n3] = e3)];
                return s2.i = a3, s2.j = n3, i3;
              };
            }
            function l(t2, e2) {
              return e2.i = t2.i, e2.j = t2.j, e2.S = t2.S.slice(), e2;
            }
            function p(t2, e2) {
              var i2, r2 = [], s2 = typeof t2;
              if (e2 && "object" == s2)
                for (i2 in t2)
                  try {
                    r2.push(p(t2[i2], e2 - 1));
                  } catch (t3) {
                  }
              return r2.length ? r2 : "string" == s2 ? t2 : t2 + "\0";
            }
            function c(t2, e2) {
              for (var i2, r2 = t2 + "", s2 = 0; s2 < r2.length; )
                e2[o & s2] = o & (i2 ^= 19 * e2[o & s2]) + r2.charCodeAt(s2++);
              return m(e2);
            }
            function m(t2) {
              return String.fromCharCode.apply(0, t2);
            }
            e.seedrandom = function(o2, f, d) {
              var u = [], y = c(p((f = true === f ? { entropy: true } : f || {}).entropy ? [o2, m(t)] : null === o2 ? function() {
                try {
                  var e2 = new Uint8Array(r);
                  return (i.crypto || i.msCrypto).getRandomValues(e2), m(e2);
                } catch (e3) {
                  var s2 = i.navigator, a2 = s2 && s2.plugins;
                  return [+new Date(), i, a2, i.screen, m(t)];
                }
              }() : o2, 3), u), g = new h(u), v = function() {
                for (var t2 = g.g(6), e2 = s, i2 = 0; t2 < a; )
                  t2 = (t2 + i2) * r, e2 *= r, i2 = g.g(1);
                for (; t2 >= n; )
                  t2 /= 2, e2 /= 2, i2 >>>= 1;
                return (t2 + i2) / e2;
              };
              return v.int32 = function() {
                return 0 | g.g(4);
              }, v.quick = function() {
                return g.g(4) / 4294967296;
              }, v.double = v, c(m(g.S), t), (f.pass || d || function(t2, i2, r2, s2) {
                return s2 && (s2.S && l(s2, g), t2.state = function() {
                  return l(g, {});
                }), r2 ? (e.random = t2, i2) : t2;
              })(v, y, "global" in f ? f.global : this == e, f.state);
            }, c(e.random(), t);
          }([], BMMath);
          var BezierFactory = function() {
            var t = { getBezierEasing: function(t2, i2, r2, s2, a2) {
              var n2 = a2 || ("bez_" + t2 + "_" + i2 + "_" + r2 + "_" + s2).replace(/\./g, "p");
              if (e[n2])
                return e[n2];
              var o2 = new l([t2, i2, r2, s2]);
              return e[n2] = o2, o2;
            } }, e = {}, i = 0.1, r = "function" == typeof Float32Array;
            function s(t2, e2) {
              return 1 - 3 * e2 + 3 * t2;
            }
            function a(t2, e2) {
              return 3 * e2 - 6 * t2;
            }
            function n(t2) {
              return 3 * t2;
            }
            function o(t2, e2, i2) {
              return ((s(e2, i2) * t2 + a(e2, i2)) * t2 + n(e2)) * t2;
            }
            function h(t2, e2, i2) {
              return 3 * s(e2, i2) * t2 * t2 + 2 * a(e2, i2) * t2 + n(e2);
            }
            function l(t2) {
              this._p = t2, this._mSampleValues = r ? new Float32Array(11) : new Array(11), this._precomputed = false, this.get = this.get.bind(this);
            }
            return l.prototype = { get: function(t2) {
              var e2 = this._p[0], i2 = this._p[1], r2 = this._p[2], s2 = this._p[3];
              return this._precomputed || this._precompute(), e2 === i2 && r2 === s2 ? t2 : 0 === t2 ? 0 : 1 === t2 ? 1 : o(this._getTForX(t2), i2, s2);
            }, _precompute: function() {
              var t2 = this._p[0], e2 = this._p[1], i2 = this._p[2], r2 = this._p[3];
              this._precomputed = true, t2 === e2 && i2 === r2 || this._calcSampleValues();
            }, _calcSampleValues: function() {
              for (var t2 = this._p[0], e2 = this._p[2], r2 = 0; r2 < 11; ++r2)
                this._mSampleValues[r2] = o(r2 * i, t2, e2);
            }, _getTForX: function(t2) {
              for (var e2 = this._p[0], r2 = this._p[2], s2 = this._mSampleValues, a2 = 0, n2 = 1; 10 !== n2 && s2[n2] <= t2; ++n2)
                a2 += i;
              var l2 = a2 + (t2 - s2[--n2]) / (s2[n2 + 1] - s2[n2]) * i, p = h(l2, e2, r2);
              return p >= 1e-3 ? function(t3, e3, i2, r3) {
                for (var s3 = 0; s3 < 4; ++s3) {
                  var a3 = h(e3, i2, r3);
                  if (0 === a3)
                    return e3;
                  e3 -= (o(e3, i2, r3) - t3) / a3;
                }
                return e3;
              }(t2, l2, e2, r2) : 0 === p ? l2 : function(t3, e3, i2, r3, s3) {
                var a3, n3, h2 = 0;
                do {
                  (a3 = o(n3 = e3 + (i2 - e3) / 2, r3, s3) - t3) > 0 ? i2 = n3 : e3 = n3;
                } while (Math.abs(a3) > 1e-7 && ++h2 < 10);
                return n3;
              }(t2, a2, a2 + i, e2, r2);
            } }, t;
          }();
          function extendPrototype(t, e) {
            var i, r, s = t.length;
            for (i = 0; i < s; i += 1)
              for (var a in r = t[i].prototype)
                Object.prototype.hasOwnProperty.call(r, a) && (e.prototype[a] = r[a]);
          }
          function getDescriptor(t, e) {
            return Object.getOwnPropertyDescriptor(t, e);
          }
          function createProxyFunction(t) {
            function e() {
            }
            return e.prototype = t, e;
          }
          function bezFunction() {
            var t = Math;
            function e(t2, e2, i2, r2, s2, a2) {
              var n2 = t2 * r2 + e2 * s2 + i2 * a2 - s2 * r2 - a2 * t2 - i2 * e2;
              return n2 > -1e-3 && n2 < 1e-3;
            }
            var i = function(t2, e2, i2, r2) {
              var s2, a2, n2, o2, h2, l, p = defaultCurveSegments, c = 0, m = [], f = [], d = bezierLengthPool.newElement();
              for (n2 = i2.length, s2 = 0; s2 < p; s2 += 1) {
                for (h2 = s2 / (p - 1), l = 0, a2 = 0; a2 < n2; a2 += 1)
                  o2 = bmPow(1 - h2, 3) * t2[a2] + 3 * bmPow(1 - h2, 2) * h2 * i2[a2] + 3 * (1 - h2) * bmPow(h2, 2) * r2[a2] + bmPow(h2, 3) * e2[a2], m[a2] = o2, null !== f[a2] && (l += bmPow(m[a2] - f[a2], 2)), f[a2] = m[a2];
                l && (c += l = bmSqrt(l)), d.percents[s2] = h2, d.lengths[s2] = c;
              }
              return d.addedLength = c, d;
            };
            function r(t2) {
              this.segmentLength = 0, this.points = new Array(t2);
            }
            function s(t2, e2) {
              this.partialLength = t2, this.point = e2;
            }
            var a, n = (a = {}, function(t2, i2, n2, o2) {
              var h2 = (t2[0] + "_" + t2[1] + "_" + i2[0] + "_" + i2[1] + "_" + n2[0] + "_" + n2[1] + "_" + o2[0] + "_" + o2[1]).replace(/\./g, "p");
              if (!a[h2]) {
                var l, p, c, m, f, d, u, y = defaultCurveSegments, g = 0, v = null;
                2 === t2.length && (t2[0] !== i2[0] || t2[1] !== i2[1]) && e(t2[0], t2[1], i2[0], i2[1], t2[0] + n2[0], t2[1] + n2[1]) && e(t2[0], t2[1], i2[0], i2[1], i2[0] + o2[0], i2[1] + o2[1]) && (y = 2);
                var b = new r(y);
                for (c = n2.length, l = 0; l < y; l += 1) {
                  for (u = createSizedArray(c), f = l / (y - 1), d = 0, p = 0; p < c; p += 1)
                    m = bmPow(1 - f, 3) * t2[p] + 3 * bmPow(1 - f, 2) * f * (t2[p] + n2[p]) + 3 * (1 - f) * bmPow(f, 2) * (i2[p] + o2[p]) + bmPow(f, 3) * i2[p], u[p] = m, null !== v && (d += bmPow(u[p] - v[p], 2));
                  g += d = bmSqrt(d), b.points[l] = new s(d, u), v = u;
                }
                b.segmentLength = g, a[h2] = b;
              }
              return a[h2];
            });
            function o(t2, e2) {
              var i2 = e2.percents, r2 = e2.lengths, s2 = i2.length, a2 = bmFloor((s2 - 1) * t2), n2 = t2 * e2.addedLength, o2 = 0;
              if (a2 === s2 - 1 || 0 === a2 || n2 === r2[a2])
                return i2[a2];
              for (var h2 = r2[a2] > n2 ? -1 : 1, l = true; l; )
                if (r2[a2] <= n2 && r2[a2 + 1] > n2 ? (o2 = (n2 - r2[a2]) / (r2[a2 + 1] - r2[a2]), l = false) : a2 += h2, a2 < 0 || a2 >= s2 - 1) {
                  if (a2 === s2 - 1)
                    return i2[a2];
                  l = false;
                }
              return i2[a2] + (i2[a2 + 1] - i2[a2]) * o2;
            }
            var h = createTypedArray("float32", 8);
            return { getSegmentsLength: function(t2) {
              var e2, r2 = segmentsLengthPool.newElement(), s2 = t2.c, a2 = t2.v, n2 = t2.o, o2 = t2.i, h2 = t2._length, l = r2.lengths, p = 0;
              for (e2 = 0; e2 < h2 - 1; e2 += 1)
                l[e2] = i(a2[e2], a2[e2 + 1], n2[e2], o2[e2 + 1]), p += l[e2].addedLength;
              return s2 && h2 && (l[e2] = i(a2[e2], a2[0], n2[e2], o2[0]), p += l[e2].addedLength), r2.totalLength = p, r2;
            }, getNewSegment: function(e2, i2, r2, s2, a2, n2, l) {
              a2 < 0 ? a2 = 0 : a2 > 1 && (a2 = 1);
              var p, c = o(a2, l), m = o(n2 = n2 > 1 ? 1 : n2, l), f = e2.length, d = 1 - c, u = 1 - m, y = d * d * d, g = c * d * d * 3, v = c * c * d * 3, b = c * c * c, P = d * d * u, E = c * d * u + d * c * u + d * d * m, x = c * c * u + d * c * m + c * d * m, S = c * c * m, C = d * u * u, A = c * u * u + d * m * u + d * u * m, _ = c * m * u + d * m * m + c * u * m, k = c * m * m, T = u * u * u, w = m * u * u + u * m * u + u * u * m, M = m * m * u + u * m * m + m * u * m, D = m * m * m;
              for (p = 0; p < f; p += 1)
                h[4 * p] = t.round(1e3 * (y * e2[p] + g * r2[p] + v * s2[p] + b * i2[p])) / 1e3, h[4 * p + 1] = t.round(1e3 * (P * e2[p] + E * r2[p] + x * s2[p] + S * i2[p])) / 1e3, h[4 * p + 2] = t.round(1e3 * (C * e2[p] + A * r2[p] + _ * s2[p] + k * i2[p])) / 1e3, h[4 * p + 3] = t.round(1e3 * (T * e2[p] + w * r2[p] + M * s2[p] + D * i2[p])) / 1e3;
              return h;
            }, getPointInSegment: function(e2, i2, r2, s2, a2, n2) {
              var h2 = o(a2, n2), l = 1 - h2;
              return [t.round(1e3 * (l * l * l * e2[0] + (h2 * l * l + l * h2 * l + l * l * h2) * r2[0] + (h2 * h2 * l + l * h2 * h2 + h2 * l * h2) * s2[0] + h2 * h2 * h2 * i2[0])) / 1e3, t.round(1e3 * (l * l * l * e2[1] + (h2 * l * l + l * h2 * l + l * l * h2) * r2[1] + (h2 * h2 * l + l * h2 * h2 + h2 * l * h2) * s2[1] + h2 * h2 * h2 * i2[1])) / 1e3];
            }, buildBezierData: n, pointOnLine2D: e, pointOnLine3D: function(i2, r2, s2, a2, n2, o2, h2, l, p) {
              if (0 === s2 && 0 === o2 && 0 === p)
                return e(i2, r2, a2, n2, h2, l);
              var c, m = t.sqrt(t.pow(a2 - i2, 2) + t.pow(n2 - r2, 2) + t.pow(o2 - s2, 2)), f = t.sqrt(t.pow(h2 - i2, 2) + t.pow(l - r2, 2) + t.pow(p - s2, 2)), d = t.sqrt(t.pow(h2 - a2, 2) + t.pow(l - n2, 2) + t.pow(p - o2, 2));
              return (c = m > f ? m > d ? m - f - d : d - f - m : d > f ? d - f - m : f - m - d) > -1e-4 && c < 1e-4;
            } };
          }
          !function() {
            for (var t = 0, e = ["ms", "moz", "webkit", "o"], i = 0; i < e.length && !window.requestAnimationFrame; ++i)
              window.requestAnimationFrame = window[e[i] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[e[i] + "CancelAnimationFrame"] || window[e[i] + "CancelRequestAnimationFrame"];
            window.requestAnimationFrame || (window.requestAnimationFrame = function(e2) {
              var i2 = new Date().getTime(), r = Math.max(0, 16 - (i2 - t)), s = setTimeout(function() {
                e2(i2 + r);
              }, r);
              return t = i2 + r, s;
            }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function(t2) {
              clearTimeout(t2);
            });
          }();
          var bez = bezFunction();
          function dataFunctionManager() {
            function t(s2, a2, n2) {
              var o2, h2, l2, p2, c, m, f, d = s2.length;
              for (h2 = 0; h2 < d; h2 += 1)
                if ("ks" in (o2 = s2[h2]) && !o2.completed) {
                  if (o2.completed = true, o2.tt && (s2[h2 - 1].td = o2.tt), o2.hasMask) {
                    var u = o2.masksProperties;
                    for (p2 = u.length, l2 = 0; l2 < p2; l2 += 1)
                      if (u[l2].pt.k.i)
                        r(u[l2].pt.k);
                      else
                        for (m = u[l2].pt.k.length, c = 0; c < m; c += 1)
                          u[l2].pt.k[c].s && r(u[l2].pt.k[c].s[0]), u[l2].pt.k[c].e && r(u[l2].pt.k[c].e[0]);
                  }
                  0 === o2.ty ? (o2.layers = e(o2.refId, a2), t(o2.layers, a2, n2)) : 4 === o2.ty ? i(o2.shapes) : 5 === o2.ty && (0 !== (f = o2).t.a.length || "m" in f.t.p || (f.singleShape = true));
                }
            }
            function e(t2, e2) {
              for (var i2 = 0, r2 = e2.length; i2 < r2; ) {
                if (e2[i2].id === t2)
                  return e2[i2].layers.__used ? JSON.parse(JSON.stringify(e2[i2].layers)) : (e2[i2].layers.__used = true, e2[i2].layers);
                i2 += 1;
              }
              return null;
            }
            function i(t2) {
              var e2, s2, a2;
              for (e2 = t2.length - 1; e2 >= 0; e2 -= 1)
                if ("sh" === t2[e2].ty)
                  if (t2[e2].ks.k.i)
                    r(t2[e2].ks.k);
                  else
                    for (a2 = t2[e2].ks.k.length, s2 = 0; s2 < a2; s2 += 1)
                      t2[e2].ks.k[s2].s && r(t2[e2].ks.k[s2].s[0]), t2[e2].ks.k[s2].e && r(t2[e2].ks.k[s2].e[0]);
                else
                  "gr" === t2[e2].ty && i(t2[e2].it);
            }
            function r(t2) {
              var e2, i2 = t2.i.length;
              for (e2 = 0; e2 < i2; e2 += 1)
                t2.i[e2][0] += t2.v[e2][0], t2.i[e2][1] += t2.v[e2][1], t2.o[e2][0] += t2.v[e2][0], t2.o[e2][1] += t2.v[e2][1];
            }
            function s(t2, e2) {
              var i2 = e2 ? e2.split(".") : [100, 100, 100];
              return t2[0] > i2[0] || !(i2[0] > t2[0]) && (t2[1] > i2[1] || !(i2[1] > t2[1]) && (t2[2] > i2[2] || !(i2[2] > t2[2]) && null));
            }
            var a, n = function() {
              var t2 = [4, 4, 14];
              function e2(t3) {
                var e3, i2, r2, s2 = t3.length;
                for (e3 = 0; e3 < s2; e3 += 1)
                  5 === t3[e3].ty && (void 0, r2 = (i2 = t3[e3]).t.d, i2.t.d = { k: [{ s: r2, t: 0 }] });
              }
              return function(i2) {
                if (s(t2, i2.v) && (e2(i2.layers), i2.assets)) {
                  var r2, a2 = i2.assets.length;
                  for (r2 = 0; r2 < a2; r2 += 1)
                    i2.assets[r2].layers && e2(i2.assets[r2].layers);
                }
              };
            }(), o = (a = [4, 7, 99], function(t2) {
              if (t2.chars && !s(a, t2.v)) {
                var e2, i2, n2, o2, h2, l2 = t2.chars.length;
                for (e2 = 0; e2 < l2; e2 += 1)
                  if (t2.chars[e2].data && t2.chars[e2].data.shapes)
                    for (n2 = (h2 = t2.chars[e2].data.shapes[0].it).length, i2 = 0; i2 < n2; i2 += 1)
                      (o2 = h2[i2].ks.k).__converted || (r(h2[i2].ks.k), o2.__converted = true);
              }
            }), h = function() {
              var t2 = [4, 1, 9];
              function e2(t3) {
                var i3, r2, s2, a2 = t3.length;
                for (i3 = 0; i3 < a2; i3 += 1)
                  if ("gr" === t3[i3].ty)
                    e2(t3[i3].it);
                  else if ("fl" === t3[i3].ty || "st" === t3[i3].ty)
                    if (t3[i3].c.k && t3[i3].c.k[0].i)
                      for (s2 = t3[i3].c.k.length, r2 = 0; r2 < s2; r2 += 1)
                        t3[i3].c.k[r2].s && (t3[i3].c.k[r2].s[0] /= 255, t3[i3].c.k[r2].s[1] /= 255, t3[i3].c.k[r2].s[2] /= 255, t3[i3].c.k[r2].s[3] /= 255), t3[i3].c.k[r2].e && (t3[i3].c.k[r2].e[0] /= 255, t3[i3].c.k[r2].e[1] /= 255, t3[i3].c.k[r2].e[2] /= 255, t3[i3].c.k[r2].e[3] /= 255);
                    else
                      t3[i3].c.k[0] /= 255, t3[i3].c.k[1] /= 255, t3[i3].c.k[2] /= 255, t3[i3].c.k[3] /= 255;
              }
              function i2(t3) {
                var i3, r2 = t3.length;
                for (i3 = 0; i3 < r2; i3 += 1)
                  4 === t3[i3].ty && e2(t3[i3].shapes);
              }
              return function(e3) {
                if (s(t2, e3.v) && (i2(e3.layers), e3.assets)) {
                  var r2, a2 = e3.assets.length;
                  for (r2 = 0; r2 < a2; r2 += 1)
                    e3.assets[r2].layers && i2(e3.assets[r2].layers);
                }
              };
            }(), l = function() {
              var t2 = [4, 4, 18];
              function e2(t3) {
                var i3, r2, s2;
                for (i3 = t3.length - 1; i3 >= 0; i3 -= 1)
                  if ("sh" === t3[i3].ty)
                    if (t3[i3].ks.k.i)
                      t3[i3].ks.k.c = t3[i3].closed;
                    else
                      for (s2 = t3[i3].ks.k.length, r2 = 0; r2 < s2; r2 += 1)
                        t3[i3].ks.k[r2].s && (t3[i3].ks.k[r2].s[0].c = t3[i3].closed), t3[i3].ks.k[r2].e && (t3[i3].ks.k[r2].e[0].c = t3[i3].closed);
                  else
                    "gr" === t3[i3].ty && e2(t3[i3].it);
              }
              function i2(t3) {
                var i3, r2, s2, a2, n2, o2, h2 = t3.length;
                for (r2 = 0; r2 < h2; r2 += 1) {
                  if ((i3 = t3[r2]).hasMask) {
                    var l2 = i3.masksProperties;
                    for (a2 = l2.length, s2 = 0; s2 < a2; s2 += 1)
                      if (l2[s2].pt.k.i)
                        l2[s2].pt.k.c = l2[s2].cl;
                      else
                        for (o2 = l2[s2].pt.k.length, n2 = 0; n2 < o2; n2 += 1)
                          l2[s2].pt.k[n2].s && (l2[s2].pt.k[n2].s[0].c = l2[s2].cl), l2[s2].pt.k[n2].e && (l2[s2].pt.k[n2].e[0].c = l2[s2].cl);
                  }
                  4 === i3.ty && e2(i3.shapes);
                }
              }
              return function(e3) {
                if (s(t2, e3.v) && (i2(e3.layers), e3.assets)) {
                  var r2, a2 = e3.assets.length;
                  for (r2 = 0; r2 < a2; r2 += 1)
                    e3.assets[r2].layers && i2(e3.assets[r2].layers);
                }
              };
            }(), p = { completeData: function(e2, i2) {
              e2.__complete || (h(e2), n(e2), o(e2), l(e2), t(e2.layers, e2.assets, i2), e2.__complete = true);
            } };
            return p.checkColors = h, p.checkChars = o, p.checkShapes = l, p.completeLayers = t, p;
          }
          var dataManager = dataFunctionManager();
          function getFontProperties(t) {
            for (var e = t.fStyle ? t.fStyle.split(" ") : [], i = "normal", r = "normal", s = e.length, a = 0; a < s; a += 1)
              switch (e[a].toLowerCase()) {
                case "italic":
                  r = "italic";
                  break;
                case "bold":
                  i = "700";
                  break;
                case "black":
                  i = "900";
                  break;
                case "medium":
                  i = "500";
                  break;
                case "regular":
                case "normal":
                  i = "400";
                  break;
                case "light":
                case "thin":
                  i = "200";
              }
            return { style: r, weight: t.fWeight || i };
          }
          var FontManager = function() {
            var t = { w: 0, size: 0, shapes: [] }, e = [];
            function i(t2, e2) {
              var i2 = createTag("span");
              i2.setAttribute("aria-hidden", true), i2.style.fontFamily = e2;
              var r2 = createTag("span");
              r2.innerText = "giItT1WQy@!-/#", i2.style.position = "absolute", i2.style.left = "-10000px", i2.style.top = "-10000px", i2.style.fontSize = "300px", i2.style.fontVariant = "normal", i2.style.fontStyle = "normal", i2.style.fontWeight = "normal", i2.style.letterSpacing = "0", i2.appendChild(r2), document.body.appendChild(i2);
              var s2 = r2.offsetWidth;
              return r2.style.fontFamily = function(t3) {
                var e3, i3 = t3.split(","), r3 = i3.length, s3 = [];
                for (e3 = 0; e3 < r3; e3 += 1)
                  "sans-serif" !== i3[e3] && "monospace" !== i3[e3] && s3.push(i3[e3]);
                return s3.join(",");
              }(t2) + ", " + e2, { node: r2, w: s2, parent: i2 };
            }
            function r(t2, e2) {
              var i2 = createNS("text");
              i2.style.fontSize = "100px";
              var r2 = getFontProperties(e2);
              return i2.setAttribute("font-family", e2.fFamily), i2.setAttribute("font-style", r2.style), i2.setAttribute("font-weight", r2.weight), i2.textContent = "1", e2.fClass ? (i2.style.fontFamily = "inherit", i2.setAttribute("class", e2.fClass)) : i2.style.fontFamily = e2.fFamily, t2.appendChild(i2), createTag("canvas").getContext("2d").font = e2.fWeight + " " + e2.fStyle + " 100px " + e2.fFamily, i2;
            }
            e = e.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
            var s = function() {
              this.fonts = [], this.chars = null, this.typekitLoaded = 0, this.isLoaded = false, this._warned = false, this.initTime = Date.now(), this.setIsLoadedBinded = this.setIsLoaded.bind(this), this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);
            };
            return s.getCombinedCharacterCodes = function() {
              return e;
            }, s.prototype = { addChars: function(t2) {
              if (t2) {
                var e2;
                this.chars || (this.chars = []);
                var i2, r2, s2 = t2.length, a = this.chars.length;
                for (e2 = 0; e2 < s2; e2 += 1) {
                  for (i2 = 0, r2 = false; i2 < a; )
                    this.chars[i2].style === t2[e2].style && this.chars[i2].fFamily === t2[e2].fFamily && this.chars[i2].ch === t2[e2].ch && (r2 = true), i2 += 1;
                  r2 || (this.chars.push(t2[e2]), a += 1);
                }
              }
            }, addFonts: function(t2, e2) {
              if (t2) {
                if (this.chars)
                  return this.isLoaded = true, void (this.fonts = t2.list);
                var s2, a = t2.list, n = a.length, o = n;
                for (s2 = 0; s2 < n; s2 += 1) {
                  var h, l, p = true;
                  if (a[s2].loaded = false, a[s2].monoCase = i(a[s2].fFamily, "monospace"), a[s2].sansCase = i(a[s2].fFamily, "sans-serif"), a[s2].fPath) {
                    if ("p" === a[s2].fOrigin || 3 === a[s2].origin) {
                      if ((h = document.querySelectorAll('style[f-forigin="p"][f-family="' + a[s2].fFamily + '"], style[f-origin="3"][f-family="' + a[s2].fFamily + '"]')).length > 0 && (p = false), p) {
                        var c = createTag("style");
                        c.setAttribute("f-forigin", a[s2].fOrigin), c.setAttribute("f-origin", a[s2].origin), c.setAttribute("f-family", a[s2].fFamily), c.type = "text/css", c.innerText = "@font-face {font-family: " + a[s2].fFamily + "; font-style: normal; src: url('" + a[s2].fPath + "');}", e2.appendChild(c);
                      }
                    } else if ("g" === a[s2].fOrigin || 1 === a[s2].origin) {
                      for (h = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'), l = 0; l < h.length; l += 1)
                        -1 !== h[l].href.indexOf(a[s2].fPath) && (p = false);
                      if (p) {
                        var m = createTag("link");
                        m.setAttribute("f-forigin", a[s2].fOrigin), m.setAttribute("f-origin", a[s2].origin), m.type = "text/css", m.rel = "stylesheet", m.href = a[s2].fPath, document.body.appendChild(m);
                      }
                    } else if ("t" === a[s2].fOrigin || 2 === a[s2].origin) {
                      for (h = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'), l = 0; l < h.length; l += 1)
                        a[s2].fPath === h[l].src && (p = false);
                      if (p) {
                        var f = createTag("link");
                        f.setAttribute("f-forigin", a[s2].fOrigin), f.setAttribute("f-origin", a[s2].origin), f.setAttribute("rel", "stylesheet"), f.setAttribute("href", a[s2].fPath), e2.appendChild(f);
                      }
                    }
                  } else
                    a[s2].loaded = true, o -= 1;
                  a[s2].helper = r(e2, a[s2]), a[s2].cache = {}, this.fonts.push(a[s2]);
                }
                0 === o ? this.isLoaded = true : setTimeout(this.checkLoadedFonts.bind(this), 100);
              } else
                this.isLoaded = true;
            }, getCharData: function(e2, i2, r2) {
              for (var s2 = 0, a = this.chars.length; s2 < a; ) {
                if (this.chars[s2].ch === e2 && this.chars[s2].style === i2 && this.chars[s2].fFamily === r2)
                  return this.chars[s2];
                s2 += 1;
              }
              return ("string" == typeof e2 && 13 !== e2.charCodeAt(0) || !e2) && console && console.warn && !this._warned && (this._warned = true, console.warn("Missing character from exported characters list: ", e2, i2, r2)), t;
            }, getFontByName: function(t2) {
              for (var e2 = 0, i2 = this.fonts.length; e2 < i2; ) {
                if (this.fonts[e2].fName === t2)
                  return this.fonts[e2];
                e2 += 1;
              }
              return this.fonts[0];
            }, measureText: function(t2, e2, i2) {
              var r2 = this.getFontByName(e2), s2 = t2.charCodeAt(0);
              if (!r2.cache[s2 + 1]) {
                var a = r2.helper;
                if (" " === t2) {
                  a.textContent = "|" + t2 + "|";
                  var n = a.getComputedTextLength();
                  a.textContent = "||";
                  var o = a.getComputedTextLength();
                  r2.cache[s2 + 1] = (n - o) / 100;
                } else
                  a.textContent = t2, r2.cache[s2 + 1] = a.getComputedTextLength() / 100;
              }
              return r2.cache[s2 + 1] * i2;
            }, checkLoadedFonts: function() {
              var t2, e2, i2, r2 = this.fonts.length, s2 = r2;
              for (t2 = 0; t2 < r2; t2 += 1)
                this.fonts[t2].loaded ? s2 -= 1 : "n" === this.fonts[t2].fOrigin || 0 === this.fonts[t2].origin ? this.fonts[t2].loaded = true : (e2 = this.fonts[t2].monoCase.node, i2 = this.fonts[t2].monoCase.w, e2.offsetWidth !== i2 ? (s2 -= 1, this.fonts[t2].loaded = true) : (e2 = this.fonts[t2].sansCase.node, i2 = this.fonts[t2].sansCase.w, e2.offsetWidth !== i2 && (s2 -= 1, this.fonts[t2].loaded = true)), this.fonts[t2].loaded && (this.fonts[t2].sansCase.parent.parentNode.removeChild(this.fonts[t2].sansCase.parent), this.fonts[t2].monoCase.parent.parentNode.removeChild(this.fonts[t2].monoCase.parent)));
              0 !== s2 && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10);
            }, setIsLoaded: function() {
              this.isLoaded = true;
            } }, s;
          }(), PropertyFactory = function() {
            var t = initialDefaultFrame, e = Math.abs;
            function i(t2, e2) {
              var i2, s2 = this.offsetTime;
              "multidimensional" === this.propType && (i2 = createTypedArray("float32", this.pv.length));
              for (var a2, n2, o2, h2, l2, p2, c2, m, f = e2.lastIndex, d = f, u = this.keyframes.length - 1, y = true; y; ) {
                if (a2 = this.keyframes[d], n2 = this.keyframes[d + 1], d === u - 1 && t2 >= n2.t - s2) {
                  a2.h && (a2 = n2), f = 0;
                  break;
                }
                if (n2.t - s2 > t2) {
                  f = d;
                  break;
                }
                d < u - 1 ? d += 1 : (f = 0, y = false);
              }
              var g, v, b, P, E, x, S, C, A, _, k = n2.t - s2, T = a2.t - s2;
              if (a2.to) {
                a2.bezierData || (a2.bezierData = bez.buildBezierData(a2.s, n2.s || a2.e, a2.to, a2.ti));
                var w = a2.bezierData;
                if (t2 >= k || t2 < T) {
                  var M = t2 >= k ? w.points.length - 1 : 0;
                  for (h2 = w.points[M].point.length, o2 = 0; o2 < h2; o2 += 1)
                    i2[o2] = w.points[M].point[o2];
                } else {
                  a2.__fnct ? m = a2.__fnct : (m = BezierFactory.getBezierEasing(a2.o.x, a2.o.y, a2.i.x, a2.i.y, a2.n).get, a2.__fnct = m), l2 = m((t2 - T) / (k - T));
                  var D, F = w.segmentLength * l2, I = e2.lastFrame < t2 && e2._lastKeyframeIndex === d ? e2._lastAddedLength : 0;
                  for (c2 = e2.lastFrame < t2 && e2._lastKeyframeIndex === d ? e2._lastPoint : 0, y = true, p2 = w.points.length; y; ) {
                    if (I += w.points[c2].partialLength, 0 === F || 0 === l2 || c2 === w.points.length - 1) {
                      for (h2 = w.points[c2].point.length, o2 = 0; o2 < h2; o2 += 1)
                        i2[o2] = w.points[c2].point[o2];
                      break;
                    }
                    if (F >= I && F < I + w.points[c2 + 1].partialLength) {
                      for (D = (F - I) / w.points[c2 + 1].partialLength, h2 = w.points[c2].point.length, o2 = 0; o2 < h2; o2 += 1)
                        i2[o2] = w.points[c2].point[o2] + (w.points[c2 + 1].point[o2] - w.points[c2].point[o2]) * D;
                      break;
                    }
                    c2 < p2 - 1 ? c2 += 1 : y = false;
                  }
                  e2._lastPoint = c2, e2._lastAddedLength = I - w.points[c2].partialLength, e2._lastKeyframeIndex = d;
                }
              } else {
                var R, V, L, B, O;
                if (u = a2.s.length, g = n2.s || a2.e, this.sh && 1 !== a2.h)
                  if (t2 >= k)
                    i2[0] = g[0], i2[1] = g[1], i2[2] = g[2];
                  else if (t2 <= T)
                    i2[0] = a2.s[0], i2[1] = a2.s[1], i2[2] = a2.s[2];
                  else {
                    v = i2, P = (b = function(t3, e3, i3) {
                      var r2, s3, a3, n3, o3, h3 = [], l3 = t3[0], p3 = t3[1], c3 = t3[2], m2 = t3[3], f2 = e3[0], d2 = e3[1], u2 = e3[2], y2 = e3[3];
                      return (s3 = l3 * f2 + p3 * d2 + c3 * u2 + m2 * y2) < 0 && (s3 = -s3, f2 = -f2, d2 = -d2, u2 = -u2, y2 = -y2), 1 - s3 > 1e-6 ? (r2 = Math.acos(s3), a3 = Math.sin(r2), n3 = Math.sin((1 - i3) * r2) / a3, o3 = Math.sin(i3 * r2) / a3) : (n3 = 1 - i3, o3 = i3), h3[0] = n3 * l3 + o3 * f2, h3[1] = n3 * p3 + o3 * d2, h3[2] = n3 * c3 + o3 * u2, h3[3] = n3 * m2 + o3 * y2, h3;
                    }(r(a2.s), r(g), (t2 - T) / (k - T)))[0], E = b[1], x = b[2], S = b[3], C = Math.atan2(2 * E * S - 2 * P * x, 1 - 2 * E * E - 2 * x * x), A = Math.asin(2 * P * E + 2 * x * S), _ = Math.atan2(2 * P * S - 2 * E * x, 1 - 2 * P * P - 2 * x * x), v[0] = C / degToRads, v[1] = A / degToRads, v[2] = _ / degToRads;
                  }
                else
                  for (d = 0; d < u; d += 1)
                    1 !== a2.h && (t2 >= k ? l2 = 1 : t2 < T ? l2 = 0 : (a2.o.x.constructor === Array ? (a2.__fnct || (a2.__fnct = []), a2.__fnct[d] ? m = a2.__fnct[d] : (R = void 0 === a2.o.x[d] ? a2.o.x[0] : a2.o.x[d], V = void 0 === a2.o.y[d] ? a2.o.y[0] : a2.o.y[d], L = void 0 === a2.i.x[d] ? a2.i.x[0] : a2.i.x[d], B = void 0 === a2.i.y[d] ? a2.i.y[0] : a2.i.y[d], m = BezierFactory.getBezierEasing(R, V, L, B).get, a2.__fnct[d] = m)) : a2.__fnct ? m = a2.__fnct : (R = a2.o.x, V = a2.o.y, L = a2.i.x, B = a2.i.y, m = BezierFactory.getBezierEasing(R, V, L, B).get, a2.__fnct = m), l2 = m((t2 - T) / (k - T)))), g = n2.s || a2.e, O = 1 === a2.h ? a2.s[d] : a2.s[d] + (g[d] - a2.s[d]) * l2, "multidimensional" === this.propType ? i2[d] = O : i2 = O;
              }
              return e2.lastIndex = f, i2;
            }
            function r(t2) {
              var e2 = t2[0] * degToRads, i2 = t2[1] * degToRads, r2 = t2[2] * degToRads, s2 = Math.cos(e2 / 2), a2 = Math.cos(i2 / 2), n2 = Math.cos(r2 / 2), o2 = Math.sin(e2 / 2), h2 = Math.sin(i2 / 2), l2 = Math.sin(r2 / 2);
              return [o2 * h2 * n2 + s2 * a2 * l2, o2 * a2 * n2 + s2 * h2 * l2, s2 * h2 * n2 - o2 * a2 * l2, s2 * a2 * n2 - o2 * h2 * l2];
            }
            function s() {
              var e2 = this.comp.renderedFrame - this.offsetTime, i2 = this.keyframes[0].t - this.offsetTime, r2 = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
              if (!(e2 === this._caching.lastFrame || this._caching.lastFrame !== t && (this._caching.lastFrame >= r2 && e2 >= r2 || this._caching.lastFrame < i2 && e2 < i2))) {
                this._caching.lastFrame >= e2 && (this._caching._lastKeyframeIndex = -1, this._caching.lastIndex = 0);
                var s2 = this.interpolateValue(e2, this._caching);
                this.pv = s2;
              }
              return this._caching.lastFrame = e2, this.pv;
            }
            function a(t2) {
              var i2;
              if ("unidimensional" === this.propType)
                i2 = t2 * this.mult, e(this.v - i2) > 1e-5 && (this.v = i2, this._mdf = true);
              else
                for (var r2 = 0, s2 = this.v.length; r2 < s2; )
                  i2 = t2[r2] * this.mult, e(this.v[r2] - i2) > 1e-5 && (this.v[r2] = i2, this._mdf = true), r2 += 1;
            }
            function n() {
              if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
                if (this.lock)
                  this.setVValue(this.pv);
                else {
                  var t2;
                  this.lock = true, this._mdf = this._isFirstFrame;
                  var e2 = this.effectsSequence.length, i2 = this.kf ? this.pv : this.data.k;
                  for (t2 = 0; t2 < e2; t2 += 1)
                    i2 = this.effectsSequence[t2](i2);
                  this.setVValue(i2), this._isFirstFrame = false, this.lock = false, this.frameId = this.elem.globalData.frameId;
                }
            }
            function o(t2) {
              this.effectsSequence.push(t2), this.container.addDynamicProperty(this);
            }
            function h(t2, e2, i2, r2) {
              this.propType = "unidimensional", this.mult = i2 || 1, this.data = e2, this.v = i2 ? e2.k * i2 : e2.k, this.pv = e2.k, this._mdf = false, this.elem = t2, this.container = r2, this.comp = t2.comp, this.k = false, this.kf = false, this.vel = 0, this.effectsSequence = [], this._isFirstFrame = true, this.getValue = n, this.setVValue = a, this.addEffect = o;
            }
            function l(t2, e2, i2, r2) {
              var s2;
              this.propType = "multidimensional", this.mult = i2 || 1, this.data = e2, this._mdf = false, this.elem = t2, this.container = r2, this.comp = t2.comp, this.k = false, this.kf = false, this.frameId = -1;
              var h2 = e2.k.length;
              for (this.v = createTypedArray("float32", h2), this.pv = createTypedArray("float32", h2), this.vel = createTypedArray("float32", h2), s2 = 0; s2 < h2; s2 += 1)
                this.v[s2] = e2.k[s2] * this.mult, this.pv[s2] = e2.k[s2];
              this._isFirstFrame = true, this.effectsSequence = [], this.getValue = n, this.setVValue = a, this.addEffect = o;
            }
            function p(e2, r2, h2, l2) {
              this.propType = "unidimensional", this.keyframes = r2.k, this.offsetTime = e2.data.st, this.frameId = -1, this._caching = { lastFrame: t, lastIndex: 0, value: 0, _lastKeyframeIndex: -1 }, this.k = true, this.kf = true, this.data = r2, this.mult = h2 || 1, this.elem = e2, this.container = l2, this.comp = e2.comp, this.v = t, this.pv = t, this._isFirstFrame = true, this.getValue = n, this.setVValue = a, this.interpolateValue = i, this.effectsSequence = [s.bind(this)], this.addEffect = o;
            }
            function c(e2, r2, h2, l2) {
              var p2;
              this.propType = "multidimensional";
              var c2, m, f, d, u = r2.k.length;
              for (p2 = 0; p2 < u - 1; p2 += 1)
                r2.k[p2].to && r2.k[p2].s && r2.k[p2 + 1] && r2.k[p2 + 1].s && (c2 = r2.k[p2].s, m = r2.k[p2 + 1].s, f = r2.k[p2].to, d = r2.k[p2].ti, (2 === c2.length && (c2[0] !== m[0] || c2[1] !== m[1]) && bez.pointOnLine2D(c2[0], c2[1], m[0], m[1], c2[0] + f[0], c2[1] + f[1]) && bez.pointOnLine2D(c2[0], c2[1], m[0], m[1], m[0] + d[0], m[1] + d[1]) || 3 === c2.length && (c2[0] !== m[0] || c2[1] !== m[1] || c2[2] !== m[2]) && bez.pointOnLine3D(c2[0], c2[1], c2[2], m[0], m[1], m[2], c2[0] + f[0], c2[1] + f[1], c2[2] + f[2]) && bez.pointOnLine3D(c2[0], c2[1], c2[2], m[0], m[1], m[2], m[0] + d[0], m[1] + d[1], m[2] + d[2])) && (r2.k[p2].to = null, r2.k[p2].ti = null), c2[0] === m[0] && c2[1] === m[1] && 0 === f[0] && 0 === f[1] && 0 === d[0] && 0 === d[1] && (2 === c2.length || c2[2] === m[2] && 0 === f[2] && 0 === d[2]) && (r2.k[p2].to = null, r2.k[p2].ti = null));
              this.effectsSequence = [s.bind(this)], this.data = r2, this.keyframes = r2.k, this.offsetTime = e2.data.st, this.k = true, this.kf = true, this._isFirstFrame = true, this.mult = h2 || 1, this.elem = e2, this.container = l2, this.comp = e2.comp, this.getValue = n, this.setVValue = a, this.interpolateValue = i, this.frameId = -1;
              var y = r2.k[0].s.length;
              for (this.v = createTypedArray("float32", y), this.pv = createTypedArray("float32", y), p2 = 0; p2 < y; p2 += 1)
                this.v[p2] = t, this.pv[p2] = t;
              this._caching = { lastFrame: t, lastIndex: 0, value: createTypedArray("float32", y) }, this.addEffect = o;
            }
            return { getProp: function(t2, e2, i2, r2, s2) {
              var a2;
              if (e2.k.length)
                if ("number" == typeof e2.k[0])
                  a2 = new l(t2, e2, r2, s2);
                else
                  switch (i2) {
                    case 0:
                      a2 = new p(t2, e2, r2, s2);
                      break;
                    case 1:
                      a2 = new c(t2, e2, r2, s2);
                  }
              else
                a2 = new h(t2, e2, r2, s2);
              return a2.effectsSequence.length && s2.addDynamicProperty(a2), a2;
            } };
          }(), TransformPropertyFactory = function() {
            var t = [0, 0];
            function e(t2, e2, i) {
              if (this.elem = t2, this.frameId = -1, this.propType = "transform", this.data = e2, this.v = new Matrix(), this.pre = new Matrix(), this.appliedTransformations = 0, this.initDynamicPropertyContainer(i || t2), e2.p && e2.p.s ? (this.px = PropertyFactory.getProp(t2, e2.p.x, 0, 0, this), this.py = PropertyFactory.getProp(t2, e2.p.y, 0, 0, this), e2.p.z && (this.pz = PropertyFactory.getProp(t2, e2.p.z, 0, 0, this))) : this.p = PropertyFactory.getProp(t2, e2.p || { k: [0, 0, 0] }, 1, 0, this), e2.rx) {
                if (this.rx = PropertyFactory.getProp(t2, e2.rx, 0, degToRads, this), this.ry = PropertyFactory.getProp(t2, e2.ry, 0, degToRads, this), this.rz = PropertyFactory.getProp(t2, e2.rz, 0, degToRads, this), e2.or.k[0].ti) {
                  var r, s = e2.or.k.length;
                  for (r = 0; r < s; r += 1)
                    e2.or.k[r].to = null, e2.or.k[r].ti = null;
                }
                this.or = PropertyFactory.getProp(t2, e2.or, 1, degToRads, this), this.or.sh = true;
              } else
                this.r = PropertyFactory.getProp(t2, e2.r || { k: 0 }, 0, degToRads, this);
              e2.sk && (this.sk = PropertyFactory.getProp(t2, e2.sk, 0, degToRads, this), this.sa = PropertyFactory.getProp(t2, e2.sa, 0, degToRads, this)), this.a = PropertyFactory.getProp(t2, e2.a || { k: [0, 0, 0] }, 1, 0, this), this.s = PropertyFactory.getProp(t2, e2.s || { k: [100, 100, 100] }, 1, 0.01, this), e2.o ? this.o = PropertyFactory.getProp(t2, e2.o, 0, 0.01, t2) : this.o = { _mdf: false, v: 1 }, this._isDirty = true, this.dynamicProperties.length || this.getValue(true);
            }
            return e.prototype = { applyToMatrix: function(t2) {
              var e2 = this._mdf;
              this.iterateDynamicProperties(), this._mdf = this._mdf || e2, this.a && t2.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.s && t2.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && t2.skewFromAxis(-this.sk.v, this.sa.v), this.r ? t2.rotate(-this.r.v) : t2.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.data.p.s ? this.data.p.z ? t2.translate(this.px.v, this.py.v, -this.pz.v) : t2.translate(this.px.v, this.py.v, 0) : t2.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
            }, getValue: function(e2) {
              if (this.elem.globalData.frameId !== this.frameId) {
                if (this._isDirty && (this.precalculateMatrix(), this._isDirty = false), this.iterateDynamicProperties(), this._mdf || e2) {
                  var i;
                  if (this.v.cloneFromProps(this.pre.props), this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v), this.r && this.appliedTransformations < 4 ? this.v.rotate(-this.r.v) : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.autoOriented) {
                    var r, s;
                    if (i = this.elem.globalData.frameRate, this.p && this.p.keyframes && this.p.getValueAtTime)
                      this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t ? (r = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / i, 0), s = this.p.getValueAtTime(this.p.keyframes[0].t / i, 0)) : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t ? (r = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / i, 0), s = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / i, 0)) : (r = this.p.pv, s = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / i, this.p.offsetTime));
                    else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                      r = [], s = [];
                      var a = this.px, n = this.py;
                      a._caching.lastFrame + a.offsetTime <= a.keyframes[0].t ? (r[0] = a.getValueAtTime((a.keyframes[0].t + 0.01) / i, 0), r[1] = n.getValueAtTime((n.keyframes[0].t + 0.01) / i, 0), s[0] = a.getValueAtTime(a.keyframes[0].t / i, 0), s[1] = n.getValueAtTime(n.keyframes[0].t / i, 0)) : a._caching.lastFrame + a.offsetTime >= a.keyframes[a.keyframes.length - 1].t ? (r[0] = a.getValueAtTime(a.keyframes[a.keyframes.length - 1].t / i, 0), r[1] = n.getValueAtTime(n.keyframes[n.keyframes.length - 1].t / i, 0), s[0] = a.getValueAtTime((a.keyframes[a.keyframes.length - 1].t - 0.01) / i, 0), s[1] = n.getValueAtTime((n.keyframes[n.keyframes.length - 1].t - 0.01) / i, 0)) : (r = [a.pv, n.pv], s[0] = a.getValueAtTime((a._caching.lastFrame + a.offsetTime - 0.01) / i, a.offsetTime), s[1] = n.getValueAtTime((n._caching.lastFrame + n.offsetTime - 0.01) / i, n.offsetTime));
                    } else
                      r = s = t;
                    this.v.rotate(-Math.atan2(r[1] - s[1], r[0] - s[0]));
                  }
                  this.data.p && this.data.p.s ? this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                }
                this.frameId = this.elem.globalData.frameId;
              }
            }, precalculateMatrix: function() {
              if (!this.a.k && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.appliedTransformations = 1, !this.s.effectsSequence.length)) {
                if (this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.appliedTransformations = 2, this.sk) {
                  if (this.sk.effectsSequence.length || this.sa.effectsSequence.length)
                    return;
                  this.pre.skewFromAxis(-this.sk.v, this.sa.v), this.appliedTransformations = 3;
                }
                this.r ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v), this.appliedTransformations = 4) : this.rz.effectsSequence.length || this.ry.effectsSequence.length || this.rx.effectsSequence.length || this.or.effectsSequence.length || (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.appliedTransformations = 4);
              }
            }, autoOrient: function() {
            } }, extendPrototype([DynamicPropertyContainer], e), e.prototype.addDynamicProperty = function(t2) {
              this._addDynamicProperty(t2), this.elem.addDynamicProperty(t2), this._isDirty = true;
            }, e.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty, { getTransformProperty: function(t2, i, r) {
              return new e(t2, i, r);
            } };
          }();
          function ShapePath() {
            this.c = false, this._length = 0, this._maxLength = 8, this.v = createSizedArray(this._maxLength), this.o = createSizedArray(this._maxLength), this.i = createSizedArray(this._maxLength);
          }
          ShapePath.prototype.setPathData = function(t, e) {
            this.c = t, this.setLength(e);
            for (var i = 0; i < e; )
              this.v[i] = pointPool.newElement(), this.o[i] = pointPool.newElement(), this.i[i] = pointPool.newElement(), i += 1;
          }, ShapePath.prototype.setLength = function(t) {
            for (; this._maxLength < t; )
              this.doubleArrayLength();
            this._length = t;
          }, ShapePath.prototype.doubleArrayLength = function() {
            this.v = this.v.concat(createSizedArray(this._maxLength)), this.i = this.i.concat(createSizedArray(this._maxLength)), this.o = this.o.concat(createSizedArray(this._maxLength)), this._maxLength *= 2;
          }, ShapePath.prototype.setXYAt = function(t, e, i, r, s) {
            var a;
            switch (this._length = Math.max(this._length, r + 1), this._length >= this._maxLength && this.doubleArrayLength(), i) {
              case "v":
                a = this.v;
                break;
              case "i":
                a = this.i;
                break;
              case "o":
                a = this.o;
                break;
              default:
                a = [];
            }
            (!a[r] || a[r] && !s) && (a[r] = pointPool.newElement()), a[r][0] = t, a[r][1] = e;
          }, ShapePath.prototype.setTripleAt = function(t, e, i, r, s, a, n, o) {
            this.setXYAt(t, e, "v", n, o), this.setXYAt(i, r, "o", n, o), this.setXYAt(s, a, "i", n, o);
          }, ShapePath.prototype.reverse = function() {
            var t = new ShapePath();
            t.setPathData(this.c, this._length);
            var e = this.v, i = this.o, r = this.i, s = 0;
            this.c && (t.setTripleAt(e[0][0], e[0][1], r[0][0], r[0][1], i[0][0], i[0][1], 0, false), s = 1);
            var a, n = this._length - 1, o = this._length;
            for (a = s; a < o; a += 1)
              t.setTripleAt(e[n][0], e[n][1], r[n][0], r[n][1], i[n][0], i[n][1], a, false), n -= 1;
            return t;
          };
          var ShapePropertyFactory = function() {
            var t = -999999;
            function e(t2, e2, i2) {
              var r2, s2, a2, n2, o2, h2, l2, p2, c2, m = i2.lastIndex, f = this.keyframes;
              if (t2 < f[0].t - this.offsetTime)
                r2 = f[0].s[0], a2 = true, m = 0;
              else if (t2 >= f[f.length - 1].t - this.offsetTime)
                r2 = f[f.length - 1].s ? f[f.length - 1].s[0] : f[f.length - 2].e[0], a2 = true;
              else {
                for (var d, u, y = m, g = f.length - 1, v = true; v && (d = f[y], !((u = f[y + 1]).t - this.offsetTime > t2)); )
                  y < g - 1 ? y += 1 : v = false;
                if (m = y, !(a2 = 1 === d.h)) {
                  if (t2 >= u.t - this.offsetTime)
                    p2 = 1;
                  else if (t2 < d.t - this.offsetTime)
                    p2 = 0;
                  else {
                    var b;
                    d.__fnct ? b = d.__fnct : (b = BezierFactory.getBezierEasing(d.o.x, d.o.y, d.i.x, d.i.y).get, d.__fnct = b), p2 = b((t2 - (d.t - this.offsetTime)) / (u.t - this.offsetTime - (d.t - this.offsetTime)));
                  }
                  s2 = u.s ? u.s[0] : d.e[0];
                }
                r2 = d.s[0];
              }
              for (h2 = e2._length, l2 = r2.i[0].length, i2.lastIndex = m, n2 = 0; n2 < h2; n2 += 1)
                for (o2 = 0; o2 < l2; o2 += 1)
                  c2 = a2 ? r2.i[n2][o2] : r2.i[n2][o2] + (s2.i[n2][o2] - r2.i[n2][o2]) * p2, e2.i[n2][o2] = c2, c2 = a2 ? r2.o[n2][o2] : r2.o[n2][o2] + (s2.o[n2][o2] - r2.o[n2][o2]) * p2, e2.o[n2][o2] = c2, c2 = a2 ? r2.v[n2][o2] : r2.v[n2][o2] + (s2.v[n2][o2] - r2.v[n2][o2]) * p2, e2.v[n2][o2] = c2;
            }
            function i() {
              var e2 = this.comp.renderedFrame - this.offsetTime, i2 = this.keyframes[0].t - this.offsetTime, r2 = this.keyframes[this.keyframes.length - 1].t - this.offsetTime, s2 = this._caching.lastFrame;
              return s2 !== t && (s2 < i2 && e2 < i2 || s2 > r2 && e2 > r2) || (this._caching.lastIndex = s2 < e2 ? this._caching.lastIndex : 0, this.interpolateShape(e2, this.pv, this._caching)), this._caching.lastFrame = e2, this.pv;
            }
            function r() {
              this.paths = this.localShapeCollection;
            }
            function s(t2) {
              (function(t3, e2) {
                if (t3._length !== e2._length || t3.c !== e2.c)
                  return false;
                var i2, r2 = t3._length;
                for (i2 = 0; i2 < r2; i2 += 1)
                  if (t3.v[i2][0] !== e2.v[i2][0] || t3.v[i2][1] !== e2.v[i2][1] || t3.o[i2][0] !== e2.o[i2][0] || t3.o[i2][1] !== e2.o[i2][1] || t3.i[i2][0] !== e2.i[i2][0] || t3.i[i2][1] !== e2.i[i2][1])
                    return false;
                return true;
              })(this.v, t2) || (this.v = shapePool.clone(t2), this.localShapeCollection.releaseShapes(), this.localShapeCollection.addShape(this.v), this._mdf = true, this.paths = this.localShapeCollection);
            }
            function a() {
              if (this.elem.globalData.frameId !== this.frameId)
                if (this.effectsSequence.length)
                  if (this.lock)
                    this.setVValue(this.pv);
                  else {
                    var t2, e2;
                    this.lock = true, this._mdf = false, t2 = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
                    var i2 = this.effectsSequence.length;
                    for (e2 = 0; e2 < i2; e2 += 1)
                      t2 = this.effectsSequence[e2](t2);
                    this.setVValue(t2), this.lock = false, this.frameId = this.elem.globalData.frameId;
                  }
                else
                  this._mdf = false;
            }
            function n(t2, e2, i2) {
              this.propType = "shape", this.comp = t2.comp, this.container = t2, this.elem = t2, this.data = e2, this.k = false, this.kf = false, this._mdf = false;
              var s2 = 3 === i2 ? e2.pt.k : e2.ks.k;
              this.v = shapePool.clone(s2), this.pv = shapePool.clone(this.v), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.paths.addShape(this.v), this.reset = r, this.effectsSequence = [];
            }
            function o(t2) {
              this.effectsSequence.push(t2), this.container.addDynamicProperty(this);
            }
            function h(e2, s2, a2) {
              this.propType = "shape", this.comp = e2.comp, this.elem = e2, this.container = e2, this.offsetTime = e2.data.st, this.keyframes = 3 === a2 ? s2.pt.k : s2.ks.k, this.k = true, this.kf = true;
              var n2 = this.keyframes[0].s[0].i.length;
              this.v = shapePool.newElement(), this.v.setPathData(this.keyframes[0].s[0].c, n2), this.pv = shapePool.clone(this.v), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.paths.addShape(this.v), this.lastFrame = t, this.reset = r, this._caching = { lastFrame: t, lastIndex: 0 }, this.effectsSequence = [i.bind(this)];
            }
            n.prototype.interpolateShape = e, n.prototype.getValue = a, n.prototype.setVValue = s, n.prototype.addEffect = o, h.prototype.getValue = a, h.prototype.interpolateShape = e, h.prototype.setVValue = s, h.prototype.addEffect = o;
            var l = function() {
              var t2 = roundCorner;
              function e2(t3, e3) {
                this.v = shapePool.newElement(), this.v.setPathData(true, 4), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.paths = this.localShapeCollection, this.localShapeCollection.addShape(this.v), this.d = e3.d, this.elem = t3, this.comp = t3.comp, this.frameId = -1, this.initDynamicPropertyContainer(t3), this.p = PropertyFactory.getProp(t3, e3.p, 1, 0, this), this.s = PropertyFactory.getProp(t3, e3.s, 1, 0, this), this.dynamicProperties.length ? this.k = true : (this.k = false, this.convertEllToPath());
              }
              return e2.prototype = { reset: r, getValue: function() {
                this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertEllToPath());
              }, convertEllToPath: function() {
                var e3 = this.p.v[0], i2 = this.p.v[1], r2 = this.s.v[0] / 2, s2 = this.s.v[1] / 2, a2 = 3 !== this.d, n2 = this.v;
                n2.v[0][0] = e3, n2.v[0][1] = i2 - s2, n2.v[1][0] = a2 ? e3 + r2 : e3 - r2, n2.v[1][1] = i2, n2.v[2][0] = e3, n2.v[2][1] = i2 + s2, n2.v[3][0] = a2 ? e3 - r2 : e3 + r2, n2.v[3][1] = i2, n2.i[0][0] = a2 ? e3 - r2 * t2 : e3 + r2 * t2, n2.i[0][1] = i2 - s2, n2.i[1][0] = a2 ? e3 + r2 : e3 - r2, n2.i[1][1] = i2 - s2 * t2, n2.i[2][0] = a2 ? e3 + r2 * t2 : e3 - r2 * t2, n2.i[2][1] = i2 + s2, n2.i[3][0] = a2 ? e3 - r2 : e3 + r2, n2.i[3][1] = i2 + s2 * t2, n2.o[0][0] = a2 ? e3 + r2 * t2 : e3 - r2 * t2, n2.o[0][1] = i2 - s2, n2.o[1][0] = a2 ? e3 + r2 : e3 - r2, n2.o[1][1] = i2 + s2 * t2, n2.o[2][0] = a2 ? e3 - r2 * t2 : e3 + r2 * t2, n2.o[2][1] = i2 + s2, n2.o[3][0] = a2 ? e3 - r2 : e3 + r2, n2.o[3][1] = i2 - s2 * t2;
              } }, extendPrototype([DynamicPropertyContainer], e2), e2;
            }(), p = function() {
              function t2(t3, e2) {
                this.v = shapePool.newElement(), this.v.setPathData(true, 0), this.elem = t3, this.comp = t3.comp, this.data = e2, this.frameId = -1, this.d = e2.d, this.initDynamicPropertyContainer(t3), 1 === e2.sy ? (this.ir = PropertyFactory.getProp(t3, e2.ir, 0, 0, this), this.is = PropertyFactory.getProp(t3, e2.is, 0, 0.01, this), this.convertToPath = this.convertStarToPath) : this.convertToPath = this.convertPolygonToPath, this.pt = PropertyFactory.getProp(t3, e2.pt, 0, 0, this), this.p = PropertyFactory.getProp(t3, e2.p, 1, 0, this), this.r = PropertyFactory.getProp(t3, e2.r, 0, degToRads, this), this.or = PropertyFactory.getProp(t3, e2.or, 0, 0, this), this.os = PropertyFactory.getProp(t3, e2.os, 0, 0.01, this), this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.localShapeCollection.addShape(this.v), this.paths = this.localShapeCollection, this.dynamicProperties.length ? this.k = true : (this.k = false, this.convertToPath());
              }
              return t2.prototype = { reset: r, getValue: function() {
                this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertToPath());
              }, convertStarToPath: function() {
                var t3, e2, i2, r2, s2 = 2 * Math.floor(this.pt.v), a2 = 2 * Math.PI / s2, n2 = true, o2 = this.or.v, h2 = this.ir.v, l2 = this.os.v, p2 = this.is.v, c2 = 2 * Math.PI * o2 / (2 * s2), m = 2 * Math.PI * h2 / (2 * s2), f = -Math.PI / 2;
                f += this.r.v;
                var d = 3 === this.data.d ? -1 : 1;
                for (this.v._length = 0, t3 = 0; t3 < s2; t3 += 1) {
                  i2 = n2 ? l2 : p2, r2 = n2 ? c2 : m;
                  var u = (e2 = n2 ? o2 : h2) * Math.cos(f), y = e2 * Math.sin(f), g = 0 === u && 0 === y ? 0 : y / Math.sqrt(u * u + y * y), v = 0 === u && 0 === y ? 0 : -u / Math.sqrt(u * u + y * y);
                  u += +this.p.v[0], y += +this.p.v[1], this.v.setTripleAt(u, y, u - g * r2 * i2 * d, y - v * r2 * i2 * d, u + g * r2 * i2 * d, y + v * r2 * i2 * d, t3, true), n2 = !n2, f += a2 * d;
                }
              }, convertPolygonToPath: function() {
                var t3, e2 = Math.floor(this.pt.v), i2 = 2 * Math.PI / e2, r2 = this.or.v, s2 = this.os.v, a2 = 2 * Math.PI * r2 / (4 * e2), n2 = 0.5 * -Math.PI, o2 = 3 === this.data.d ? -1 : 1;
                for (n2 += this.r.v, this.v._length = 0, t3 = 0; t3 < e2; t3 += 1) {
                  var h2 = r2 * Math.cos(n2), l2 = r2 * Math.sin(n2), p2 = 0 === h2 && 0 === l2 ? 0 : l2 / Math.sqrt(h2 * h2 + l2 * l2), c2 = 0 === h2 && 0 === l2 ? 0 : -h2 / Math.sqrt(h2 * h2 + l2 * l2);
                  h2 += +this.p.v[0], l2 += +this.p.v[1], this.v.setTripleAt(h2, l2, h2 - p2 * a2 * s2 * o2, l2 - c2 * a2 * s2 * o2, h2 + p2 * a2 * s2 * o2, l2 + c2 * a2 * s2 * o2, t3, true), n2 += i2 * o2;
                }
                this.paths.length = 0, this.paths[0] = this.v;
              } }, extendPrototype([DynamicPropertyContainer], t2), t2;
            }(), c = function() {
              function t2(t3, e2) {
                this.v = shapePool.newElement(), this.v.c = true, this.localShapeCollection = shapeCollectionPool.newShapeCollection(), this.localShapeCollection.addShape(this.v), this.paths = this.localShapeCollection, this.elem = t3, this.comp = t3.comp, this.frameId = -1, this.d = e2.d, this.initDynamicPropertyContainer(t3), this.p = PropertyFactory.getProp(t3, e2.p, 1, 0, this), this.s = PropertyFactory.getProp(t3, e2.s, 1, 0, this), this.r = PropertyFactory.getProp(t3, e2.r, 0, 0, this), this.dynamicProperties.length ? this.k = true : (this.k = false, this.convertRectToPath());
              }
              return t2.prototype = { convertRectToPath: function() {
                var t3 = this.p.v[0], e2 = this.p.v[1], i2 = this.s.v[0] / 2, r2 = this.s.v[1] / 2, s2 = bmMin(i2, r2, this.r.v), a2 = s2 * (1 - roundCorner);
                this.v._length = 0, 2 === this.d || 1 === this.d ? (this.v.setTripleAt(t3 + i2, e2 - r2 + s2, t3 + i2, e2 - r2 + s2, t3 + i2, e2 - r2 + a2, 0, true), this.v.setTripleAt(t3 + i2, e2 + r2 - s2, t3 + i2, e2 + r2 - a2, t3 + i2, e2 + r2 - s2, 1, true), 0 !== s2 ? (this.v.setTripleAt(t3 + i2 - s2, e2 + r2, t3 + i2 - s2, e2 + r2, t3 + i2 - a2, e2 + r2, 2, true), this.v.setTripleAt(t3 - i2 + s2, e2 + r2, t3 - i2 + a2, e2 + r2, t3 - i2 + s2, e2 + r2, 3, true), this.v.setTripleAt(t3 - i2, e2 + r2 - s2, t3 - i2, e2 + r2 - s2, t3 - i2, e2 + r2 - a2, 4, true), this.v.setTripleAt(t3 - i2, e2 - r2 + s2, t3 - i2, e2 - r2 + a2, t3 - i2, e2 - r2 + s2, 5, true), this.v.setTripleAt(t3 - i2 + s2, e2 - r2, t3 - i2 + s2, e2 - r2, t3 - i2 + a2, e2 - r2, 6, true), this.v.setTripleAt(t3 + i2 - s2, e2 - r2, t3 + i2 - a2, e2 - r2, t3 + i2 - s2, e2 - r2, 7, true)) : (this.v.setTripleAt(t3 - i2, e2 + r2, t3 - i2 + a2, e2 + r2, t3 - i2, e2 + r2, 2), this.v.setTripleAt(t3 - i2, e2 - r2, t3 - i2, e2 - r2 + a2, t3 - i2, e2 - r2, 3))) : (this.v.setTripleAt(t3 + i2, e2 - r2 + s2, t3 + i2, e2 - r2 + a2, t3 + i2, e2 - r2 + s2, 0, true), 0 !== s2 ? (this.v.setTripleAt(t3 + i2 - s2, e2 - r2, t3 + i2 - s2, e2 - r2, t3 + i2 - a2, e2 - r2, 1, true), this.v.setTripleAt(t3 - i2 + s2, e2 - r2, t3 - i2 + a2, e2 - r2, t3 - i2 + s2, e2 - r2, 2, true), this.v.setTripleAt(t3 - i2, e2 - r2 + s2, t3 - i2, e2 - r2 + s2, t3 - i2, e2 - r2 + a2, 3, true), this.v.setTripleAt(t3 - i2, e2 + r2 - s2, t3 - i2, e2 + r2 - a2, t3 - i2, e2 + r2 - s2, 4, true), this.v.setTripleAt(t3 - i2 + s2, e2 + r2, t3 - i2 + s2, e2 + r2, t3 - i2 + a2, e2 + r2, 5, true), this.v.setTripleAt(t3 + i2 - s2, e2 + r2, t3 + i2 - a2, e2 + r2, t3 + i2 - s2, e2 + r2, 6, true), this.v.setTripleAt(t3 + i2, e2 + r2 - s2, t3 + i2, e2 + r2 - s2, t3 + i2, e2 + r2 - a2, 7, true)) : (this.v.setTripleAt(t3 - i2, e2 - r2, t3 - i2 + a2, e2 - r2, t3 - i2, e2 - r2, 1, true), this.v.setTripleAt(t3 - i2, e2 + r2, t3 - i2, e2 + r2 - a2, t3 - i2, e2 + r2, 2, true), this.v.setTripleAt(t3 + i2, e2 + r2, t3 + i2 - a2, e2 + r2, t3 + i2, e2 + r2, 3, true)));
              }, getValue: function() {
                this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf && this.convertRectToPath());
              }, reset: r }, extendPrototype([DynamicPropertyContainer], t2), t2;
            }();
            return { getShapeProp: function(t2, e2, i2) {
              var r2;
              return 3 === i2 || 4 === i2 ? r2 = (3 === i2 ? e2.pt : e2.ks).k.length ? new h(t2, e2, i2) : new n(t2, e2, i2) : 5 === i2 ? r2 = new c(t2, e2) : 6 === i2 ? r2 = new l(t2, e2) : 7 === i2 && (r2 = new p(t2, e2)), r2.k && t2.addDynamicProperty(r2), r2;
            }, getConstructorFunction: function() {
              return n;
            }, getKeyframedConstructorFunction: function() {
              return h;
            } };
          }(), ShapeModifiers = (ob = {}, modifiers = {}, ob.registerModifier = function(t, e) {
            modifiers[t] || (modifiers[t] = e);
          }, ob.getModifier = function(t, e, i) {
            return new modifiers[t](e, i);
          }, ob), ob, modifiers;
          function ShapeModifier() {
          }
          function TrimModifier() {
          }
          function RoundCornersModifier() {
          }
          function PuckerAndBloatModifier() {
          }
          function RepeaterModifier() {
          }
          function ShapeCollection() {
            this._length = 0, this._maxLength = 4, this.shapes = createSizedArray(this._maxLength);
          }
          function DashProperty(t, e, i, r) {
            var s;
            this.elem = t, this.frameId = -1, this.dataProps = createSizedArray(e.length), this.renderer = i, this.k = false, this.dashStr = "", this.dashArray = createTypedArray("float32", e.length ? e.length - 1 : 0), this.dashoffset = createTypedArray("float32", 1), this.initDynamicPropertyContainer(r);
            var a, n = e.length || 0;
            for (s = 0; s < n; s += 1)
              a = PropertyFactory.getProp(t, e[s].v, 0, 0, this), this.k = a.k || this.k, this.dataProps[s] = { n: e[s].n, p: a };
            this.k || this.getValue(true), this._isAnimated = this.k;
          }
          function GradientProperty(t, e, i) {
            this.data = e, this.c = createTypedArray("uint8c", 4 * e.p);
            var r = e.k.k[0].s ? e.k.k[0].s.length - 4 * e.p : e.k.k.length - 4 * e.p;
            this.o = createTypedArray("float32", r), this._cmdf = false, this._omdf = false, this._collapsable = this.checkCollapsable(), this._hasOpacity = r, this.initDynamicPropertyContainer(i), this.prop = PropertyFactory.getProp(t, e.k, 1, null, this), this.k = this.prop.k, this.getValue(true);
          }
          ShapeModifier.prototype.initModifierProperties = function() {
          }, ShapeModifier.prototype.addShapeToModifier = function() {
          }, ShapeModifier.prototype.addShape = function(t) {
            if (!this.closed) {
              t.sh.container.addDynamicProperty(t.sh);
              var e = { shape: t.sh, data: t, localShapeCollection: shapeCollectionPool.newShapeCollection() };
              this.shapes.push(e), this.addShapeToModifier(e), this._isAnimated && t.setAsAnimated();
            }
          }, ShapeModifier.prototype.init = function(t, e) {
            this.shapes = [], this.elem = t, this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e), this.frameId = initialDefaultFrame, this.closed = false, this.k = false, this.dynamicProperties.length ? this.k = true : this.getValue(true);
          }, ShapeModifier.prototype.processKeys = function() {
            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties());
          }, extendPrototype([DynamicPropertyContainer], ShapeModifier), extendPrototype([ShapeModifier], TrimModifier), TrimModifier.prototype.initModifierProperties = function(t, e) {
            this.s = PropertyFactory.getProp(t, e.s, 0, 0.01, this), this.e = PropertyFactory.getProp(t, e.e, 0, 0.01, this), this.o = PropertyFactory.getProp(t, e.o, 0, 0, this), this.sValue = 0, this.eValue = 0, this.getValue = this.processKeys, this.m = e.m, this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;
          }, TrimModifier.prototype.addShapeToModifier = function(t) {
            t.pathsData = [];
          }, TrimModifier.prototype.calculateShapeEdges = function(t, e, i, r, s) {
            var a = [];
            e <= 1 ? a.push({ s: t, e }) : t >= 1 ? a.push({ s: t - 1, e: e - 1 }) : (a.push({ s: t, e: 1 }), a.push({ s: 0, e: e - 1 }));
            var n, o, h = [], l = a.length;
            for (n = 0; n < l; n += 1) {
              var p, c;
              (o = a[n]).e * s < r || o.s * s > r + i || (p = o.s * s <= r ? 0 : (o.s * s - r) / i, c = o.e * s >= r + i ? 1 : (o.e * s - r) / i, h.push([p, c]));
            }
            return h.length || h.push([0, 0]), h;
          }, TrimModifier.prototype.releasePathsData = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
              segmentsLengthPool.release(t[e]);
            return t.length = 0, t;
          }, TrimModifier.prototype.processShapes = function(t) {
            var e, i, r, s;
            if (this._mdf || t) {
              var a = this.o.v % 360 / 360;
              if (a < 0 && (a += 1), (e = this.s.v > 1 ? 1 + a : this.s.v < 0 ? 0 + a : this.s.v + a) > (i = this.e.v > 1 ? 1 + a : this.e.v < 0 ? 0 + a : this.e.v + a)) {
                var n = e;
                e = i, i = n;
              }
              e = 1e-4 * Math.round(1e4 * e), i = 1e-4 * Math.round(1e4 * i), this.sValue = e, this.eValue = i;
            } else
              e = this.sValue, i = this.eValue;
            var o, h, l, p, c, m = this.shapes.length, f = 0;
            if (i === e)
              for (s = 0; s < m; s += 1)
                this.shapes[s].localShapeCollection.releaseShapes(), this.shapes[s].shape._mdf = true, this.shapes[s].shape.paths = this.shapes[s].localShapeCollection, this._mdf && (this.shapes[s].pathsData.length = 0);
            else if (1 === i && 0 === e || 0 === i && 1 === e) {
              if (this._mdf)
                for (s = 0; s < m; s += 1)
                  this.shapes[s].pathsData.length = 0, this.shapes[s].shape._mdf = true;
            } else {
              var d, u, y = [];
              for (s = 0; s < m; s += 1)
                if ((d = this.shapes[s]).shape._mdf || this._mdf || t || 2 === this.m) {
                  if (h = (r = d.shape.paths)._length, c = 0, !d.shape._mdf && d.pathsData.length)
                    c = d.totalShapeLength;
                  else {
                    for (l = this.releasePathsData(d.pathsData), o = 0; o < h; o += 1)
                      p = bez.getSegmentsLength(r.shapes[o]), l.push(p), c += p.totalLength;
                    d.totalShapeLength = c, d.pathsData = l;
                  }
                  f += c, d.shape._mdf = true;
                } else
                  d.shape.paths = d.localShapeCollection;
              var g, v = e, b = i, P = 0;
              for (s = m - 1; s >= 0; s -= 1)
                if ((d = this.shapes[s]).shape._mdf) {
                  for ((u = d.localShapeCollection).releaseShapes(), 2 === this.m && m > 1 ? (g = this.calculateShapeEdges(e, i, d.totalShapeLength, P, f), P += d.totalShapeLength) : g = [[v, b]], h = g.length, o = 0; o < h; o += 1) {
                    v = g[o][0], b = g[o][1], y.length = 0, b <= 1 ? y.push({ s: d.totalShapeLength * v, e: d.totalShapeLength * b }) : v >= 1 ? y.push({ s: d.totalShapeLength * (v - 1), e: d.totalShapeLength * (b - 1) }) : (y.push({ s: d.totalShapeLength * v, e: d.totalShapeLength }), y.push({ s: 0, e: d.totalShapeLength * (b - 1) }));
                    var E = this.addShapes(d, y[0]);
                    if (y[0].s !== y[0].e) {
                      if (y.length > 1)
                        if (d.shape.paths.shapes[d.shape.paths._length - 1].c) {
                          var x = E.pop();
                          this.addPaths(E, u), E = this.addShapes(d, y[1], x);
                        } else
                          this.addPaths(E, u), E = this.addShapes(d, y[1]);
                      this.addPaths(E, u);
                    }
                  }
                  d.shape.paths = u;
                }
            }
          }, TrimModifier.prototype.addPaths = function(t, e) {
            var i, r = t.length;
            for (i = 0; i < r; i += 1)
              e.addShape(t[i]);
          }, TrimModifier.prototype.addSegment = function(t, e, i, r, s, a, n) {
            s.setXYAt(e[0], e[1], "o", a), s.setXYAt(i[0], i[1], "i", a + 1), n && s.setXYAt(t[0], t[1], "v", a), s.setXYAt(r[0], r[1], "v", a + 1);
          }, TrimModifier.prototype.addSegmentFromArray = function(t, e, i, r) {
            e.setXYAt(t[1], t[5], "o", i), e.setXYAt(t[2], t[6], "i", i + 1), r && e.setXYAt(t[0], t[4], "v", i), e.setXYAt(t[3], t[7], "v", i + 1);
          }, TrimModifier.prototype.addShapes = function(t, e, i) {
            var r, s, a, n, o, h, l, p, c = t.pathsData, m = t.shape.paths.shapes, f = t.shape.paths._length, d = 0, u = [], y = true;
            for (i ? (o = i._length, p = i._length) : (i = shapePool.newElement(), o = 0, p = 0), u.push(i), r = 0; r < f; r += 1) {
              for (h = c[r].lengths, i.c = m[r].c, a = m[r].c ? h.length : h.length + 1, s = 1; s < a; s += 1)
                if (d + (n = h[s - 1]).addedLength < e.s)
                  d += n.addedLength, i.c = false;
                else {
                  if (d > e.e) {
                    i.c = false;
                    break;
                  }
                  e.s <= d && e.e >= d + n.addedLength ? (this.addSegment(m[r].v[s - 1], m[r].o[s - 1], m[r].i[s], m[r].v[s], i, o, y), y = false) : (l = bez.getNewSegment(m[r].v[s - 1], m[r].v[s], m[r].o[s - 1], m[r].i[s], (e.s - d) / n.addedLength, (e.e - d) / n.addedLength, h[s - 1]), this.addSegmentFromArray(l, i, o, y), y = false, i.c = false), d += n.addedLength, o += 1;
                }
              if (m[r].c && h.length) {
                if (n = h[s - 1], d <= e.e) {
                  var g = h[s - 1].addedLength;
                  e.s <= d && e.e >= d + g ? (this.addSegment(m[r].v[s - 1], m[r].o[s - 1], m[r].i[0], m[r].v[0], i, o, y), y = false) : (l = bez.getNewSegment(m[r].v[s - 1], m[r].v[0], m[r].o[s - 1], m[r].i[0], (e.s - d) / g, (e.e - d) / g, h[s - 1]), this.addSegmentFromArray(l, i, o, y), y = false, i.c = false);
                } else
                  i.c = false;
                d += n.addedLength, o += 1;
              }
              if (i._length && (i.setXYAt(i.v[p][0], i.v[p][1], "i", p), i.setXYAt(i.v[i._length - 1][0], i.v[i._length - 1][1], "o", i._length - 1)), d > e.e)
                break;
              r < f - 1 && (i = shapePool.newElement(), y = true, u.push(i), o = 0);
            }
            return u;
          }, ShapeModifiers.registerModifier("tm", TrimModifier), extendPrototype([ShapeModifier], RoundCornersModifier), RoundCornersModifier.prototype.initModifierProperties = function(t, e) {
            this.getValue = this.processKeys, this.rd = PropertyFactory.getProp(t, e.r, 0, null, this), this._isAnimated = !!this.rd.effectsSequence.length;
          }, RoundCornersModifier.prototype.processPath = function(t, e) {
            var i, r = shapePool.newElement();
            r.c = t.c;
            var s, a, n, o, h, l, p, c, m, f, d, u, y = t._length, g = 0;
            for (i = 0; i < y; i += 1)
              s = t.v[i], n = t.o[i], a = t.i[i], s[0] === n[0] && s[1] === n[1] && s[0] === a[0] && s[1] === a[1] ? 0 !== i && i !== y - 1 || t.c ? (o = 0 === i ? t.v[y - 1] : t.v[i - 1], l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0, p = d = s[0] + (o[0] - s[0]) * l, c = u = s[1] - (s[1] - o[1]) * l, m = p - (p - s[0]) * roundCorner, f = c - (c - s[1]) * roundCorner, r.setTripleAt(p, c, m, f, d, u, g), g += 1, o = i === y - 1 ? t.v[0] : t.v[i + 1], l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0, p = m = s[0] + (o[0] - s[0]) * l, c = f = s[1] + (o[1] - s[1]) * l, d = p - (p - s[0]) * roundCorner, u = c - (c - s[1]) * roundCorner, r.setTripleAt(p, c, m, f, d, u, g), g += 1) : (r.setTripleAt(s[0], s[1], n[0], n[1], a[0], a[1], g), g += 1) : (r.setTripleAt(t.v[i][0], t.v[i][1], t.o[i][0], t.o[i][1], t.i[i][0], t.i[i][1], g), g += 1);
            return r;
          }, RoundCornersModifier.prototype.processShapes = function(t) {
            var e, i, r, s, a, n, o = this.shapes.length, h = this.rd.v;
            if (0 !== h)
              for (i = 0; i < o; i += 1) {
                if (n = (a = this.shapes[i]).localShapeCollection, a.shape._mdf || this._mdf || t)
                  for (n.releaseShapes(), a.shape._mdf = true, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1)
                    n.addShape(this.processPath(e[r], h));
                a.shape.paths = a.localShapeCollection;
              }
            this.dynamicProperties.length || (this._mdf = false);
          }, ShapeModifiers.registerModifier("rd", RoundCornersModifier), extendPrototype([ShapeModifier], PuckerAndBloatModifier), PuckerAndBloatModifier.prototype.initModifierProperties = function(t, e) {
            this.getValue = this.processKeys, this.amount = PropertyFactory.getProp(t, e.a, 0, null, this), this._isAnimated = !!this.amount.effectsSequence.length;
          }, PuckerAndBloatModifier.prototype.processPath = function(t, e) {
            var i = e / 100, r = [0, 0], s = t._length, a = 0;
            for (a = 0; a < s; a += 1)
              r[0] += t.v[a][0], r[1] += t.v[a][1];
            r[0] /= s, r[1] /= s;
            var n, o, h, l, p, c, m = shapePool.newElement();
            for (m.c = t.c, a = 0; a < s; a += 1)
              n = t.v[a][0] + (r[0] - t.v[a][0]) * i, o = t.v[a][1] + (r[1] - t.v[a][1]) * i, h = t.o[a][0] + (r[0] - t.o[a][0]) * -i, l = t.o[a][1] + (r[1] - t.o[a][1]) * -i, p = t.i[a][0] + (r[0] - t.i[a][0]) * -i, c = t.i[a][1] + (r[1] - t.i[a][1]) * -i, m.setTripleAt(n, o, h, l, p, c, a);
            return m;
          }, PuckerAndBloatModifier.prototype.processShapes = function(t) {
            var e, i, r, s, a, n, o = this.shapes.length, h = this.amount.v;
            if (0 !== h)
              for (i = 0; i < o; i += 1) {
                if (n = (a = this.shapes[i]).localShapeCollection, a.shape._mdf || this._mdf || t)
                  for (n.releaseShapes(), a.shape._mdf = true, e = a.shape.paths.shapes, s = a.shape.paths._length, r = 0; r < s; r += 1)
                    n.addShape(this.processPath(e[r], h));
                a.shape.paths = a.localShapeCollection;
              }
            this.dynamicProperties.length || (this._mdf = false);
          }, ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier), extendPrototype([ShapeModifier], RepeaterModifier), RepeaterModifier.prototype.initModifierProperties = function(t, e) {
            this.getValue = this.processKeys, this.c = PropertyFactory.getProp(t, e.c, 0, null, this), this.o = PropertyFactory.getProp(t, e.o, 0, null, this), this.tr = TransformPropertyFactory.getTransformProperty(t, e.tr, this), this.so = PropertyFactory.getProp(t, e.tr.so, 0, 0.01, this), this.eo = PropertyFactory.getProp(t, e.tr.eo, 0, 0.01, this), this.data = e, this.dynamicProperties.length || this.getValue(true), this._isAnimated = !!this.dynamicProperties.length, this.pMatrix = new Matrix(), this.rMatrix = new Matrix(), this.sMatrix = new Matrix(), this.tMatrix = new Matrix(), this.matrix = new Matrix();
          }, RepeaterModifier.prototype.applyTransforms = function(t, e, i, r, s, a) {
            var n = a ? -1 : 1, o = r.s.v[0] + (1 - r.s.v[0]) * (1 - s), h = r.s.v[1] + (1 - r.s.v[1]) * (1 - s);
            t.translate(r.p.v[0] * n * s, r.p.v[1] * n * s, r.p.v[2]), e.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]), e.rotate(-r.r.v * n * s), e.translate(r.a.v[0], r.a.v[1], r.a.v[2]), i.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]), i.scale(a ? 1 / o : o, a ? 1 / h : h), i.translate(r.a.v[0], r.a.v[1], r.a.v[2]);
          }, RepeaterModifier.prototype.init = function(t, e, i, r) {
            for (this.elem = t, this.arr = e, this.pos = i, this.elemsData = r, this._currentCopies = 0, this._elements = [], this._groups = [], this.frameId = -1, this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e[i]); i > 0; )
              i -= 1, this._elements.unshift(e[i]);
            this.dynamicProperties.length ? this.k = true : this.getValue(true);
          }, RepeaterModifier.prototype.resetElements = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
              t[e]._processed = false, "gr" === t[e].ty && this.resetElements(t[e].it);
          }, RepeaterModifier.prototype.cloneElements = function(t) {
            var e = JSON.parse(JSON.stringify(t));
            return this.resetElements(e), e;
          }, RepeaterModifier.prototype.changeGroupRender = function(t, e) {
            var i, r = t.length;
            for (i = 0; i < r; i += 1)
              t[i]._render = e, "gr" === t[i].ty && this.changeGroupRender(t[i].it, e);
          }, RepeaterModifier.prototype.processShapes = function(t) {
            var e, i, r, s, a, n = false;
            if (this._mdf || t) {
              var o, h = Math.ceil(this.c.v);
              if (this._groups.length < h) {
                for (; this._groups.length < h; ) {
                  var l = { it: this.cloneElements(this._elements), ty: "gr" };
                  l.it.push({ a: { a: 0, ix: 1, k: [0, 0] }, nm: "Transform", o: { a: 0, ix: 7, k: 100 }, p: { a: 0, ix: 2, k: [0, 0] }, r: { a: 1, ix: 6, k: [{ s: 0, e: 0, t: 0 }, { s: 0, e: 0, t: 1 }] }, s: { a: 0, ix: 3, k: [100, 100] }, sa: { a: 0, ix: 5, k: 0 }, sk: { a: 0, ix: 4, k: 0 }, ty: "tr" }), this.arr.splice(0, 0, l), this._groups.splice(0, 0, l), this._currentCopies += 1;
                }
                this.elem.reloadShapes(), n = true;
              }
              for (a = 0, r = 0; r <= this._groups.length - 1; r += 1) {
                if (o = a < h, this._groups[r]._render = o, this.changeGroupRender(this._groups[r].it, o), !o) {
                  var p = this.elemsData[r].it, c = p[p.length - 1];
                  0 !== c.transform.op.v ? (c.transform.op._mdf = true, c.transform.op.v = 0) : c.transform.op._mdf = false;
                }
                a += 1;
              }
              this._currentCopies = h;
              var m = this.o.v, f = m % 1, d = m > 0 ? Math.floor(m) : Math.ceil(m), u = this.pMatrix.props, y = this.rMatrix.props, g = this.sMatrix.props;
              this.pMatrix.reset(), this.rMatrix.reset(), this.sMatrix.reset(), this.tMatrix.reset(), this.matrix.reset();
              var v, b, P = 0;
              if (m > 0) {
                for (; P < d; )
                  this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false), P += 1;
                f && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, f, false), P += f);
              } else if (m < 0) {
                for (; P > d; )
                  this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true), P -= 1;
                f && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -f, true), P -= f);
              }
              for (r = 1 === this.data.m ? 0 : this._currentCopies - 1, s = 1 === this.data.m ? 1 : -1, a = this._currentCopies; a; ) {
                if (b = (i = (e = this.elemsData[r].it)[e.length - 1].transform.mProps.v.props).length, e[e.length - 1].transform.mProps._mdf = true, e[e.length - 1].transform.op._mdf = true, e[e.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (r / (this._currentCopies - 1)), 0 !== P) {
                  for ((0 !== r && 1 === s || r !== this._currentCopies - 1 && -1 === s) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false), this.matrix.transform(y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], y[8], y[9], y[10], y[11], y[12], y[13], y[14], y[15]), this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]), this.matrix.transform(u[0], u[1], u[2], u[3], u[4], u[5], u[6], u[7], u[8], u[9], u[10], u[11], u[12], u[13], u[14], u[15]), v = 0; v < b; v += 1)
                    i[v] = this.matrix.props[v];
                  this.matrix.reset();
                } else
                  for (this.matrix.reset(), v = 0; v < b; v += 1)
                    i[v] = this.matrix.props[v];
                P += 1, a -= 1, r += s;
              }
            } else
              for (a = this._currentCopies, r = 0, s = 1; a; )
                i = (e = this.elemsData[r].it)[e.length - 1].transform.mProps.v.props, e[e.length - 1].transform.mProps._mdf = false, e[e.length - 1].transform.op._mdf = false, a -= 1, r += s;
            return n;
          }, RepeaterModifier.prototype.addShape = function() {
          }, ShapeModifiers.registerModifier("rp", RepeaterModifier), ShapeCollection.prototype.addShape = function(t) {
            this._length === this._maxLength && (this.shapes = this.shapes.concat(createSizedArray(this._maxLength)), this._maxLength *= 2), this.shapes[this._length] = t, this._length += 1;
          }, ShapeCollection.prototype.releaseShapes = function() {
            var t;
            for (t = 0; t < this._length; t += 1)
              shapePool.release(this.shapes[t]);
            this._length = 0;
          }, DashProperty.prototype.getValue = function(t) {
            if ((this.elem.globalData.frameId !== this.frameId || t) && (this.frameId = this.elem.globalData.frameId, this.iterateDynamicProperties(), this._mdf = this._mdf || t, this._mdf)) {
              var e = 0, i = this.dataProps.length;
              for ("svg" === this.renderer && (this.dashStr = ""), e = 0; e < i; e += 1)
                "o" !== this.dataProps[e].n ? "svg" === this.renderer ? this.dashStr += " " + this.dataProps[e].p.v : this.dashArray[e] = this.dataProps[e].p.v : this.dashoffset[0] = this.dataProps[e].p.v;
            }
          }, extendPrototype([DynamicPropertyContainer], DashProperty), GradientProperty.prototype.comparePoints = function(t, e) {
            for (var i = 0, r = this.o.length / 2; i < r; ) {
              if (Math.abs(t[4 * i] - t[4 * e + 2 * i]) > 0.01)
                return false;
              i += 1;
            }
            return true;
          }, GradientProperty.prototype.checkCollapsable = function() {
            if (this.o.length / 2 != this.c.length / 4)
              return false;
            if (this.data.k.k[0].s)
              for (var t = 0, e = this.data.k.k.length; t < e; ) {
                if (!this.comparePoints(this.data.k.k[t].s, this.data.p))
                  return false;
                t += 1;
              }
            else if (!this.comparePoints(this.data.k.k, this.data.p))
              return false;
            return true;
          }, GradientProperty.prototype.getValue = function(t) {
            if (this.prop.getValue(), this._mdf = false, this._cmdf = false, this._omdf = false, this.prop._mdf || t) {
              var e, i, r, s = 4 * this.data.p;
              for (e = 0; e < s; e += 1)
                i = e % 4 == 0 ? 100 : 255, r = Math.round(this.prop.v[e] * i), this.c[e] !== r && (this.c[e] = r, this._cmdf = !t);
              if (this.o.length)
                for (s = this.prop.v.length, e = 4 * this.data.p; e < s; e += 1)
                  i = e % 2 == 0 ? 100 : 1, r = e % 2 == 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e], this.o[e - 4 * this.data.p] !== r && (this.o[e - 4 * this.data.p] = r, this._omdf = !t);
              this._mdf = !t;
            }
          }, extendPrototype([DynamicPropertyContainer], GradientProperty);
          var buildShapeString = function(t, e, i, r) {
            if (0 === e)
              return "";
            var s, a = t.o, n = t.i, o = t.v, h = " M" + r.applyToPointStringified(o[0][0], o[0][1]);
            for (s = 1; s < e; s += 1)
              h += " C" + r.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + r.applyToPointStringified(n[s][0], n[s][1]) + " " + r.applyToPointStringified(o[s][0], o[s][1]);
            return i && e && (h += " C" + r.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + r.applyToPointStringified(n[0][0], n[0][1]) + " " + r.applyToPointStringified(o[0][0], o[0][1]), h += "z"), h;
          }, audioControllerFactory = function() {
            function t(t2) {
              this.audios = [], this.audioFactory = t2, this._volume = 1, this._isMuted = false;
            }
            return t.prototype = { addAudio: function(t2) {
              this.audios.push(t2);
            }, pause: function() {
              var t2, e = this.audios.length;
              for (t2 = 0; t2 < e; t2 += 1)
                this.audios[t2].pause();
            }, resume: function() {
              var t2, e = this.audios.length;
              for (t2 = 0; t2 < e; t2 += 1)
                this.audios[t2].resume();
            }, setRate: function(t2) {
              var e, i = this.audios.length;
              for (e = 0; e < i; e += 1)
                this.audios[e].setRate(t2);
            }, createAudio: function(t2) {
              return this.audioFactory ? this.audioFactory(t2) : Howl ? new Howl({ src: [t2] }) : { isPlaying: false, play: function() {
                this.isPlaying = true;
              }, seek: function() {
                this.isPlaying = false;
              }, playing: function() {
              }, rate: function() {
              }, setVolume: function() {
              } };
            }, setAudioFactory: function(t2) {
              this.audioFactory = t2;
            }, setVolume: function(t2) {
              this._volume = t2, this._updateVolume();
            }, mute: function() {
              this._isMuted = true, this._updateVolume();
            }, unmute: function() {
              this._isMuted = false, this._updateVolume();
            }, getVolume: function() {
              return this._volume;
            }, _updateVolume: function() {
              var t2, e = this.audios.length;
              for (t2 = 0; t2 < e; t2 += 1)
                this.audios[t2].volume(this._volume * (this._isMuted ? 0 : 1));
            } }, function() {
              return new t();
            };
          }(), ImagePreloader = function() {
            var t = function() {
              var t2 = createTag("canvas");
              t2.width = 1, t2.height = 1;
              var e2 = t2.getContext("2d");
              return e2.fillStyle = "rgba(0,0,0,0)", e2.fillRect(0, 0, 1, 1), t2;
            }();
            function e() {
              this.loadedAssets += 1, this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);
            }
            function i() {
              this.loadedFootagesCount += 1, this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);
            }
            function r(t2, e2, i2) {
              var r2 = "";
              if (t2.e)
                r2 = t2.p;
              else if (e2) {
                var s2 = t2.p;
                -1 !== s2.indexOf("images/") && (s2 = s2.split("/")[1]), r2 = e2 + s2;
              } else
                r2 = i2, r2 += t2.u ? t2.u : "", r2 += t2.p;
              return r2;
            }
            function s(t2) {
              var e2 = 0, i2 = setInterval(function() {
                (t2.getBBox().width || e2 > 500) && (this._imageLoaded(), clearInterval(i2)), e2 += 1;
              }.bind(this), 50);
            }
            function a(t2) {
              var e2 = { assetData: t2 }, i2 = r(t2, this.assetsPath, this.path);
              return assetLoader.load(i2, function(t3) {
                e2.img = t3, this._footageLoaded();
              }.bind(this), function() {
                e2.img = {}, this._footageLoaded();
              }.bind(this)), e2;
            }
            function n() {
              this._imageLoaded = e.bind(this), this._footageLoaded = i.bind(this), this.testImageLoaded = s.bind(this), this.createFootageData = a.bind(this), this.assetsPath = "", this.path = "", this.totalImages = 0, this.totalFootages = 0, this.loadedAssets = 0, this.loadedFootagesCount = 0, this.imagesLoadedCb = null, this.images = [];
            }
            return n.prototype = { loadAssets: function(t2, e2) {
              var i2;
              this.imagesLoadedCb = e2;
              var r2 = t2.length;
              for (i2 = 0; i2 < r2; i2 += 1)
                t2[i2].layers || (t2[i2].t ? 3 === t2[i2].t && (this.totalFootages += 1, this.images.push(this.createFootageData(t2[i2]))) : (this.totalImages += 1, this.images.push(this._createImageData(t2[i2]))));
            }, setAssetsPath: function(t2) {
              this.assetsPath = t2 || "";
            }, setPath: function(t2) {
              this.path = t2 || "";
            }, loadedImages: function() {
              return this.totalImages === this.loadedAssets;
            }, loadedFootages: function() {
              return this.totalFootages === this.loadedFootagesCount;
            }, destroy: function() {
              this.imagesLoadedCb = null, this.images.length = 0;
            }, getAsset: function(t2) {
              for (var e2 = 0, i2 = this.images.length; e2 < i2; ) {
                if (this.images[e2].assetData === t2)
                  return this.images[e2].img;
                e2 += 1;
              }
              return null;
            }, createImgData: function(e2) {
              var i2 = r(e2, this.assetsPath, this.path), s2 = createTag("img");
              s2.crossOrigin = "anonymous", s2.addEventListener("load", this._imageLoaded, false), s2.addEventListener("error", function() {
                a2.img = t, this._imageLoaded();
              }.bind(this), false), s2.src = i2;
              var a2 = { img: s2, assetData: e2 };
              return a2;
            }, createImageData: function(e2) {
              var i2 = r(e2, this.assetsPath, this.path), s2 = createNS("image");
              isSafari ? this.testImageLoaded(s2) : s2.addEventListener("load", this._imageLoaded, false), s2.addEventListener("error", function() {
                a2.img = t, this._imageLoaded();
              }.bind(this), false), s2.setAttributeNS("http://www.w3.org/1999/xlink", "href", i2), this._elementHelper.append ? this._elementHelper.append(s2) : this._elementHelper.appendChild(s2);
              var a2 = { img: s2, assetData: e2 };
              return a2;
            }, imageLoaded: e, footageLoaded: i, setCacheType: function(t2, e2) {
              "svg" === t2 ? (this._elementHelper = e2, this._createImageData = this.createImageData.bind(this)) : this._createImageData = this.createImgData.bind(this);
            } }, n;
          }(), featureSupport = function() {
            var t = { maskType: true };
            return (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (t.maskType = false), t;
          }(), filtersFactory = { createFilter: function(t, e) {
            var i = createNS("filter");
            return i.setAttribute("id", t), true !== e && (i.setAttribute("filterUnits", "objectBoundingBox"), i.setAttribute("x", "0%"), i.setAttribute("y", "0%"), i.setAttribute("width", "100%"), i.setAttribute("height", "100%")), i;
          }, createAlphaToLuminanceFilter: function() {
            var t = createNS("feColorMatrix");
            return t.setAttribute("type", "matrix"), t.setAttribute("color-interpolation-filters", "sRGB"), t.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"), t;
          } }, assetLoader = function() {
            function t(t2) {
              return t2.response && "object" == typeof t2.response ? t2.response : t2.response && "string" == typeof t2.response ? JSON.parse(t2.response) : t2.responseText ? JSON.parse(t2.responseText) : null;
            }
            return { load: function(e, i, r) {
              var s, a = new XMLHttpRequest();
              try {
                a.responseType = "json";
              } catch (t2) {
              }
              a.onreadystatechange = function() {
                if (4 === a.readyState)
                  if (200 === a.status)
                    s = t(a), i(s);
                  else
                    try {
                      s = t(a), i(s);
                    } catch (t2) {
                      r && r(t2);
                    }
              }, a.open("GET", e, true), a.send();
            } };
          }();
          function TextAnimatorProperty(t, e, i) {
            this._isFirstFrame = true, this._hasMaskedPath = false, this._frameId = -1, this._textData = t, this._renderType = e, this._elem = i, this._animatorsData = createSizedArray(this._textData.a.length), this._pathData = {}, this._moreOptions = { alignment: {} }, this.renderedLetters = [], this.lettersChangedFlag = false, this.initDynamicPropertyContainer(i);
          }
          function TextAnimatorDataProperty(t, e, i) {
            var r = { propType: false }, s = PropertyFactory.getProp, a = e.a;
            this.a = { r: a.r ? s(t, a.r, 0, degToRads, i) : r, rx: a.rx ? s(t, a.rx, 0, degToRads, i) : r, ry: a.ry ? s(t, a.ry, 0, degToRads, i) : r, sk: a.sk ? s(t, a.sk, 0, degToRads, i) : r, sa: a.sa ? s(t, a.sa, 0, degToRads, i) : r, s: a.s ? s(t, a.s, 1, 0.01, i) : r, a: a.a ? s(t, a.a, 1, 0, i) : r, o: a.o ? s(t, a.o, 0, 0.01, i) : r, p: a.p ? s(t, a.p, 1, 0, i) : r, sw: a.sw ? s(t, a.sw, 0, 0, i) : r, sc: a.sc ? s(t, a.sc, 1, 0, i) : r, fc: a.fc ? s(t, a.fc, 1, 0, i) : r, fh: a.fh ? s(t, a.fh, 0, 0, i) : r, fs: a.fs ? s(t, a.fs, 0, 0.01, i) : r, fb: a.fb ? s(t, a.fb, 0, 0.01, i) : r, t: a.t ? s(t, a.t, 0, 0, i) : r }, this.s = TextSelectorProp.getTextSelectorProp(t, e.s, i), this.s.t = e.s.t;
          }
          function LetterProps(t, e, i, r, s, a) {
            this.o = t, this.sw = e, this.sc = i, this.fc = r, this.m = s, this.p = a, this._mdf = { o: true, sw: !!e, sc: !!i, fc: !!r, m: true, p: true };
          }
          function TextProperty(t, e) {
            this._frameId = initialDefaultFrame, this.pv = "", this.v = "", this.kf = false, this._isFirstFrame = true, this._mdf = false, this.data = e, this.elem = t, this.comp = this.elem.comp, this.keysIndex = 0, this.canResize = false, this.minimumFontSize = 1, this.effectsSequence = [], this.currentData = { ascent: 0, boxWidth: this.defaultBoxWidth, f: "", fStyle: "", fWeight: "", fc: "", j: "", justifyOffset: "", l: [], lh: 0, lineWidths: [], ls: "", of: "", s: "", sc: "", sw: 0, t: 0, tr: 0, sz: 0, ps: null, fillColorAnim: false, strokeColorAnim: false, strokeWidthAnim: false, yOffset: 0, finalSize: 0, finalText: [], finalLineHeight: 0, __complete: false }, this.copyData(this.currentData, this.data.d.k[0].s), this.searchProperty() || this.completeTextData(this.currentData);
          }
          TextAnimatorProperty.prototype.searchProperties = function() {
            var t, e, i = this._textData.a.length, r = PropertyFactory.getProp;
            for (t = 0; t < i; t += 1)
              e = this._textData.a[t], this._animatorsData[t] = new TextAnimatorDataProperty(this._elem, e, this);
            this._textData.p && "m" in this._textData.p ? (this._pathData = { f: r(this._elem, this._textData.p.f, 0, 0, this), l: r(this._elem, this._textData.p.l, 0, 0, this), r: this._textData.p.r, m: this._elem.maskManager.getMaskProperty(this._textData.p.m) }, this._hasMaskedPath = true) : this._hasMaskedPath = false, this._moreOptions.alignment = r(this._elem, this._textData.m.a, 1, 0, this);
          }, TextAnimatorProperty.prototype.getMeasures = function(t, e) {
            if (this.lettersChangedFlag = e, this._mdf || this._isFirstFrame || e || this._hasMaskedPath && this._pathData.m._mdf) {
              this._isFirstFrame = false;
              var i, r, s, a, n, o, h, l, p, c, m, f, d, u, y, g, v, b, P, E = this._moreOptions.alignment.v, x = this._animatorsData, S = this._textData, C = this.mHelper, A = this._renderType, _ = this.renderedLetters.length, k = t.l;
              if (this._hasMaskedPath) {
                if (P = this._pathData.m, !this._pathData.n || this._pathData._mdf) {
                  var T, w = P.v;
                  for (this._pathData.r && (w = w.reverse()), n = { tLength: 0, segments: [] }, a = w._length - 1, g = 0, s = 0; s < a; s += 1)
                    T = bez.buildBezierData(w.v[s], w.v[s + 1], [w.o[s][0] - w.v[s][0], w.o[s][1] - w.v[s][1]], [w.i[s + 1][0] - w.v[s + 1][0], w.i[s + 1][1] - w.v[s + 1][1]]), n.tLength += T.segmentLength, n.segments.push(T), g += T.segmentLength;
                  s = a, P.v.c && (T = bez.buildBezierData(w.v[s], w.v[0], [w.o[s][0] - w.v[s][0], w.o[s][1] - w.v[s][1]], [w.i[0][0] - w.v[0][0], w.i[0][1] - w.v[0][1]]), n.tLength += T.segmentLength, n.segments.push(T), g += T.segmentLength), this._pathData.pi = n;
                }
                if (n = this._pathData.pi, o = this._pathData.f.v, m = 0, c = 1, l = 0, p = true, u = n.segments, o < 0 && P.v.c)
                  for (n.tLength < Math.abs(o) && (o = -Math.abs(o) % n.tLength), c = (d = u[m = u.length - 1].points).length - 1; o < 0; )
                    o += d[c].partialLength, (c -= 1) < 0 && (c = (d = u[m -= 1].points).length - 1);
                f = (d = u[m].points)[c - 1], y = (h = d[c]).partialLength;
              }
              a = k.length, i = 0, r = 0;
              var M, D, F, I, R, V = 1.2 * t.finalSize * 0.714, L = true;
              F = x.length;
              var B, O, G, z, N, H, j, q, W, Y, $, X, K = -1, U = o, J = m, Z = c, Q = -1, tt = "", et = this.defaultPropsArray;
              if (2 === t.j || 1 === t.j) {
                var it = 0, rt = 0, st = 2 === t.j ? -0.5 : -1, at = 0, nt = true;
                for (s = 0; s < a; s += 1)
                  if (k[s].n) {
                    for (it && (it += rt); at < s; )
                      k[at].animatorJustifyOffset = it, at += 1;
                    it = 0, nt = true;
                  } else {
                    for (D = 0; D < F; D += 1)
                      (M = x[D].a).t.propType && (nt && 2 === t.j && (rt += M.t.v * st), (R = x[D].s.getMult(k[s].anIndexes[D], S.a[D].s.totalChars)).length ? it += M.t.v * R[0] * st : it += M.t.v * R * st);
                    nt = false;
                  }
                for (it && (it += rt); at < s; )
                  k[at].animatorJustifyOffset = it, at += 1;
              }
              for (s = 0; s < a; s += 1) {
                if (C.reset(), z = 1, k[s].n)
                  i = 0, r += t.yOffset, r += L ? 1 : 0, o = U, L = false, this._hasMaskedPath && (c = Z, f = (d = u[m = J].points)[c - 1], y = (h = d[c]).partialLength, l = 0), tt = "", $ = "", W = "", X = "", et = this.defaultPropsArray;
                else {
                  if (this._hasMaskedPath) {
                    if (Q !== k[s].line) {
                      switch (t.j) {
                        case 1:
                          o += g - t.lineWidths[k[s].line];
                          break;
                        case 2:
                          o += (g - t.lineWidths[k[s].line]) / 2;
                      }
                      Q = k[s].line;
                    }
                    K !== k[s].ind && (k[K] && (o += k[K].extra), o += k[s].an / 2, K = k[s].ind), o += E[0] * k[s].an * 5e-3;
                    var ot = 0;
                    for (D = 0; D < F; D += 1)
                      (M = x[D].a).p.propType && ((R = x[D].s.getMult(k[s].anIndexes[D], S.a[D].s.totalChars)).length ? ot += M.p.v[0] * R[0] : ot += M.p.v[0] * R), M.a.propType && ((R = x[D].s.getMult(k[s].anIndexes[D], S.a[D].s.totalChars)).length ? ot += M.a.v[0] * R[0] : ot += M.a.v[0] * R);
                    for (p = true; p; )
                      l + y >= o + ot || !d ? (v = (o + ot - l) / h.partialLength, O = f.point[0] + (h.point[0] - f.point[0]) * v, G = f.point[1] + (h.point[1] - f.point[1]) * v, C.translate(-E[0] * k[s].an * 5e-3, -E[1] * V * 0.01), p = false) : d && (l += h.partialLength, (c += 1) >= d.length && (c = 0, u[m += 1] ? d = u[m].points : P.v.c ? (c = 0, d = u[m = 0].points) : (l -= h.partialLength, d = null)), d && (f = h, y = (h = d[c]).partialLength));
                    B = k[s].an / 2 - k[s].add, C.translate(-B, 0, 0);
                  } else
                    B = k[s].an / 2 - k[s].add, C.translate(-B, 0, 0), C.translate(-E[0] * k[s].an * 5e-3, -E[1] * V * 0.01, 0);
                  for (D = 0; D < F; D += 1)
                    (M = x[D].a).t.propType && (R = x[D].s.getMult(k[s].anIndexes[D], S.a[D].s.totalChars), 0 === i && 0 === t.j || (this._hasMaskedPath ? R.length ? o += M.t.v * R[0] : o += M.t.v * R : R.length ? i += M.t.v * R[0] : i += M.t.v * R));
                  for (t.strokeWidthAnim && (H = t.sw || 0), t.strokeColorAnim && (N = t.sc ? [t.sc[0], t.sc[1], t.sc[2]] : [0, 0, 0]), t.fillColorAnim && t.fc && (j = [t.fc[0], t.fc[1], t.fc[2]]), D = 0; D < F; D += 1)
                    (M = x[D].a).a.propType && ((R = x[D].s.getMult(k[s].anIndexes[D], S.a[D].s.totalChars)).length ? C.translate(-M.a.v[0] * R[0], -M.a.v[1] * R[1], M.a.v[2] * R[2]) : C.translate(-M.a.v[0] * R, -M.a.v[1] * R, M.a.v[2] * R));
                  for (D = 0; D < F; D += 1)
                    (M = x[D].a).s.propType && ((R = x[D].s.getMult(k[s].anIndexes[D], S.a[D].s.totalChars)).length ? C.scale(1 + (M.s.v[0] - 1) * R[0], 1 + (M.s.v[1] - 1) * R[1], 1) : C.scale(1 + (M.s.v[0] - 1) * R, 1 + (M.s.v[1] - 1) * R, 1));
                  for (D = 0; D < F; D += 1) {
                    if (M = x[D].a, R = x[D].s.getMult(k[s].anIndexes[D], S.a[D].s.totalChars), M.sk.propType && (R.length ? C.skewFromAxis(-M.sk.v * R[0], M.sa.v * R[1]) : C.skewFromAxis(-M.sk.v * R, M.sa.v * R)), M.r.propType && (R.length ? C.rotateZ(-M.r.v * R[2]) : C.rotateZ(-M.r.v * R)), M.ry.propType && (R.length ? C.rotateY(M.ry.v * R[1]) : C.rotateY(M.ry.v * R)), M.rx.propType && (R.length ? C.rotateX(M.rx.v * R[0]) : C.rotateX(M.rx.v * R)), M.o.propType && (R.length ? z += (M.o.v * R[0] - z) * R[0] : z += (M.o.v * R - z) * R), t.strokeWidthAnim && M.sw.propType && (R.length ? H += M.sw.v * R[0] : H += M.sw.v * R), t.strokeColorAnim && M.sc.propType)
                      for (q = 0; q < 3; q += 1)
                        R.length ? N[q] += (M.sc.v[q] - N[q]) * R[0] : N[q] += (M.sc.v[q] - N[q]) * R;
                    if (t.fillColorAnim && t.fc) {
                      if (M.fc.propType)
                        for (q = 0; q < 3; q += 1)
                          R.length ? j[q] += (M.fc.v[q] - j[q]) * R[0] : j[q] += (M.fc.v[q] - j[q]) * R;
                      M.fh.propType && (j = R.length ? addHueToRGB(j, M.fh.v * R[0]) : addHueToRGB(j, M.fh.v * R)), M.fs.propType && (j = R.length ? addSaturationToRGB(j, M.fs.v * R[0]) : addSaturationToRGB(j, M.fs.v * R)), M.fb.propType && (j = R.length ? addBrightnessToRGB(j, M.fb.v * R[0]) : addBrightnessToRGB(j, M.fb.v * R));
                    }
                  }
                  for (D = 0; D < F; D += 1)
                    (M = x[D].a).p.propType && (R = x[D].s.getMult(k[s].anIndexes[D], S.a[D].s.totalChars), this._hasMaskedPath ? R.length ? C.translate(0, M.p.v[1] * R[0], -M.p.v[2] * R[1]) : C.translate(0, M.p.v[1] * R, -M.p.v[2] * R) : R.length ? C.translate(M.p.v[0] * R[0], M.p.v[1] * R[1], -M.p.v[2] * R[2]) : C.translate(M.p.v[0] * R, M.p.v[1] * R, -M.p.v[2] * R));
                  if (t.strokeWidthAnim && (W = H < 0 ? 0 : H), t.strokeColorAnim && (Y = "rgb(" + Math.round(255 * N[0]) + "," + Math.round(255 * N[1]) + "," + Math.round(255 * N[2]) + ")"), t.fillColorAnim && t.fc && ($ = "rgb(" + Math.round(255 * j[0]) + "," + Math.round(255 * j[1]) + "," + Math.round(255 * j[2]) + ")"), this._hasMaskedPath) {
                    if (C.translate(0, -t.ls), C.translate(0, E[1] * V * 0.01 + r, 0), S.p.p) {
                      b = (h.point[1] - f.point[1]) / (h.point[0] - f.point[0]);
                      var ht = 180 * Math.atan(b) / Math.PI;
                      h.point[0] < f.point[0] && (ht += 180), C.rotate(-ht * Math.PI / 180);
                    }
                    C.translate(O, G, 0), o -= E[0] * k[s].an * 5e-3, k[s + 1] && K !== k[s + 1].ind && (o += k[s].an / 2, o += 1e-3 * t.tr * t.finalSize);
                  } else {
                    switch (C.translate(i, r, 0), t.ps && C.translate(t.ps[0], t.ps[1] + t.ascent, 0), t.j) {
                      case 1:
                        C.translate(k[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[k[s].line]), 0, 0);
                        break;
                      case 2:
                        C.translate(k[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[k[s].line]) / 2, 0, 0);
                    }
                    C.translate(0, -t.ls), C.translate(B, 0, 0), C.translate(E[0] * k[s].an * 5e-3, E[1] * V * 0.01, 0), i += k[s].l + 1e-3 * t.tr * t.finalSize;
                  }
                  "html" === A ? tt = C.toCSS() : "svg" === A ? tt = C.to2dCSS() : et = [C.props[0], C.props[1], C.props[2], C.props[3], C.props[4], C.props[5], C.props[6], C.props[7], C.props[8], C.props[9], C.props[10], C.props[11], C.props[12], C.props[13], C.props[14], C.props[15]], X = z;
                }
                _ <= s ? (I = new LetterProps(X, W, Y, $, tt, et), this.renderedLetters.push(I), _ += 1, this.lettersChangedFlag = true) : (I = this.renderedLetters[s], this.lettersChangedFlag = I.update(X, W, Y, $, tt, et) || this.lettersChangedFlag);
              }
            }
          }, TextAnimatorProperty.prototype.getValue = function() {
            this._elem.globalData.frameId !== this._frameId && (this._frameId = this._elem.globalData.frameId, this.iterateDynamicProperties());
          }, TextAnimatorProperty.prototype.mHelper = new Matrix(), TextAnimatorProperty.prototype.defaultPropsArray = [], extendPrototype([DynamicPropertyContainer], TextAnimatorProperty), LetterProps.prototype.update = function(t, e, i, r, s, a) {
            this._mdf.o = false, this._mdf.sw = false, this._mdf.sc = false, this._mdf.fc = false, this._mdf.m = false, this._mdf.p = false;
            var n = false;
            return this.o !== t && (this.o = t, this._mdf.o = true, n = true), this.sw !== e && (this.sw = e, this._mdf.sw = true, n = true), this.sc !== i && (this.sc = i, this._mdf.sc = true, n = true), this.fc !== r && (this.fc = r, this._mdf.fc = true, n = true), this.m !== s && (this.m = s, this._mdf.m = true, n = true), !a.length || this.p[0] === a[0] && this.p[1] === a[1] && this.p[4] === a[4] && this.p[5] === a[5] && this.p[12] === a[12] && this.p[13] === a[13] || (this.p = a, this._mdf.p = true, n = true), n;
          }, TextProperty.prototype.defaultBoxWidth = [0, 0], TextProperty.prototype.copyData = function(t, e) {
            for (var i in e)
              Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t;
          }, TextProperty.prototype.setCurrentData = function(t) {
            t.__complete || this.completeTextData(t), this.currentData = t, this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth, this._mdf = true;
          }, TextProperty.prototype.searchProperty = function() {
            return this.searchKeyframes();
          }, TextProperty.prototype.searchKeyframes = function() {
            return this.kf = this.data.d.k.length > 1, this.kf && this.addEffect(this.getKeyframeValue.bind(this)), this.kf;
          }, TextProperty.prototype.addEffect = function(t) {
            this.effectsSequence.push(t), this.elem.addDynamicProperty(this);
          }, TextProperty.prototype.getValue = function(t) {
            if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length || t) {
              this.currentData.t = this.data.d.k[this.keysIndex].s.t;
              var e = this.currentData, i = this.keysIndex;
              if (this.lock)
                this.setCurrentData(this.currentData);
              else {
                var r;
                this.lock = true, this._mdf = false;
                var s = this.effectsSequence.length, a = t || this.data.d.k[this.keysIndex].s;
                for (r = 0; r < s; r += 1)
                  a = i !== this.keysIndex ? this.effectsSequence[r](a, a.t) : this.effectsSequence[r](this.currentData, a.t);
                e !== a && this.setCurrentData(a), this.v = this.currentData, this.pv = this.v, this.lock = false, this.frameId = this.elem.globalData.frameId;
              }
            }
          }, TextProperty.prototype.getKeyframeValue = function() {
            for (var t = this.data.d.k, e = this.elem.comp.renderedFrame, i = 0, r = t.length; i <= r - 1 && !(i === r - 1 || t[i + 1].t > e); )
              i += 1;
            return this.keysIndex !== i && (this.keysIndex = i), this.data.d.k[this.keysIndex].s;
          }, TextProperty.prototype.buildFinalText = function(t) {
            for (var e, i = FontManager.getCombinedCharacterCodes(), r = [], s = 0, a = t.length; s < a; )
              e = t.charCodeAt(s), -1 !== i.indexOf(e) ? r[r.length - 1] += t.charAt(s) : e >= 55296 && e <= 56319 && (e = t.charCodeAt(s + 1)) >= 56320 && e <= 57343 ? (r.push(t.substr(s, 2)), s += 1) : r.push(t.charAt(s)), s += 1;
            return r;
          }, TextProperty.prototype.completeTextData = function(t) {
            t.__complete = true;
            var e, i, r, s, a, n, o, h = this.elem.globalData.fontManager, l = this.data, p = [], c = 0, m = l.m.g, f = 0, d = 0, u = 0, y = [], g = 0, v = 0, b = h.getFontByName(t.f), P = 0, E = getFontProperties(b);
            t.fWeight = E.weight, t.fStyle = E.style, t.finalSize = t.s, t.finalText = this.buildFinalText(t.t), i = t.finalText.length, t.finalLineHeight = t.lh;
            var x, S = t.tr / 1e3 * t.finalSize;
            if (t.sz)
              for (var C, A, _ = true, k = t.sz[0], T = t.sz[1]; _; ) {
                C = 0, g = 0, i = (A = this.buildFinalText(t.t)).length, S = t.tr / 1e3 * t.finalSize;
                var w = -1;
                for (e = 0; e < i; e += 1)
                  x = A[e].charCodeAt(0), r = false, " " === A[e] ? w = e : 13 !== x && 3 !== x || (g = 0, r = true, C += t.finalLineHeight || 1.2 * t.finalSize), h.chars ? (o = h.getCharData(A[e], b.fStyle, b.fFamily), P = r ? 0 : o.w * t.finalSize / 100) : P = h.measureText(A[e], t.f, t.finalSize), g + P > k && " " !== A[e] ? (-1 === w ? i += 1 : e = w, C += t.finalLineHeight || 1.2 * t.finalSize, A.splice(e, w === e ? 1 : 0, "\r"), w = -1, g = 0) : (g += P, g += S);
                C += b.ascent * t.finalSize / 100, this.canResize && t.finalSize > this.minimumFontSize && T < C ? (t.finalSize -= 1, t.finalLineHeight = t.finalSize * t.lh / t.s) : (t.finalText = A, i = t.finalText.length, _ = false);
              }
            g = -S, P = 0;
            var M, D = 0;
            for (e = 0; e < i; e += 1)
              if (r = false, 13 === (x = (M = t.finalText[e]).charCodeAt(0)) || 3 === x ? (D = 0, y.push(g), v = g > v ? g : v, g = -2 * S, s = "", r = true, u += 1) : s = M, h.chars ? (o = h.getCharData(M, b.fStyle, h.getFontByName(t.f).fFamily), P = r ? 0 : o.w * t.finalSize / 100) : P = h.measureText(s, t.f, t.finalSize), " " === M ? D += P + S : (g += P + S + D, D = 0), p.push({ l: P, an: P, add: f, n: r, anIndexes: [], val: s, line: u, animatorJustifyOffset: 0 }), 2 == m) {
                if (f += P, "" === s || " " === s || e === i - 1) {
                  for ("" !== s && " " !== s || (f -= P); d <= e; )
                    p[d].an = f, p[d].ind = c, p[d].extra = P, d += 1;
                  c += 1, f = 0;
                }
              } else if (3 == m) {
                if (f += P, "" === s || e === i - 1) {
                  for ("" === s && (f -= P); d <= e; )
                    p[d].an = f, p[d].ind = c, p[d].extra = P, d += 1;
                  f = 0, c += 1;
                }
              } else
                p[c].ind = c, p[c].extra = 0, c += 1;
            if (t.l = p, v = g > v ? g : v, y.push(g), t.sz)
              t.boxWidth = t.sz[0], t.justifyOffset = 0;
            else
              switch (t.boxWidth = v, t.j) {
                case 1:
                  t.justifyOffset = -t.boxWidth;
                  break;
                case 2:
                  t.justifyOffset = -t.boxWidth / 2;
                  break;
                default:
                  t.justifyOffset = 0;
              }
            t.lineWidths = y;
            var F, I, R, V, L = l.a;
            n = L.length;
            var B = [];
            for (a = 0; a < n; a += 1) {
              for ((F = L[a]).a.sc && (t.strokeColorAnim = true), F.a.sw && (t.strokeWidthAnim = true), (F.a.fc || F.a.fh || F.a.fs || F.a.fb) && (t.fillColorAnim = true), V = 0, R = F.s.b, e = 0; e < i; e += 1)
                (I = p[e]).anIndexes[a] = V, (1 == R && "" !== I.val || 2 == R && "" !== I.val && " " !== I.val || 3 == R && (I.n || " " == I.val || e == i - 1) || 4 == R && (I.n || e == i - 1)) && (1 === F.s.rn && B.push(V), V += 1);
              l.a[a].s.totalChars = V;
              var O, G = -1;
              if (1 === F.s.rn)
                for (e = 0; e < i; e += 1)
                  G != (I = p[e]).anIndexes[a] && (G = I.anIndexes[a], O = B.splice(Math.floor(Math.random() * B.length), 1)[0]), I.anIndexes[a] = O;
            }
            t.yOffset = t.finalLineHeight || 1.2 * t.finalSize, t.ls = t.ls || 0, t.ascent = b.ascent * t.finalSize / 100;
          }, TextProperty.prototype.updateDocumentData = function(t, e) {
            e = void 0 === e ? this.keysIndex : e;
            var i = this.copyData({}, this.data.d.k[e].s);
            i = this.copyData(i, t), this.data.d.k[e].s = i, this.recalculate(e), this.elem.addDynamicProperty(this);
          }, TextProperty.prototype.recalculate = function(t) {
            var e = this.data.d.k[t].s;
            e.__complete = false, this.keysIndex = 0, this._isFirstFrame = true, this.getValue(e);
          }, TextProperty.prototype.canResizeFont = function(t) {
            this.canResize = t, this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
          }, TextProperty.prototype.setMinimumFontSize = function(t) {
            this.minimumFontSize = Math.floor(t) || 1, this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
          };
          var TextSelectorProp = function() {
            var t = Math.max, e = Math.min, i = Math.floor;
            function r(t2, e2) {
              this._currentTextLength = -1, this.k = false, this.data = e2, this.elem = t2, this.comp = t2.comp, this.finalS = 0, this.finalE = 0, this.initDynamicPropertyContainer(t2), this.s = PropertyFactory.getProp(t2, e2.s || { k: 0 }, 0, 0, this), this.e = "e" in e2 ? PropertyFactory.getProp(t2, e2.e, 0, 0, this) : { v: 100 }, this.o = PropertyFactory.getProp(t2, e2.o || { k: 0 }, 0, 0, this), this.xe = PropertyFactory.getProp(t2, e2.xe || { k: 0 }, 0, 0, this), this.ne = PropertyFactory.getProp(t2, e2.ne || { k: 0 }, 0, 0, this), this.a = PropertyFactory.getProp(t2, e2.a, 0, 0.01, this), this.dynamicProperties.length || this.getValue();
            }
            return r.prototype = { getMult: function(r2) {
              this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
              var s = 0, a = 0, n = 1, o = 1;
              this.ne.v > 0 ? s = this.ne.v / 100 : a = -this.ne.v / 100, this.xe.v > 0 ? n = 1 - this.xe.v / 100 : o = 1 + this.xe.v / 100;
              var h = BezierFactory.getBezierEasing(s, a, n, o).get, l = 0, p = this.finalS, c = this.finalE, m = this.data.sh;
              if (2 === m)
                l = h(l = c === p ? r2 >= c ? 1 : 0 : t(0, e(0.5 / (c - p) + (r2 - p) / (c - p), 1)));
              else if (3 === m)
                l = h(l = c === p ? r2 >= c ? 0 : 1 : 1 - t(0, e(0.5 / (c - p) + (r2 - p) / (c - p), 1)));
              else if (4 === m)
                c === p ? l = 0 : (l = t(0, e(0.5 / (c - p) + (r2 - p) / (c - p), 1))) < 0.5 ? l *= 2 : l = 1 - 2 * (l - 0.5), l = h(l);
              else if (5 === m) {
                if (c === p)
                  l = 0;
                else {
                  var f = c - p, d = -f / 2 + (r2 = e(t(0, r2 + 0.5 - p), c - p)), u = f / 2;
                  l = Math.sqrt(1 - d * d / (u * u));
                }
                l = h(l);
              } else
                6 === m ? (c === p ? l = 0 : (r2 = e(t(0, r2 + 0.5 - p), c - p), l = (1 + Math.cos(Math.PI + 2 * Math.PI * r2 / (c - p))) / 2), l = h(l)) : (r2 >= i(p) && (l = t(0, e(r2 - p < 0 ? e(c, 1) - (p - r2) : c - r2, 1))), l = h(l));
              return l * this.a.v;
            }, getValue: function(t2) {
              this.iterateDynamicProperties(), this._mdf = t2 || this._mdf, this._currentTextLength = this.elem.textProperty.currentData.l.length || 0, t2 && 2 === this.data.r && (this.e.v = this._currentTextLength);
              var e2 = 2 === this.data.r ? 1 : 100 / this.data.totalChars, i2 = this.o.v / e2, r2 = this.s.v / e2 + i2, s = this.e.v / e2 + i2;
              if (r2 > s) {
                var a = r2;
                r2 = s, s = a;
              }
              this.finalS = r2, this.finalE = s;
            } }, extendPrototype([DynamicPropertyContainer], r), { getTextSelectorProp: function(t2, e2, i2) {
              return new r(t2, e2, i2);
            } };
          }(), poolFactory = function(t, e, i) {
            var r = 0, s = t, a = createSizedArray(s);
            return { newElement: function() {
              return r ? a[r -= 1] : e();
            }, release: function(t2) {
              r === s && (a = pooling.double(a), s *= 2), i && i(t2), a[r] = t2, r += 1;
            } };
          }, pooling = { double: function(t) {
            return t.concat(createSizedArray(t.length));
          } }, pointPool = poolFactory(8, function() {
            return createTypedArray("float32", 2);
          }), shapePool = (factory = poolFactory(4, function() {
            return new ShapePath();
          }, function(t) {
            var e, i = t._length;
            for (e = 0; e < i; e += 1)
              pointPool.release(t.v[e]), pointPool.release(t.i[e]), pointPool.release(t.o[e]), t.v[e] = null, t.i[e] = null, t.o[e] = null;
            t._length = 0, t.c = false;
          }), factory.clone = function(t) {
            var e, i = factory.newElement(), r = void 0 === t._length ? t.v.length : t._length;
            for (i.setLength(r), i.c = t.c, e = 0; e < r; e += 1)
              i.setTripleAt(t.v[e][0], t.v[e][1], t.o[e][0], t.o[e][1], t.i[e][0], t.i[e][1], e);
            return i;
          }, factory), factory, shapeCollectionPool = function() {
            var t = { newShapeCollection: function() {
              return e ? r[e -= 1] : new ShapeCollection();
            }, release: function(t2) {
              var s, a = t2._length;
              for (s = 0; s < a; s += 1)
                shapePool.release(t2.shapes[s]);
              t2._length = 0, e === i && (r = pooling.double(r), i *= 2), r[e] = t2, e += 1;
            } }, e = 0, i = 4, r = createSizedArray(i);
            return t;
          }(), segmentsLengthPool = poolFactory(8, function() {
            return { lengths: [], totalLength: 0 };
          }, function(t) {
            var e, i = t.lengths.length;
            for (e = 0; e < i; e += 1)
              bezierLengthPool.release(t.lengths[e]);
            t.lengths.length = 0;
          }), bezierLengthPool = poolFactory(8, function() {
            return { addedLength: 0, percents: createTypedArray("float32", defaultCurveSegments), lengths: createTypedArray("float32", defaultCurveSegments) };
          }), markerParser = function() {
            function t(t2) {
              for (var e, i = t2.split("\r\n"), r = {}, s = 0, a = 0; a < i.length; a += 1)
                2 === (e = i[a].split(":")).length && (r[e[0]] = e[1].trim(), s += 1);
              if (0 === s)
                throw new Error();
              return r;
            }
            return function(e) {
              for (var i = [], r = 0; r < e.length; r += 1) {
                var s = e[r], a = { time: s.tm, duration: s.dr };
                try {
                  a.payload = JSON.parse(e[r].cm);
                } catch (i2) {
                  try {
                    a.payload = t(e[r].cm);
                  } catch (t2) {
                    a.payload = { name: e[r] };
                  }
                }
                i.push(a);
              }
              return i;
            };
          }();
          function BaseRenderer() {
          }
          function SVGRenderer(t, e) {
            this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.svgElement = createNS("svg");
            var i = "";
            if (e && e.title) {
              var r = createNS("title"), s = createElementID();
              r.setAttribute("id", s), r.textContent = e.title, this.svgElement.appendChild(r), i += s;
            }
            if (e && e.description) {
              var a = createNS("desc"), n = createElementID();
              a.setAttribute("id", n), a.textContent = e.description, this.svgElement.appendChild(a), i += " " + n;
            }
            i && this.svgElement.setAttribute("aria-labelledby", i);
            var o = createNS("defs");
            this.svgElement.appendChild(o);
            var h = createNS("g");
            this.svgElement.appendChild(h), this.layerElement = h, this.renderConfig = { preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet", imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice", progressiveLoad: e && e.progressiveLoad || false, hideOnTransparent: !(e && false === e.hideOnTransparent), viewBoxOnly: e && e.viewBoxOnly || false, viewBoxSize: e && e.viewBoxSize || false, className: e && e.className || "", id: e && e.id || "", focusable: e && e.focusable, filterSize: { width: e && e.filterSize && e.filterSize.width || "100%", height: e && e.filterSize && e.filterSize.height || "100%", x: e && e.filterSize && e.filterSize.x || "0%", y: e && e.filterSize && e.filterSize.y || "0%" } }, this.globalData = { _mdf: false, frameNum: -1, defs: o, renderConfig: this.renderConfig }, this.elements = [], this.pendingElements = [], this.destroyed = false, this.rendererType = "svg";
          }
          function CanvasRenderer(t, e) {
            this.animationItem = t, this.renderConfig = { clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas, context: e && e.context || null, progressiveLoad: e && e.progressiveLoad || false, preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet", imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice", className: e && e.className || "", id: e && e.id || "" }, this.renderConfig.dpr = e && e.dpr || 1, this.animationItem.wrapper && (this.renderConfig.dpr = e && e.dpr || window.devicePixelRatio || 1), this.renderedFrame = -1, this.globalData = { frameNum: -1, _mdf: false, renderConfig: this.renderConfig, currentGlobalAlpha: -1 }, this.contextData = new CVContextData(), this.elements = [], this.pendingElements = [], this.transformMat = new Matrix(), this.completeLayers = false, this.rendererType = "canvas";
          }
          function HybridRenderer(t, e) {
            this.animationItem = t, this.layers = null, this.renderedFrame = -1, this.renderConfig = { className: e && e.className || "", imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice", hideOnTransparent: !(e && false === e.hideOnTransparent), filterSize: { width: e && e.filterSize && e.filterSize.width || "400%", height: e && e.filterSize && e.filterSize.height || "400%", x: e && e.filterSize && e.filterSize.x || "-100%", y: e && e.filterSize && e.filterSize.y || "-100%" } }, this.globalData = { _mdf: false, frameNum: -1, renderConfig: this.renderConfig }, this.pendingElements = [], this.elements = [], this.threeDElements = [], this.destroyed = false, this.camera = null, this.supports3d = true, this.rendererType = "html";
          }
          function MaskElement(t, e, i) {
            this.data = t, this.element = e, this.globalData = i, this.storedData = [], this.masksProperties = this.data.masksProperties || [], this.maskElement = null;
            var r, s, a = this.globalData.defs, n = this.masksProperties ? this.masksProperties.length : 0;
            this.viewData = createSizedArray(n), this.solidPath = "";
            var o, h, l, p, c, m, f = this.masksProperties, d = 0, u = [], y = createElementID(), g = "clipPath", v = "clip-path";
            for (r = 0; r < n; r += 1)
              if (("a" !== f[r].mode && "n" !== f[r].mode || f[r].inv || 100 !== f[r].o.k || f[r].o.x) && (g = "mask", v = "mask"), "s" !== f[r].mode && "i" !== f[r].mode || 0 !== d ? l = null : ((l = createNS("rect")).setAttribute("fill", "#ffffff"), l.setAttribute("width", this.element.comp.data.w || 0), l.setAttribute("height", this.element.comp.data.h || 0), u.push(l)), s = createNS("path"), "n" === f[r].mode)
                this.viewData[r] = { op: PropertyFactory.getProp(this.element, f[r].o, 0, 0.01, this.element), prop: ShapePropertyFactory.getShapeProp(this.element, f[r], 3), elem: s, lastPath: "" }, a.appendChild(s);
              else {
                var b;
                if (d += 1, s.setAttribute("fill", "s" === f[r].mode ? "#000000" : "#ffffff"), s.setAttribute("clip-rule", "nonzero"), 0 !== f[r].x.k ? (g = "mask", v = "mask", m = PropertyFactory.getProp(this.element, f[r].x, 0, null, this.element), b = createElementID(), (p = createNS("filter")).setAttribute("id", b), (c = createNS("feMorphology")).setAttribute("operator", "erode"), c.setAttribute("in", "SourceGraphic"), c.setAttribute("radius", "0"), p.appendChild(c), a.appendChild(p), s.setAttribute("stroke", "s" === f[r].mode ? "#000000" : "#ffffff")) : (c = null, m = null), this.storedData[r] = { elem: s, x: m, expan: c, lastPath: "", lastOperator: "", filterId: b, lastRadius: 0 }, "i" === f[r].mode) {
                  h = u.length;
                  var P = createNS("g");
                  for (o = 0; o < h; o += 1)
                    P.appendChild(u[o]);
                  var E = createNS("mask");
                  E.setAttribute("mask-type", "alpha"), E.setAttribute("id", y + "_" + d), E.appendChild(s), a.appendChild(E), P.setAttribute("mask", "url(" + locationHref + "#" + y + "_" + d + ")"), u.length = 0, u.push(P);
                } else
                  u.push(s);
                f[r].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()), this.viewData[r] = { elem: s, lastPath: "", op: PropertyFactory.getProp(this.element, f[r].o, 0, 0.01, this.element), prop: ShapePropertyFactory.getShapeProp(this.element, f[r], 3), invRect: l }, this.viewData[r].prop.k || this.drawPath(f[r], this.viewData[r].prop.v, this.viewData[r]);
              }
            for (this.maskElement = createNS(g), n = u.length, r = 0; r < n; r += 1)
              this.maskElement.appendChild(u[r]);
            d > 0 && (this.maskElement.setAttribute("id", y), this.element.maskedElement.setAttribute(v, "url(" + locationHref + "#" + y + ")"), a.appendChild(this.maskElement)), this.viewData.length && this.element.addRenderableComponent(this);
          }
          function HierarchyElement() {
          }
          function FrameElement() {
          }
          function TransformElement() {
          }
          function RenderableElement() {
          }
          function RenderableDOMElement() {
          }
          function ProcessedElement(t, e) {
            this.elem = t, this.pos = e;
          }
          function SVGStyleData(t, e) {
            this.data = t, this.type = t.ty, this.d = "", this.lvl = e, this._mdf = false, this.closed = true === t.hd, this.pElem = createNS("path"), this.msElem = null;
          }
          function SVGShapeData(t, e, i) {
            this.caches = [], this.styles = [], this.transformers = t, this.lStr = "", this.sh = i, this.lvl = e, this._isAnimated = !!i.k;
            for (var r = 0, s = t.length; r < s; ) {
              if (t[r].mProps.dynamicProperties.length) {
                this._isAnimated = true;
                break;
              }
              r += 1;
            }
          }
          function SVGTransformData(t, e, i) {
            this.transform = { mProps: t, op: e, container: i }, this.elements = [], this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;
          }
          function SVGStrokeStyleData(t, e, i) {
            this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this), this.w = PropertyFactory.getProp(t, e.w, 0, null, this), this.d = new DashProperty(t, e.d || {}, "svg", this), this.c = PropertyFactory.getProp(t, e.c, 1, 255, this), this.style = i, this._isAnimated = !!this._isAnimated;
          }
          function SVGFillStyleData(t, e, i) {
            this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this), this.c = PropertyFactory.getProp(t, e.c, 1, 255, this), this.style = i;
          }
          function SVGGradientFillStyleData(t, e, i) {
            this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.initGradientData(t, e, i);
          }
          function SVGGradientStrokeStyleData(t, e, i) {
            this.initDynamicPropertyContainer(t), this.getValue = this.iterateDynamicProperties, this.w = PropertyFactory.getProp(t, e.w, 0, null, this), this.d = new DashProperty(t, e.d || {}, "svg", this), this.initGradientData(t, e, i), this._isAnimated = !!this._isAnimated;
          }
          function ShapeGroupData() {
            this.it = [], this.prevViewData = [], this.gr = createNS("g");
          }
          BaseRenderer.prototype.checkLayers = function(t) {
            var e, i, r = this.layers.length;
            for (this.completeLayers = true, e = r - 1; e >= 0; e -= 1)
              this.elements[e] || (i = this.layers[e]).ip - i.st <= t - this.layers[e].st && i.op - i.st > t - this.layers[e].st && this.buildItem(e), this.completeLayers = !!this.elements[e] && this.completeLayers;
            this.checkPendingElements();
          }, BaseRenderer.prototype.createItem = function(t) {
            switch (t.ty) {
              case 2:
                return this.createImage(t);
              case 0:
                return this.createComp(t);
              case 1:
                return this.createSolid(t);
              case 3:
                return this.createNull(t);
              case 4:
                return this.createShape(t);
              case 5:
                return this.createText(t);
              case 6:
                return this.createAudio(t);
              case 13:
                return this.createCamera(t);
              case 15:
                return this.createFootage(t);
              default:
                return this.createNull(t);
            }
          }, BaseRenderer.prototype.createCamera = function() {
            throw new Error("You're using a 3d camera. Try the html renderer.");
          }, BaseRenderer.prototype.createAudio = function(t) {
            return new AudioElement(t, this.globalData, this);
          }, BaseRenderer.prototype.createFootage = function(t) {
            return new FootageElement(t, this.globalData, this);
          }, BaseRenderer.prototype.buildAllItems = function() {
            var t, e = this.layers.length;
            for (t = 0; t < e; t += 1)
              this.buildItem(t);
            this.checkPendingElements();
          }, BaseRenderer.prototype.includeLayers = function(t) {
            var e;
            this.completeLayers = false;
            var i, r = t.length, s = this.layers.length;
            for (e = 0; e < r; e += 1)
              for (i = 0; i < s; ) {
                if (this.layers[i].id === t[e].id) {
                  this.layers[i] = t[e];
                  break;
                }
                i += 1;
              }
          }, BaseRenderer.prototype.setProjectInterface = function(t) {
            this.globalData.projectInterface = t;
          }, BaseRenderer.prototype.initItems = function() {
            this.globalData.progressiveLoad || this.buildAllItems();
          }, BaseRenderer.prototype.buildElementParenting = function(t, e, i) {
            for (var r = this.elements, s = this.layers, a = 0, n = s.length; a < n; )
              s[a].ind == e && (r[a] && true !== r[a] ? (i.push(r[a]), r[a].setAsParent(), void 0 !== s[a].parent ? this.buildElementParenting(t, s[a].parent, i) : t.setHierarchy(i)) : (this.buildItem(a), this.addPendingElement(t))), a += 1;
          }, BaseRenderer.prototype.addPendingElement = function(t) {
            this.pendingElements.push(t);
          }, BaseRenderer.prototype.searchExtraCompositions = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
              if (t[e].xt) {
                var r = this.createComp(t[e]);
                r.initExpressions(), this.globalData.projectInterface.registerComposition(r);
              }
          }, BaseRenderer.prototype.setupGlobalData = function(t, e) {
            this.globalData.fontManager = new FontManager(), this.globalData.fontManager.addChars(t.chars), this.globalData.fontManager.addFonts(t.fonts, e), this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem), this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem), this.globalData.imageLoader = this.animationItem.imagePreloader, this.globalData.audioController = this.animationItem.audioController, this.globalData.frameId = 0, this.globalData.frameRate = t.fr, this.globalData.nm = t.nm, this.globalData.compSize = { w: t.w, h: t.h };
          }, extendPrototype([BaseRenderer], SVGRenderer), SVGRenderer.prototype.createNull = function(t) {
            return new NullElement(t, this.globalData, this);
          }, SVGRenderer.prototype.createShape = function(t) {
            return new SVGShapeElement(t, this.globalData, this);
          }, SVGRenderer.prototype.createText = function(t) {
            return new SVGTextLottieElement(t, this.globalData, this);
          }, SVGRenderer.prototype.createImage = function(t) {
            return new IImageElement(t, this.globalData, this);
          }, SVGRenderer.prototype.createComp = function(t) {
            return new SVGCompElement(t, this.globalData, this);
          }, SVGRenderer.prototype.createSolid = function(t) {
            return new ISolidElement(t, this.globalData, this);
          }, SVGRenderer.prototype.configAnimation = function(t) {
            this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"), this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + t.w + " " + t.h), this.renderConfig.viewBoxOnly || (this.svgElement.setAttribute("width", t.w), this.svgElement.setAttribute("height", t.h), this.svgElement.style.width = "100%", this.svgElement.style.height = "100%", this.svgElement.style.transform = "translate3d(0,0,0)"), this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className), this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id), void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable), this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio), this.animationItem.wrapper.appendChild(this.svgElement);
            var e = this.globalData.defs;
            this.setupGlobalData(t, e), this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.data = t;
            var i = createNS("clipPath"), r = createNS("rect");
            r.setAttribute("width", t.w), r.setAttribute("height", t.h), r.setAttribute("x", 0), r.setAttribute("y", 0);
            var s = createElementID();
            i.setAttribute("id", s), i.appendChild(r), this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + s + ")"), e.appendChild(i), this.layers = t.layers, this.elements = createSizedArray(t.layers.length);
          }, SVGRenderer.prototype.destroy = function() {
            var t;
            this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), this.layerElement = null, this.globalData.defs = null;
            var e = this.layers ? this.layers.length : 0;
            for (t = 0; t < e; t += 1)
              this.elements[t] && this.elements[t].destroy();
            this.elements.length = 0, this.destroyed = true, this.animationItem = null;
          }, SVGRenderer.prototype.updateContainerSize = function() {
          }, SVGRenderer.prototype.buildItem = function(t) {
            var e = this.elements;
            if (!e[t] && 99 !== this.layers[t].ty) {
              e[t] = true;
              var i = this.createItem(this.layers[t]);
              e[t] = i, expressionsPlugin && (0 === this.layers[t].ty && this.globalData.projectInterface.registerComposition(i), i.initExpressions()), this.appendElementInPos(i, t), this.layers[t].tt && (this.elements[t - 1] && true !== this.elements[t - 1] ? i.setMatte(e[t - 1].layerId) : (this.buildItem(t - 1), this.addPendingElement(i)));
            }
          }, SVGRenderer.prototype.checkPendingElements = function() {
            for (; this.pendingElements.length; ) {
              var t = this.pendingElements.pop();
              if (t.checkParenting(), t.data.tt)
                for (var e = 0, i = this.elements.length; e < i; ) {
                  if (this.elements[e] === t) {
                    t.setMatte(this.elements[e - 1].layerId);
                    break;
                  }
                  e += 1;
                }
            }
          }, SVGRenderer.prototype.renderFrame = function(t) {
            if (this.renderedFrame !== t && !this.destroyed) {
              var e;
              null === t ? t = this.renderedFrame : this.renderedFrame = t, this.globalData.frameNum = t, this.globalData.frameId += 1, this.globalData.projectInterface.currentFrame = t, this.globalData._mdf = false;
              var i = this.layers.length;
              for (this.completeLayers || this.checkLayers(t), e = i - 1; e >= 0; e -= 1)
                (this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
              if (this.globalData._mdf)
                for (e = 0; e < i; e += 1)
                  (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame();
            }
          }, SVGRenderer.prototype.appendElementInPos = function(t, e) {
            var i = t.getBaseElement();
            if (i) {
              for (var r, s = 0; s < e; )
                this.elements[s] && true !== this.elements[s] && this.elements[s].getBaseElement() && (r = this.elements[s].getBaseElement()), s += 1;
              r ? this.layerElement.insertBefore(i, r) : this.layerElement.appendChild(i);
            }
          }, SVGRenderer.prototype.hide = function() {
            this.layerElement.style.display = "none";
          }, SVGRenderer.prototype.show = function() {
            this.layerElement.style.display = "block";
          }, extendPrototype([BaseRenderer], CanvasRenderer), CanvasRenderer.prototype.createShape = function(t) {
            return new CVShapeElement(t, this.globalData, this);
          }, CanvasRenderer.prototype.createText = function(t) {
            return new CVTextElement(t, this.globalData, this);
          }, CanvasRenderer.prototype.createImage = function(t) {
            return new CVImageElement(t, this.globalData, this);
          }, CanvasRenderer.prototype.createComp = function(t) {
            return new CVCompElement(t, this.globalData, this);
          }, CanvasRenderer.prototype.createSolid = function(t) {
            return new CVSolidElement(t, this.globalData, this);
          }, CanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull, CanvasRenderer.prototype.ctxTransform = function(t) {
            if (1 !== t[0] || 0 !== t[1] || 0 !== t[4] || 1 !== t[5] || 0 !== t[12] || 0 !== t[13])
              if (this.renderConfig.clearCanvas) {
                this.transformMat.cloneFromProps(t);
                var e = this.contextData.cTr.props;
                this.transformMat.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]), this.contextData.cTr.cloneFromProps(this.transformMat.props);
                var i = this.contextData.cTr.props;
                this.canvasContext.setTransform(i[0], i[1], i[4], i[5], i[12], i[13]);
              } else
                this.canvasContext.transform(t[0], t[1], t[4], t[5], t[12], t[13]);
          }, CanvasRenderer.prototype.ctxOpacity = function(t) {
            if (!this.renderConfig.clearCanvas)
              return this.canvasContext.globalAlpha *= t < 0 ? 0 : t, void (this.globalData.currentGlobalAlpha = this.contextData.cO);
            this.contextData.cO *= t < 0 ? 0 : t, this.globalData.currentGlobalAlpha !== this.contextData.cO && (this.canvasContext.globalAlpha = this.contextData.cO, this.globalData.currentGlobalAlpha = this.contextData.cO);
          }, CanvasRenderer.prototype.reset = function() {
            this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore();
          }, CanvasRenderer.prototype.save = function(t) {
            if (this.renderConfig.clearCanvas) {
              t && this.canvasContext.save();
              var e, i = this.contextData.cTr.props;
              this.contextData._length <= this.contextData.cArrPos && this.contextData.duplicate();
              var r = this.contextData.saved[this.contextData.cArrPos];
              for (e = 0; e < 16; e += 1)
                r[e] = i[e];
              this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO, this.contextData.cArrPos += 1;
            } else
              this.canvasContext.save();
          }, CanvasRenderer.prototype.restore = function(t) {
            if (this.renderConfig.clearCanvas) {
              t && (this.canvasContext.restore(), this.globalData.blendMode = "source-over"), this.contextData.cArrPos -= 1;
              var e, i = this.contextData.saved[this.contextData.cArrPos], r = this.contextData.cTr.props;
              for (e = 0; e < 16; e += 1)
                r[e] = i[e];
              this.canvasContext.setTransform(i[0], i[1], i[4], i[5], i[12], i[13]), i = this.contextData.savedOp[this.contextData.cArrPos], this.contextData.cO = i, this.globalData.currentGlobalAlpha !== i && (this.canvasContext.globalAlpha = i, this.globalData.currentGlobalAlpha = i);
            } else
              this.canvasContext.restore();
          }, CanvasRenderer.prototype.configAnimation = function(t) {
            if (this.animationItem.wrapper) {
              this.animationItem.container = createTag("canvas");
              var e = this.animationItem.container.style;
              e.width = "100%", e.height = "100%";
              var i = "0px 0px 0px";
              e.transformOrigin = i, e.mozTransformOrigin = i, e.webkitTransformOrigin = i, e["-webkit-transform"] = i, this.animationItem.wrapper.appendChild(this.animationItem.container), this.canvasContext = this.animationItem.container.getContext("2d"), this.renderConfig.className && this.animationItem.container.setAttribute("class", this.renderConfig.className), this.renderConfig.id && this.animationItem.container.setAttribute("id", this.renderConfig.id);
            } else
              this.canvasContext = this.renderConfig.context;
            this.data = t, this.layers = t.layers, this.transformCanvas = { w: t.w, h: t.h, sx: 0, sy: 0, tx: 0, ty: 0 }, this.setupGlobalData(t, document.body), this.globalData.canvasContext = this.canvasContext, this.globalData.renderer = this, this.globalData.isDashed = false, this.globalData.progressiveLoad = this.renderConfig.progressiveLoad, this.globalData.transformCanvas = this.transformCanvas, this.elements = createSizedArray(t.layers.length), this.updateContainerSize();
          }, CanvasRenderer.prototype.updateContainerSize = function() {
            var t, e, i, r;
            if (this.reset(), this.animationItem.wrapper && this.animationItem.container ? (t = this.animationItem.wrapper.offsetWidth, e = this.animationItem.wrapper.offsetHeight, this.animationItem.container.setAttribute("width", t * this.renderConfig.dpr), this.animationItem.container.setAttribute("height", e * this.renderConfig.dpr)) : (t = this.canvasContext.canvas.width * this.renderConfig.dpr, e = this.canvasContext.canvas.height * this.renderConfig.dpr), -1 !== this.renderConfig.preserveAspectRatio.indexOf("meet") || -1 !== this.renderConfig.preserveAspectRatio.indexOf("slice")) {
              var s = this.renderConfig.preserveAspectRatio.split(" "), a = s[1] || "meet", n = s[0] || "xMidYMid", o = n.substr(0, 4), h = n.substr(4);
              i = t / e, (r = this.transformCanvas.w / this.transformCanvas.h) > i && "meet" === a || r < i && "slice" === a ? (this.transformCanvas.sx = t / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.sy = t / (this.transformCanvas.w / this.renderConfig.dpr)) : (this.transformCanvas.sx = e / (this.transformCanvas.h / this.renderConfig.dpr), this.transformCanvas.sy = e / (this.transformCanvas.h / this.renderConfig.dpr)), this.transformCanvas.tx = "xMid" === o && (r < i && "meet" === a || r > i && "slice" === a) ? (t - this.transformCanvas.w * (e / this.transformCanvas.h)) / 2 * this.renderConfig.dpr : "xMax" === o && (r < i && "meet" === a || r > i && "slice" === a) ? (t - this.transformCanvas.w * (e / this.transformCanvas.h)) * this.renderConfig.dpr : 0, this.transformCanvas.ty = "YMid" === h && (r > i && "meet" === a || r < i && "slice" === a) ? (e - this.transformCanvas.h * (t / this.transformCanvas.w)) / 2 * this.renderConfig.dpr : "YMax" === h && (r > i && "meet" === a || r < i && "slice" === a) ? (e - this.transformCanvas.h * (t / this.transformCanvas.w)) * this.renderConfig.dpr : 0;
            } else
              "none" === this.renderConfig.preserveAspectRatio ? (this.transformCanvas.sx = t / (this.transformCanvas.w / this.renderConfig.dpr), this.transformCanvas.sy = e / (this.transformCanvas.h / this.renderConfig.dpr), this.transformCanvas.tx = 0, this.transformCanvas.ty = 0) : (this.transformCanvas.sx = this.renderConfig.dpr, this.transformCanvas.sy = this.renderConfig.dpr, this.transformCanvas.tx = 0, this.transformCanvas.ty = 0);
            this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1], this.ctxTransform(this.transformCanvas.props), this.canvasContext.beginPath(), this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h), this.canvasContext.closePath(), this.canvasContext.clip(), this.renderFrame(this.renderedFrame, true);
          }, CanvasRenderer.prototype.destroy = function() {
            var t;
            for (this.renderConfig.clearCanvas && this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), t = (this.layers ? this.layers.length : 0) - 1; t >= 0; t -= 1)
              this.elements[t] && this.elements[t].destroy();
            this.elements.length = 0, this.globalData.canvasContext = null, this.animationItem.container = null, this.destroyed = true;
          }, CanvasRenderer.prototype.renderFrame = function(t, e) {
            if ((this.renderedFrame !== t || true !== this.renderConfig.clearCanvas || e) && !this.destroyed && -1 !== t) {
              var i;
              this.renderedFrame = t, this.globalData.frameNum = t - this.animationItem._isFirstFrame, this.globalData.frameId += 1, this.globalData._mdf = !this.renderConfig.clearCanvas || e, this.globalData.projectInterface.currentFrame = t;
              var r = this.layers.length;
              for (this.completeLayers || this.checkLayers(t), i = 0; i < r; i += 1)
                (this.completeLayers || this.elements[i]) && this.elements[i].prepareFrame(t - this.layers[i].st);
              if (this.globalData._mdf) {
                for (true === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(), i = r - 1; i >= 0; i -= 1)
                  (this.completeLayers || this.elements[i]) && this.elements[i].renderFrame();
                true !== this.renderConfig.clearCanvas && this.restore();
              }
            }
          }, CanvasRenderer.prototype.buildItem = function(t) {
            var e = this.elements;
            if (!e[t] && 99 !== this.layers[t].ty) {
              var i = this.createItem(this.layers[t], this, this.globalData);
              e[t] = i, i.initExpressions();
            }
          }, CanvasRenderer.prototype.checkPendingElements = function() {
            for (; this.pendingElements.length; )
              this.pendingElements.pop().checkParenting();
          }, CanvasRenderer.prototype.hide = function() {
            this.animationItem.container.style.display = "none";
          }, CanvasRenderer.prototype.show = function() {
            this.animationItem.container.style.display = "block";
          }, extendPrototype([BaseRenderer], HybridRenderer), HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem, HybridRenderer.prototype.checkPendingElements = function() {
            for (; this.pendingElements.length; )
              this.pendingElements.pop().checkParenting();
          }, HybridRenderer.prototype.appendElementInPos = function(t, e) {
            var i = t.getBaseElement();
            if (i) {
              var r = this.layers[e];
              if (r.ddd && this.supports3d)
                this.addTo3dContainer(i, e);
              else if (this.threeDElements)
                this.addTo3dContainer(i, e);
              else {
                for (var s, a, n = 0; n < e; )
                  this.elements[n] && true !== this.elements[n] && this.elements[n].getBaseElement && (a = this.elements[n], s = (this.layers[n].ddd ? this.getThreeDContainerByPos(n) : a.getBaseElement()) || s), n += 1;
                s ? r.ddd && this.supports3d || this.layerElement.insertBefore(i, s) : r.ddd && this.supports3d || this.layerElement.appendChild(i);
              }
            }
          }, HybridRenderer.prototype.createShape = function(t) {
            return this.supports3d ? new HShapeElement(t, this.globalData, this) : new SVGShapeElement(t, this.globalData, this);
          }, HybridRenderer.prototype.createText = function(t) {
            return this.supports3d ? new HTextElement(t, this.globalData, this) : new SVGTextLottieElement(t, this.globalData, this);
          }, HybridRenderer.prototype.createCamera = function(t) {
            return this.camera = new HCameraElement(t, this.globalData, this), this.camera;
          }, HybridRenderer.prototype.createImage = function(t) {
            return this.supports3d ? new HImageElement(t, this.globalData, this) : new IImageElement(t, this.globalData, this);
          }, HybridRenderer.prototype.createComp = function(t) {
            return this.supports3d ? new HCompElement(t, this.globalData, this) : new SVGCompElement(t, this.globalData, this);
          }, HybridRenderer.prototype.createSolid = function(t) {
            return this.supports3d ? new HSolidElement(t, this.globalData, this) : new ISolidElement(t, this.globalData, this);
          }, HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull, HybridRenderer.prototype.getThreeDContainerByPos = function(t) {
            for (var e = 0, i = this.threeDElements.length; e < i; ) {
              if (this.threeDElements[e].startPos <= t && this.threeDElements[e].endPos >= t)
                return this.threeDElements[e].perspectiveElem;
              e += 1;
            }
            return null;
          }, HybridRenderer.prototype.createThreeDContainer = function(t, e) {
            var i, r, s = createTag("div");
            styleDiv(s);
            var a = createTag("div");
            if (styleDiv(a), "3d" === e) {
              (i = s.style).width = this.globalData.compSize.w + "px", i.height = this.globalData.compSize.h + "px";
              var n = "50% 50%";
              i.webkitTransformOrigin = n, i.mozTransformOrigin = n, i.transformOrigin = n;
              var o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
              (r = a.style).transform = o, r.webkitTransform = o;
            }
            s.appendChild(a);
            var h = { container: a, perspectiveElem: s, startPos: t, endPos: t, type: e };
            return this.threeDElements.push(h), h;
          }, HybridRenderer.prototype.build3dContainers = function() {
            var t, e, i = this.layers.length, r = "";
            for (t = 0; t < i; t += 1)
              this.layers[t].ddd && 3 !== this.layers[t].ty ? ("3d" !== r && (r = "3d", e = this.createThreeDContainer(t, "3d")), e.endPos = Math.max(e.endPos, t)) : ("2d" !== r && (r = "2d", e = this.createThreeDContainer(t, "2d")), e.endPos = Math.max(e.endPos, t));
            for (t = (i = this.threeDElements.length) - 1; t >= 0; t -= 1)
              this.resizerElem.appendChild(this.threeDElements[t].perspectiveElem);
          }, HybridRenderer.prototype.addTo3dContainer = function(t, e) {
            for (var i = 0, r = this.threeDElements.length; i < r; ) {
              if (e <= this.threeDElements[i].endPos) {
                for (var s, a = this.threeDElements[i].startPos; a < e; )
                  this.elements[a] && this.elements[a].getBaseElement && (s = this.elements[a].getBaseElement()), a += 1;
                s ? this.threeDElements[i].container.insertBefore(t, s) : this.threeDElements[i].container.appendChild(t);
                break;
              }
              i += 1;
            }
          }, HybridRenderer.prototype.configAnimation = function(t) {
            var e = createTag("div"), i = this.animationItem.wrapper, r = e.style;
            r.width = t.w + "px", r.height = t.h + "px", this.resizerElem = e, styleDiv(e), r.transformStyle = "flat", r.mozTransformStyle = "flat", r.webkitTransformStyle = "flat", this.renderConfig.className && e.setAttribute("class", this.renderConfig.className), i.appendChild(e), r.overflow = "hidden";
            var s = createNS("svg");
            s.setAttribute("width", "1"), s.setAttribute("height", "1"), styleDiv(s), this.resizerElem.appendChild(s);
            var a = createNS("defs");
            s.appendChild(a), this.data = t, this.setupGlobalData(t, s), this.globalData.defs = a, this.layers = t.layers, this.layerElement = this.resizerElem, this.build3dContainers(), this.updateContainerSize();
          }, HybridRenderer.prototype.destroy = function() {
            var t;
            this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), this.animationItem.container = null, this.globalData.defs = null;
            var e = this.layers ? this.layers.length : 0;
            for (t = 0; t < e; t += 1)
              this.elements[t].destroy();
            this.elements.length = 0, this.destroyed = true, this.animationItem = null;
          }, HybridRenderer.prototype.updateContainerSize = function() {
            var t, e, i, r, s = this.animationItem.wrapper.offsetWidth, a = this.animationItem.wrapper.offsetHeight, n = s / a;
            this.globalData.compSize.w / this.globalData.compSize.h > n ? (t = s / this.globalData.compSize.w, e = s / this.globalData.compSize.w, i = 0, r = (a - this.globalData.compSize.h * (s / this.globalData.compSize.w)) / 2) : (t = a / this.globalData.compSize.h, e = a / this.globalData.compSize.h, i = (s - this.globalData.compSize.w * (a / this.globalData.compSize.h)) / 2, r = 0);
            var o = this.resizerElem.style;
            o.webkitTransform = "matrix3d(" + t + ",0,0,0,0," + e + ",0,0,0,0,1,0," + i + "," + r + ",0,1)", o.transform = o.webkitTransform;
          }, HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame, HybridRenderer.prototype.hide = function() {
            this.resizerElem.style.display = "none";
          }, HybridRenderer.prototype.show = function() {
            this.resizerElem.style.display = "block";
          }, HybridRenderer.prototype.initItems = function() {
            if (this.buildAllItems(), this.camera)
              this.camera.setup();
            else {
              var t, e = this.globalData.compSize.w, i = this.globalData.compSize.h, r = this.threeDElements.length;
              for (t = 0; t < r; t += 1) {
                var s = this.threeDElements[t].perspectiveElem.style;
                s.webkitPerspective = Math.sqrt(Math.pow(e, 2) + Math.pow(i, 2)) + "px", s.perspective = s.webkitPerspective;
              }
            }
          }, HybridRenderer.prototype.searchExtraCompositions = function(t) {
            var e, i = t.length, r = createTag("div");
            for (e = 0; e < i; e += 1)
              if (t[e].xt) {
                var s = this.createComp(t[e], r, this.globalData.comp, null);
                s.initExpressions(), this.globalData.projectInterface.registerComposition(s);
              }
          }, MaskElement.prototype.getMaskProperty = function(t) {
            return this.viewData[t].prop;
          }, MaskElement.prototype.renderFrame = function(t) {
            var e, i = this.element.finalTransform.mat, r = this.masksProperties.length;
            for (e = 0; e < r; e += 1)
              if ((this.viewData[e].prop._mdf || t) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]), (this.viewData[e].op._mdf || t) && this.viewData[e].elem.setAttribute("fill-opacity", this.viewData[e].op.v), "n" !== this.masksProperties[e].mode && (this.viewData[e].invRect && (this.element.finalTransform.mProp._mdf || t) && this.viewData[e].invRect.setAttribute("transform", i.getInverseMatrix().to2dCSS()), this.storedData[e].x && (this.storedData[e].x._mdf || t))) {
                var s = this.storedData[e].expan;
                this.storedData[e].x.v < 0 ? ("erode" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "erode", this.storedData[e].elem.setAttribute("filter", "url(" + locationHref + "#" + this.storedData[e].filterId + ")")), s.setAttribute("radius", -this.storedData[e].x.v)) : ("dilate" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "dilate", this.storedData[e].elem.setAttribute("filter", null)), this.storedData[e].elem.setAttribute("stroke-width", 2 * this.storedData[e].x.v));
              }
          }, MaskElement.prototype.getMaskelement = function() {
            return this.maskElement;
          }, MaskElement.prototype.createLayerSolidPath = function() {
            var t = "M0,0 ";
            return t += " h" + this.globalData.compSize.w, t += " v" + this.globalData.compSize.h, (t += " h-" + this.globalData.compSize.w) + " v-" + this.globalData.compSize.h + " ";
          }, MaskElement.prototype.drawPath = function(t, e, i) {
            var r, s, a = " M" + e.v[0][0] + "," + e.v[0][1];
            for (s = e._length, r = 1; r < s; r += 1)
              a += " C" + e.o[r - 1][0] + "," + e.o[r - 1][1] + " " + e.i[r][0] + "," + e.i[r][1] + " " + e.v[r][0] + "," + e.v[r][1];
            if (e.c && s > 1 && (a += " C" + e.o[r - 1][0] + "," + e.o[r - 1][1] + " " + e.i[0][0] + "," + e.i[0][1] + " " + e.v[0][0] + "," + e.v[0][1]), i.lastPath !== a) {
              var n = "";
              i.elem && (e.c && (n = t.inv ? this.solidPath + a : a), i.elem.setAttribute("d", n)), i.lastPath = a;
            }
          }, MaskElement.prototype.destroy = function() {
            this.element = null, this.globalData = null, this.maskElement = null, this.data = null, this.masksProperties = null;
          }, HierarchyElement.prototype = { initHierarchy: function() {
            this.hierarchy = [], this._isParent = false, this.checkParenting();
          }, setHierarchy: function(t) {
            this.hierarchy = t;
          }, setAsParent: function() {
            this._isParent = true;
          }, checkParenting: function() {
            void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, []);
          } }, FrameElement.prototype = { initFrame: function() {
            this._isFirstFrame = false, this.dynamicProperties = [], this._mdf = false;
          }, prepareProperties: function(t, e) {
            var i, r = this.dynamicProperties.length;
            for (i = 0; i < r; i += 1)
              (e || this._isParent && "transform" === this.dynamicProperties[i].propType) && (this.dynamicProperties[i].getValue(), this.dynamicProperties[i]._mdf && (this.globalData._mdf = true, this._mdf = true));
          }, addDynamicProperty: function(t) {
            -1 === this.dynamicProperties.indexOf(t) && this.dynamicProperties.push(t);
          } }, TransformElement.prototype = { initTransform: function() {
            this.finalTransform = { mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 }, _matMdf: false, _opMdf: false, mat: new Matrix() }, this.data.ao && (this.finalTransform.mProp.autoOriented = true), this.data.ty;
          }, renderTransform: function() {
            if (this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame, this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame, this.hierarchy) {
              var t, e = this.finalTransform.mat, i = 0, r = this.hierarchy.length;
              if (!this.finalTransform._matMdf)
                for (; i < r; ) {
                  if (this.hierarchy[i].finalTransform.mProp._mdf) {
                    this.finalTransform._matMdf = true;
                    break;
                  }
                  i += 1;
                }
              if (this.finalTransform._matMdf)
                for (t = this.finalTransform.mProp.v.props, e.cloneFromProps(t), i = 0; i < r; i += 1)
                  t = this.hierarchy[i].finalTransform.mProp.v.props, e.transform(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]);
            }
          }, globalToLocal: function(t) {
            var e = [];
            e.push(this.finalTransform);
            for (var i, r = true, s = this.comp; r; )
              s.finalTransform ? (s.data.hasMask && e.splice(0, 0, s.finalTransform), s = s.comp) : r = false;
            var a, n = e.length;
            for (i = 0; i < n; i += 1)
              a = e[i].mat.applyToPointArray(0, 0, 0), t = [t[0] - a[0], t[1] - a[1], 0];
            return t;
          }, mHelper: new Matrix() }, RenderableElement.prototype = { initRenderable: function() {
            this.isInRange = false, this.hidden = false, this.isTransparent = false, this.renderableComponents = [];
          }, addRenderableComponent: function(t) {
            -1 === this.renderableComponents.indexOf(t) && this.renderableComponents.push(t);
          }, removeRenderableComponent: function(t) {
            -1 !== this.renderableComponents.indexOf(t) && this.renderableComponents.splice(this.renderableComponents.indexOf(t), 1);
          }, prepareRenderableFrame: function(t) {
            this.checkLayerLimits(t);
          }, checkTransparency: function() {
            this.finalTransform.mProp.o.v <= 0 ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && (this.isTransparent = true, this.hide()) : this.isTransparent && (this.isTransparent = false, this.show());
          }, checkLayerLimits: function(t) {
            this.data.ip - this.data.st <= t && this.data.op - this.data.st > t ? true !== this.isInRange && (this.globalData._mdf = true, this._mdf = true, this.isInRange = true, this.show()) : false !== this.isInRange && (this.globalData._mdf = true, this.isInRange = false, this.hide());
          }, renderRenderable: function() {
            var t, e = this.renderableComponents.length;
            for (t = 0; t < e; t += 1)
              this.renderableComponents[t].renderFrame(this._isFirstFrame);
          }, sourceRectAtTime: function() {
            return { top: 0, left: 0, width: 100, height: 100 };
          }, getLayerSize: function() {
            return 5 === this.data.ty ? { w: this.data.textData.width, h: this.data.textData.height } : { w: this.data.width, h: this.data.height };
          } }, extendPrototype([RenderableElement, createProxyFunction({ initElement: function(t, e, i) {
            this.initFrame(), this.initBaseData(t, e, i), this.initTransform(t, e, i), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide();
          }, hide: function() {
            this.hidden || this.isInRange && !this.isTransparent || ((this.baseElement || this.layerElement).style.display = "none", this.hidden = true);
          }, show: function() {
            this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"), this.hidden = false, this._isFirstFrame = true);
          }, renderFrame: function() {
            this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = false));
          }, renderInnerContent: function() {
          }, prepareFrame: function(t) {
            this._mdf = false, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.checkTransparency();
          }, destroy: function() {
            this.innerElem = null, this.destroyBaseElement();
          } })], RenderableDOMElement), SVGStyleData.prototype.reset = function() {
            this.d = "", this._mdf = false;
          }, SVGShapeData.prototype.setAsAnimated = function() {
            this._isAnimated = true;
          }, extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData), extendPrototype([DynamicPropertyContainer], SVGFillStyleData), SVGGradientFillStyleData.prototype.initGradientData = function(t, e, i) {
            this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this), this.s = PropertyFactory.getProp(t, e.s, 1, null, this), this.e = PropertyFactory.getProp(t, e.e, 1, null, this), this.h = PropertyFactory.getProp(t, e.h || { k: 0 }, 0, 0.01, this), this.a = PropertyFactory.getProp(t, e.a || { k: 0 }, 0, degToRads, this), this.g = new GradientProperty(t, e.g, this), this.style = i, this.stops = [], this.setGradientData(i.pElem, e), this.setGradientOpacity(e, i), this._isAnimated = !!this._isAnimated;
          }, SVGGradientFillStyleData.prototype.setGradientData = function(t, e) {
            var i = createElementID(), r = createNS(1 === e.t ? "linearGradient" : "radialGradient");
            r.setAttribute("id", i), r.setAttribute("spreadMethod", "pad"), r.setAttribute("gradientUnits", "userSpaceOnUse");
            var s, a, n, o = [];
            for (n = 4 * e.g.p, a = 0; a < n; a += 4)
              s = createNS("stop"), r.appendChild(s), o.push(s);
            t.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + locationHref + "#" + i + ")"), this.gf = r, this.cst = o;
          }, SVGGradientFillStyleData.prototype.setGradientOpacity = function(t, e) {
            if (this.g._hasOpacity && !this.g._collapsable) {
              var i, r, s, a = createNS("mask"), n = createNS("path");
              a.appendChild(n);
              var o = createElementID(), h = createElementID();
              a.setAttribute("id", h);
              var l = createNS(1 === t.t ? "linearGradient" : "radialGradient");
              l.setAttribute("id", o), l.setAttribute("spreadMethod", "pad"), l.setAttribute("gradientUnits", "userSpaceOnUse"), s = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length;
              var p = this.stops;
              for (r = 4 * t.g.p; r < s; r += 2)
                (i = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"), l.appendChild(i), p.push(i);
              n.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + locationHref + "#" + o + ")"), this.of = l, this.ms = a, this.ost = p, this.maskId = h, e.msElem = n;
            }
          }, extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData), extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
          var SVGElementsRenderer = function() {
            var t = new Matrix(), e = new Matrix();
            function i(t2, e2, i2) {
              (i2 || e2.transform.op._mdf) && e2.transform.container.setAttribute("opacity", e2.transform.op.v), (i2 || e2.transform.mProps._mdf) && e2.transform.container.setAttribute("transform", e2.transform.mProps.v.to2dCSS());
            }
            function r(i2, r2, s2) {
              var a2, n2, o2, h, l, p, c, m, f, d, u, y = r2.styles.length, g = r2.lvl;
              for (p = 0; p < y; p += 1) {
                if (h = r2.sh._mdf || s2, r2.styles[p].lvl < g) {
                  for (m = e.reset(), d = g - r2.styles[p].lvl, u = r2.transformers.length - 1; !h && d > 0; )
                    h = r2.transformers[u].mProps._mdf || h, d -= 1, u -= 1;
                  if (h)
                    for (d = g - r2.styles[p].lvl, u = r2.transformers.length - 1; d > 0; )
                      f = r2.transformers[u].mProps.v.props, m.transform(f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9], f[10], f[11], f[12], f[13], f[14], f[15]), d -= 1, u -= 1;
                } else
                  m = t;
                if (n2 = (c = r2.sh.paths)._length, h) {
                  for (o2 = "", a2 = 0; a2 < n2; a2 += 1)
                    (l = c.shapes[a2]) && l._length && (o2 += buildShapeString(l, l._length, l.c, m));
                  r2.caches[p] = o2;
                } else
                  o2 = r2.caches[p];
                r2.styles[p].d += true === i2.hd ? "" : o2, r2.styles[p]._mdf = h || r2.styles[p]._mdf;
              }
            }
            function s(t2, e2, i2) {
              var r2 = e2.style;
              (e2.c._mdf || i2) && r2.pElem.setAttribute("fill", "rgb(" + bmFloor(e2.c.v[0]) + "," + bmFloor(e2.c.v[1]) + "," + bmFloor(e2.c.v[2]) + ")"), (e2.o._mdf || i2) && r2.pElem.setAttribute("fill-opacity", e2.o.v);
            }
            function a(t2, e2, i2) {
              n(t2, e2, i2), o(0, e2, i2);
            }
            function n(t2, e2, i2) {
              var r2, s2, a2, n2, o2, h = e2.gf, l = e2.g._hasOpacity, p = e2.s.v, c = e2.e.v;
              if (e2.o._mdf || i2) {
                var m = "gf" === t2.ty ? "fill-opacity" : "stroke-opacity";
                e2.style.pElem.setAttribute(m, e2.o.v);
              }
              if (e2.s._mdf || i2) {
                var f = 1 === t2.t ? "x1" : "cx", d = "x1" === f ? "y1" : "cy";
                h.setAttribute(f, p[0]), h.setAttribute(d, p[1]), l && !e2.g._collapsable && (e2.of.setAttribute(f, p[0]), e2.of.setAttribute(d, p[1]));
              }
              if (e2.g._cmdf || i2) {
                r2 = e2.cst;
                var u = e2.g.c;
                for (a2 = r2.length, s2 = 0; s2 < a2; s2 += 1)
                  (n2 = r2[s2]).setAttribute("offset", u[4 * s2] + "%"), n2.setAttribute("stop-color", "rgb(" + u[4 * s2 + 1] + "," + u[4 * s2 + 2] + "," + u[4 * s2 + 3] + ")");
              }
              if (l && (e2.g._omdf || i2)) {
                var y = e2.g.o;
                for (a2 = (r2 = e2.g._collapsable ? e2.cst : e2.ost).length, s2 = 0; s2 < a2; s2 += 1)
                  n2 = r2[s2], e2.g._collapsable || n2.setAttribute("offset", y[2 * s2] + "%"), n2.setAttribute("stop-opacity", y[2 * s2 + 1]);
              }
              if (1 === t2.t)
                (e2.e._mdf || i2) && (h.setAttribute("x2", c[0]), h.setAttribute("y2", c[1]), l && !e2.g._collapsable && (e2.of.setAttribute("x2", c[0]), e2.of.setAttribute("y2", c[1])));
              else if ((e2.s._mdf || e2.e._mdf || i2) && (o2 = Math.sqrt(Math.pow(p[0] - c[0], 2) + Math.pow(p[1] - c[1], 2)), h.setAttribute("r", o2), l && !e2.g._collapsable && e2.of.setAttribute("r", o2)), e2.e._mdf || e2.h._mdf || e2.a._mdf || i2) {
                o2 || (o2 = Math.sqrt(Math.pow(p[0] - c[0], 2) + Math.pow(p[1] - c[1], 2)));
                var g = Math.atan2(c[1] - p[1], c[0] - p[0]), v = e2.h.v;
                v >= 1 ? v = 0.99 : v <= -1 && (v = -0.99);
                var b = o2 * v, P = Math.cos(g + e2.a.v) * b + p[0], E = Math.sin(g + e2.a.v) * b + p[1];
                h.setAttribute("fx", P), h.setAttribute("fy", E), l && !e2.g._collapsable && (e2.of.setAttribute("fx", P), e2.of.setAttribute("fy", E));
              }
            }
            function o(t2, e2, i2) {
              var r2 = e2.style, s2 = e2.d;
              s2 && (s2._mdf || i2) && s2.dashStr && (r2.pElem.setAttribute("stroke-dasharray", s2.dashStr), r2.pElem.setAttribute("stroke-dashoffset", s2.dashoffset[0])), e2.c && (e2.c._mdf || i2) && r2.pElem.setAttribute("stroke", "rgb(" + bmFloor(e2.c.v[0]) + "," + bmFloor(e2.c.v[1]) + "," + bmFloor(e2.c.v[2]) + ")"), (e2.o._mdf || i2) && r2.pElem.setAttribute("stroke-opacity", e2.o.v), (e2.w._mdf || i2) && (r2.pElem.setAttribute("stroke-width", e2.w.v), r2.msElem && r2.msElem.setAttribute("stroke-width", e2.w.v));
            }
            return { createRenderFunction: function(t2) {
              switch (t2.ty) {
                case "fl":
                  return s;
                case "gf":
                  return n;
                case "gs":
                  return a;
                case "st":
                  return o;
                case "sh":
                case "el":
                case "rc":
                case "sr":
                  return r;
                case "tr":
                  return i;
                default:
                  return null;
              }
            } };
          }();
          function ShapeTransformManager() {
            this.sequences = {}, this.sequenceList = [], this.transform_key_count = 0;
          }
          function CVShapeData(t, e, i, r) {
            this.styledShapes = [], this.tr = [0, 0, 0, 0, 0, 0];
            var s, a = 4;
            "rc" === e.ty ? a = 5 : "el" === e.ty ? a = 6 : "sr" === e.ty && (a = 7), this.sh = ShapePropertyFactory.getShapeProp(t, e, a, t);
            var n, o = i.length;
            for (s = 0; s < o; s += 1)
              i[s].closed || (n = { transforms: r.addTransformSequence(i[s].transforms), trNodes: [] }, this.styledShapes.push(n), i[s].elements.push(n));
          }
          function BaseElement() {
          }
          function NullElement(t, e, i) {
            this.initFrame(), this.initBaseData(t, e, i), this.initFrame(), this.initTransform(t, e, i), this.initHierarchy();
          }
          function SVGBaseElement() {
          }
          function IShapeElement() {
          }
          function ITextElement() {
          }
          function ICompElement() {
          }
          function IImageElement(t, e, i) {
            this.assetData = e.getAssetData(t.refId), this.initElement(t, e, i), this.sourceRect = { top: 0, left: 0, width: this.assetData.w, height: this.assetData.h };
          }
          function ISolidElement(t, e, i) {
            this.initElement(t, e, i);
          }
          function AudioElement(t, e, i) {
            this.initFrame(), this.initRenderable(), this.assetData = e.getAssetData(t.refId), this.initBaseData(t, e, i), this._isPlaying = false, this._canPlay = false;
            var r = this.globalData.getAssetsPath(this.assetData);
            this.audio = this.globalData.audioController.createAudio(r), this._currentTime = 0, this.globalData.audioController.addAudio(this), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: true };
          }
          function FootageElement(t, e, i) {
            this.initFrame(), this.initRenderable(), this.assetData = e.getAssetData(t.refId), this.footageData = e.imageLoader.getAsset(this.assetData), this.initBaseData(t, e, i);
          }
          function SVGCompElement(t, e, i) {
            this.layers = t.layers, this.supports3d = true, this.completeLayers = false, this.pendingElements = [], this.elements = this.layers ? createSizedArray(this.layers.length) : [], this.initElement(t, e, i), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: true };
          }
          function SVGTextLottieElement(t, e, i) {
            this.textSpans = [], this.renderType = "svg", this.initElement(t, e, i);
          }
          function SVGShapeElement(t, e, i) {
            this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.shapeModifiers = [], this.itemsData = [], this.processedElements = [], this.animatedContents = [], this.initElement(t, e, i), this.prevViewData = [];
          }
          function SVGTintFilter(t, e) {
            this.filterManager = e;
            var i = createNS("feColorMatrix");
            if (i.setAttribute("type", "matrix"), i.setAttribute("color-interpolation-filters", "linearRGB"), i.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"), i.setAttribute("result", "f1"), t.appendChild(i), (i = createNS("feColorMatrix")).setAttribute("type", "matrix"), i.setAttribute("color-interpolation-filters", "sRGB"), i.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"), i.setAttribute("result", "f2"), t.appendChild(i), this.matrixFilter = i, 100 !== e.effectElements[2].p.v || e.effectElements[2].p.k) {
              var r, s = createNS("feMerge");
              t.appendChild(s), (r = createNS("feMergeNode")).setAttribute("in", "SourceGraphic"), s.appendChild(r), (r = createNS("feMergeNode")).setAttribute("in", "f2"), s.appendChild(r);
            }
          }
          function SVGFillFilter(t, e) {
            this.filterManager = e;
            var i = createNS("feColorMatrix");
            i.setAttribute("type", "matrix"), i.setAttribute("color-interpolation-filters", "sRGB"), i.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"), t.appendChild(i), this.matrixFilter = i;
          }
          function SVGGaussianBlurEffect(t, e) {
            t.setAttribute("x", "-100%"), t.setAttribute("y", "-100%"), t.setAttribute("width", "300%"), t.setAttribute("height", "300%"), this.filterManager = e;
            var i = createNS("feGaussianBlur");
            t.appendChild(i), this.feGaussianBlur = i;
          }
          function SVGStrokeEffect(t, e) {
            this.initialized = false, this.filterManager = e, this.elem = t, this.paths = [];
          }
          function SVGTritoneFilter(t, e) {
            this.filterManager = e;
            var i = createNS("feColorMatrix");
            i.setAttribute("type", "matrix"), i.setAttribute("color-interpolation-filters", "linearRGB"), i.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"), i.setAttribute("result", "f1"), t.appendChild(i);
            var r = createNS("feComponentTransfer");
            r.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(r), this.matrixFilter = r;
            var s = createNS("feFuncR");
            s.setAttribute("type", "table"), r.appendChild(s), this.feFuncR = s;
            var a = createNS("feFuncG");
            a.setAttribute("type", "table"), r.appendChild(a), this.feFuncG = a;
            var n = createNS("feFuncB");
            n.setAttribute("type", "table"), r.appendChild(n), this.feFuncB = n;
          }
          function SVGProLevelsFilter(t, e) {
            this.filterManager = e;
            var i = this.filterManager.effectElements, r = createNS("feComponentTransfer");
            (i[10].p.k || 0 !== i[10].p.v || i[11].p.k || 1 !== i[11].p.v || i[12].p.k || 1 !== i[12].p.v || i[13].p.k || 0 !== i[13].p.v || i[14].p.k || 1 !== i[14].p.v) && (this.feFuncR = this.createFeFunc("feFuncR", r)), (i[17].p.k || 0 !== i[17].p.v || i[18].p.k || 1 !== i[18].p.v || i[19].p.k || 1 !== i[19].p.v || i[20].p.k || 0 !== i[20].p.v || i[21].p.k || 1 !== i[21].p.v) && (this.feFuncG = this.createFeFunc("feFuncG", r)), (i[24].p.k || 0 !== i[24].p.v || i[25].p.k || 1 !== i[25].p.v || i[26].p.k || 1 !== i[26].p.v || i[27].p.k || 0 !== i[27].p.v || i[28].p.k || 1 !== i[28].p.v) && (this.feFuncB = this.createFeFunc("feFuncB", r)), (i[31].p.k || 0 !== i[31].p.v || i[32].p.k || 1 !== i[32].p.v || i[33].p.k || 1 !== i[33].p.v || i[34].p.k || 0 !== i[34].p.v || i[35].p.k || 1 !== i[35].p.v) && (this.feFuncA = this.createFeFunc("feFuncA", r)), (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (r.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(r), r = createNS("feComponentTransfer")), (i[3].p.k || 0 !== i[3].p.v || i[4].p.k || 1 !== i[4].p.v || i[5].p.k || 1 !== i[5].p.v || i[6].p.k || 0 !== i[6].p.v || i[7].p.k || 1 !== i[7].p.v) && (r.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(r), this.feFuncRComposed = this.createFeFunc("feFuncR", r), this.feFuncGComposed = this.createFeFunc("feFuncG", r), this.feFuncBComposed = this.createFeFunc("feFuncB", r));
          }
          function SVGDropShadowEffect(t, e) {
            var i = e.container.globalData.renderConfig.filterSize;
            t.setAttribute("x", i.x), t.setAttribute("y", i.y), t.setAttribute("width", i.width), t.setAttribute("height", i.height), this.filterManager = e;
            var r = createNS("feGaussianBlur");
            r.setAttribute("in", "SourceAlpha"), r.setAttribute("result", "drop_shadow_1"), r.setAttribute("stdDeviation", "0"), this.feGaussianBlur = r, t.appendChild(r);
            var s = createNS("feOffset");
            s.setAttribute("dx", "25"), s.setAttribute("dy", "0"), s.setAttribute("in", "drop_shadow_1"), s.setAttribute("result", "drop_shadow_2"), this.feOffset = s, t.appendChild(s);
            var a = createNS("feFlood");
            a.setAttribute("flood-color", "#00ff00"), a.setAttribute("flood-opacity", "1"), a.setAttribute("result", "drop_shadow_3"), this.feFlood = a, t.appendChild(a);
            var n = createNS("feComposite");
            n.setAttribute("in", "drop_shadow_3"), n.setAttribute("in2", "drop_shadow_2"), n.setAttribute("operator", "in"), n.setAttribute("result", "drop_shadow_4"), t.appendChild(n);
            var o, h = createNS("feMerge");
            t.appendChild(h), o = createNS("feMergeNode"), h.appendChild(o), (o = createNS("feMergeNode")).setAttribute("in", "SourceGraphic"), this.feMergeNode = o, this.feMerge = h, this.originalNodeAdded = false, h.appendChild(o);
          }
          ShapeTransformManager.prototype = { addTransformSequence: function(t) {
            var e, i = t.length, r = "_";
            for (e = 0; e < i; e += 1)
              r += t[e].transform.key + "_";
            var s = this.sequences[r];
            return s || (s = { transforms: [].concat(t), finalTransform: new Matrix(), _mdf: false }, this.sequences[r] = s, this.sequenceList.push(s)), s;
          }, processSequence: function(t, e) {
            for (var i, r = 0, s = t.transforms.length, a = e; r < s && !e; ) {
              if (t.transforms[r].transform.mProps._mdf) {
                a = true;
                break;
              }
              r += 1;
            }
            if (a)
              for (t.finalTransform.reset(), r = s - 1; r >= 0; r -= 1)
                i = t.transforms[r].transform.mProps.v.props, t.finalTransform.transform(i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9], i[10], i[11], i[12], i[13], i[14], i[15]);
            t._mdf = a;
          }, processSequences: function(t) {
            var e, i = this.sequenceList.length;
            for (e = 0; e < i; e += 1)
              this.processSequence(this.sequenceList[e], t);
          }, getNewKey: function() {
            return this.transform_key_count += 1, "_" + this.transform_key_count;
          } }, CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated, BaseElement.prototype = { checkMasks: function() {
            if (!this.data.hasMask)
              return false;
            for (var t = 0, e = this.data.masksProperties.length; t < e; ) {
              if ("n" !== this.data.masksProperties[t].mode && false !== this.data.masksProperties[t].cl)
                return true;
              t += 1;
            }
            return false;
          }, initExpressions: function() {
            this.layerInterface = LayerExpressionInterface(this), this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
            var t = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);
            this.layerInterface.registerEffectsInterface(t), 0 === this.data.ty || this.data.xt ? this.compInterface = CompExpressionInterface(this) : 4 === this.data.ty ? (this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface), this.layerInterface.content = this.layerInterface.shapeInterface) : 5 === this.data.ty && (this.layerInterface.textInterface = TextExpressionInterface(this), this.layerInterface.text = this.layerInterface.textInterface);
          }, setBlendMode: function() {
            var t = getBlendMode(this.data.bm);
            (this.baseElement || this.layerElement).style["mix-blend-mode"] = t;
          }, initBaseData: function(t, e, i) {
            this.globalData = e, this.comp = i, this.data = t, this.layerId = createElementID(), this.data.sr || (this.data.sr = 1), this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);
          }, getType: function() {
            return this.type;
          }, sourceRectAtTime: function() {
          } }, NullElement.prototype.prepareFrame = function(t) {
            this.prepareProperties(t, true);
          }, NullElement.prototype.renderFrame = function() {
          }, NullElement.prototype.getBaseElement = function() {
            return null;
          }, NullElement.prototype.destroy = function() {
          }, NullElement.prototype.sourceRectAtTime = function() {
          }, NullElement.prototype.hide = function() {
          }, extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement), SVGBaseElement.prototype = { initRendererElement: function() {
            this.layerElement = createNS("g");
          }, createContainerElements: function() {
            this.matteElement = createNS("g"), this.transformedElement = this.layerElement, this.maskedElement = this.layerElement, this._sizeChanged = false;
            var t, e, i, r = null;
            if (this.data.td) {
              if (3 == this.data.td || 1 == this.data.td) {
                var s = createNS("mask");
                s.setAttribute("id", this.layerId), s.setAttribute("mask-type", 3 == this.data.td ? "luminance" : "alpha"), s.appendChild(this.layerElement), r = s, this.globalData.defs.appendChild(s), featureSupport.maskType || 1 != this.data.td || (s.setAttribute("mask-type", "luminance"), t = createElementID(), e = filtersFactory.createFilter(t), this.globalData.defs.appendChild(e), e.appendChild(filtersFactory.createAlphaToLuminanceFilter()), (i = createNS("g")).appendChild(this.layerElement), r = i, s.appendChild(i), i.setAttribute("filter", "url(" + locationHref + "#" + t + ")"));
              } else if (2 == this.data.td) {
                var a = createNS("mask");
                a.setAttribute("id", this.layerId), a.setAttribute("mask-type", "alpha");
                var n = createNS("g");
                a.appendChild(n), t = createElementID(), e = filtersFactory.createFilter(t);
                var o = createNS("feComponentTransfer");
                o.setAttribute("in", "SourceGraphic"), e.appendChild(o);
                var h = createNS("feFuncA");
                h.setAttribute("type", "table"), h.setAttribute("tableValues", "1.0 0.0"), o.appendChild(h), this.globalData.defs.appendChild(e);
                var l = createNS("rect");
                l.setAttribute("width", this.comp.data.w), l.setAttribute("height", this.comp.data.h), l.setAttribute("x", "0"), l.setAttribute("y", "0"), l.setAttribute("fill", "#ffffff"), l.setAttribute("opacity", "0"), n.setAttribute("filter", "url(" + locationHref + "#" + t + ")"), n.appendChild(l), n.appendChild(this.layerElement), r = n, featureSupport.maskType || (a.setAttribute("mask-type", "luminance"), e.appendChild(filtersFactory.createAlphaToLuminanceFilter()), i = createNS("g"), n.appendChild(l), i.appendChild(this.layerElement), r = i, n.appendChild(i)), this.globalData.defs.appendChild(a);
              }
            } else
              this.data.tt ? (this.matteElement.appendChild(this.layerElement), r = this.matteElement, this.baseElement = this.matteElement) : this.baseElement = this.layerElement;
            if (this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 === this.data.ty && !this.data.hd) {
              var p = createNS("clipPath"), c = createNS("path");
              c.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
              var m = createElementID();
              if (p.setAttribute("id", m), p.appendChild(c), this.globalData.defs.appendChild(p), this.checkMasks()) {
                var f = createNS("g");
                f.setAttribute("clip-path", "url(" + locationHref + "#" + m + ")"), f.appendChild(this.layerElement), this.transformedElement = f, r ? r.appendChild(this.transformedElement) : this.baseElement = this.transformedElement;
              } else
                this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + m + ")");
            }
            0 !== this.data.bm && this.setBlendMode();
          }, renderElement: function() {
            this.finalTransform._matMdf && this.transformedElement.setAttribute("transform", this.finalTransform.mat.to2dCSS()), this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.mProp.o.v);
          }, destroyBaseElement: function() {
            this.layerElement = null, this.matteElement = null, this.maskManager.destroy();
          }, getBaseElement: function() {
            return this.data.hd ? null : this.baseElement;
          }, createRenderableComponents: function() {
            this.maskManager = new MaskElement(this.data, this, this.globalData), this.renderableEffectsManager = new SVGEffects(this);
          }, setMatte: function(t) {
            this.matteElement && this.matteElement.setAttribute("mask", "url(" + locationHref + "#" + t + ")");
          } }, IShapeElement.prototype = { addShapeToModifiers: function(t) {
            var e, i = this.shapeModifiers.length;
            for (e = 0; e < i; e += 1)
              this.shapeModifiers[e].addShape(t);
          }, isShapeInAnimatedModifiers: function(t) {
            for (var e = this.shapeModifiers.length; 0 < e; )
              if (this.shapeModifiers[0].isAnimatedWithShape(t))
                return true;
            return false;
          }, renderModifiers: function() {
            if (this.shapeModifiers.length) {
              var t, e = this.shapes.length;
              for (t = 0; t < e; t += 1)
                this.shapes[t].sh.reset();
              for (t = (e = this.shapeModifiers.length) - 1; t >= 0 && !this.shapeModifiers[t].processShapes(this._isFirstFrame); t -= 1)
                ;
            }
          }, lcEnum: { 1: "butt", 2: "round", 3: "square" }, ljEnum: { 1: "miter", 2: "round", 3: "bevel" }, searchProcessedElement: function(t) {
            for (var e = this.processedElements, i = 0, r = e.length; i < r; ) {
              if (e[i].elem === t)
                return e[i].pos;
              i += 1;
            }
            return 0;
          }, addProcessedElement: function(t, e) {
            for (var i = this.processedElements, r = i.length; r; )
              if (i[r -= 1].elem === t)
                return void (i[r].pos = e);
            i.push(new ProcessedElement(t, e));
          }, prepareFrame: function(t) {
            this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange);
          } }, ITextElement.prototype.initElement = function(t, e, i) {
            this.lettersChangedFlag = true, this.initFrame(), this.initBaseData(t, e, i), this.textProperty = new TextProperty(this, t.t, this.dynamicProperties), this.textAnimator = new TextAnimatorProperty(t.t, this.renderType, this), this.initTransform(t, e, i), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide(), this.textAnimator.searchProperties(this.dynamicProperties);
          }, ITextElement.prototype.prepareFrame = function(t) {
            this._mdf = false, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(), this.textProperty._isFirstFrame = false, this.textProperty._mdf = false);
          }, ITextElement.prototype.createPathShape = function(t, e) {
            var i, r, s = e.length, a = "";
            for (i = 0; i < s; i += 1)
              r = e[i].ks.k, a += buildShapeString(r, r.i.length, true, t);
            return a;
          }, ITextElement.prototype.updateDocumentData = function(t, e) {
            this.textProperty.updateDocumentData(t, e);
          }, ITextElement.prototype.canResizeFont = function(t) {
            this.textProperty.canResizeFont(t);
          }, ITextElement.prototype.setMinimumFontSize = function(t) {
            this.textProperty.setMinimumFontSize(t);
          }, ITextElement.prototype.applyTextPropertiesToMatrix = function(t, e, i, r, s) {
            switch (t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0), e.translate(0, -t.ls, 0), t.j) {
              case 1:
                e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[i]), 0, 0);
                break;
              case 2:
                e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[i]) / 2, 0, 0);
            }
            e.translate(r, s, 0);
          }, ITextElement.prototype.buildColor = function(t) {
            return "rgb(" + Math.round(255 * t[0]) + "," + Math.round(255 * t[1]) + "," + Math.round(255 * t[2]) + ")";
          }, ITextElement.prototype.emptyProp = new LetterProps(), ITextElement.prototype.destroy = function() {
          }, extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement), ICompElement.prototype.initElement = function(t, e, i) {
            this.initFrame(), this.initBaseData(t, e, i), this.initTransform(t, e, i), this.initRenderable(), this.initHierarchy(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), !this.data.xt && e.progressiveLoad || this.buildAllItems(), this.hide();
          }, ICompElement.prototype.prepareFrame = function(t) {
            if (this._mdf = false, this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.isInRange || this.data.xt) {
              if (this.tm._placeholder)
                this.renderedFrame = t / this.data.sr;
              else {
                var e = this.tm.v;
                e === this.data.op && (e = this.data.op - 1), this.renderedFrame = e;
              }
              var i, r = this.elements.length;
              for (this.completeLayers || this.checkLayers(this.renderedFrame), i = r - 1; i >= 0; i -= 1)
                (this.completeLayers || this.elements[i]) && (this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st), this.elements[i]._mdf && (this._mdf = true));
            }
          }, ICompElement.prototype.renderInnerContent = function() {
            var t, e = this.layers.length;
            for (t = 0; t < e; t += 1)
              (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();
          }, ICompElement.prototype.setElements = function(t) {
            this.elements = t;
          }, ICompElement.prototype.getElements = function() {
            return this.elements;
          }, ICompElement.prototype.destroyElements = function() {
            var t, e = this.layers.length;
            for (t = 0; t < e; t += 1)
              this.elements[t] && this.elements[t].destroy();
          }, ICompElement.prototype.destroy = function() {
            this.destroyElements(), this.destroyBaseElement();
          }, extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement), IImageElement.prototype.createContent = function() {
            var t = this.globalData.getAssetsPath(this.assetData);
            this.innerElem = createNS("image"), this.innerElem.setAttribute("width", this.assetData.w + "px"), this.innerElem.setAttribute("height", this.assetData.h + "px"), this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio), this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), this.layerElement.appendChild(this.innerElem);
          }, IImageElement.prototype.sourceRectAtTime = function() {
            return this.sourceRect;
          }, extendPrototype([IImageElement], ISolidElement), ISolidElement.prototype.createContent = function() {
            var t = createNS("rect");
            t.setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.layerElement.appendChild(t);
          }, AudioElement.prototype.prepareFrame = function(t) {
            if (this.prepareRenderableFrame(t, true), this.prepareProperties(t, true), this.tm._placeholder)
              this._currentTime = t / this.data.sr;
            else {
              var e = this.tm.v;
              this._currentTime = e;
            }
          }, extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement), AudioElement.prototype.renderFrame = function() {
            this.isInRange && this._canPlay && (this._isPlaying ? (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) && this.audio.seek(this._currentTime / this.globalData.frameRate) : (this.audio.play(), this.audio.seek(this._currentTime / this.globalData.frameRate), this._isPlaying = true));
          }, AudioElement.prototype.show = function() {
          }, AudioElement.prototype.hide = function() {
            this.audio.pause(), this._isPlaying = false;
          }, AudioElement.prototype.pause = function() {
            this.audio.pause(), this._isPlaying = false, this._canPlay = false;
          }, AudioElement.prototype.resume = function() {
            this._canPlay = true;
          }, AudioElement.prototype.setRate = function(t) {
            this.audio.rate(t);
          }, AudioElement.prototype.volume = function(t) {
            this.audio.volume(t);
          }, AudioElement.prototype.getBaseElement = function() {
            return null;
          }, AudioElement.prototype.destroy = function() {
          }, AudioElement.prototype.sourceRectAtTime = function() {
          }, AudioElement.prototype.initExpressions = function() {
          }, FootageElement.prototype.prepareFrame = function() {
          }, extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement), FootageElement.prototype.getBaseElement = function() {
            return null;
          }, FootageElement.prototype.renderFrame = function() {
          }, FootageElement.prototype.destroy = function() {
          }, FootageElement.prototype.initExpressions = function() {
            this.layerInterface = FootageInterface(this);
          }, FootageElement.prototype.getFootageData = function() {
            return this.footageData;
          }, extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement), extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement), SVGTextLottieElement.prototype.createContent = function() {
            this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"));
          }, SVGTextLottieElement.prototype.buildTextContents = function(t) {
            for (var e = 0, i = t.length, r = [], s = ""; e < i; )
              t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3) ? (r.push(s), s = "") : s += t[e], e += 1;
            return r.push(s), r;
          }, SVGTextLottieElement.prototype.buildNewText = function() {
            var t, e, i = this.textProperty.currentData;
            this.renderedLetters = createSizedArray(i ? i.l.length : 0), i.fc ? this.layerElement.setAttribute("fill", this.buildColor(i.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"), i.sc && (this.layerElement.setAttribute("stroke", this.buildColor(i.sc)), this.layerElement.setAttribute("stroke-width", i.sw)), this.layerElement.setAttribute("font-size", i.finalSize);
            var r = this.globalData.fontManager.getFontByName(i.f);
            if (r.fClass)
              this.layerElement.setAttribute("class", r.fClass);
            else {
              this.layerElement.setAttribute("font-family", r.fFamily);
              var s = i.fWeight, a = i.fStyle;
              this.layerElement.setAttribute("font-style", a), this.layerElement.setAttribute("font-weight", s);
            }
            this.layerElement.setAttribute("aria-label", i.t);
            var n, o = i.l || [], h = !!this.globalData.fontManager.chars;
            e = o.length;
            var l, p = this.mHelper, c = "", m = this.data.singleShape, f = 0, d = 0, u = true, y = 1e-3 * i.tr * i.finalSize;
            if (!m || h || i.sz) {
              var g, v, b = this.textSpans.length;
              for (t = 0; t < e; t += 1)
                h && m && 0 !== t || (n = b > t ? this.textSpans[t] : createNS(h ? "path" : "text"), b <= t && (n.setAttribute("stroke-linecap", "butt"), n.setAttribute("stroke-linejoin", "round"), n.setAttribute("stroke-miterlimit", "4"), this.textSpans[t] = n, this.layerElement.appendChild(n)), n.style.display = "inherit"), p.reset(), p.scale(i.finalSize / 100, i.finalSize / 100), m && (o[t].n && (f = -y, d += i.yOffset, d += u ? 1 : 0, u = false), this.applyTextPropertiesToMatrix(i, p, o[t].line, f, d), f += o[t].l || 0, f += y), h ? (l = (g = (v = this.globalData.fontManager.getCharData(i.finalText[t], r.fStyle, this.globalData.fontManager.getFontByName(i.f).fFamily)) && v.data || {}).shapes ? g.shapes[0].it : [], m ? c += this.createPathShape(p, l) : n.setAttribute("d", this.createPathShape(p, l))) : (m && n.setAttribute("transform", "translate(" + p.props[12] + "," + p.props[13] + ")"), n.textContent = o[t].val, n.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"));
              m && n && n.setAttribute("d", c);
            } else {
              var P = this.textContainer, E = "start";
              switch (i.j) {
                case 1:
                  E = "end";
                  break;
                case 2:
                  E = "middle";
                  break;
                default:
                  E = "start";
              }
              P.setAttribute("text-anchor", E), P.setAttribute("letter-spacing", y);
              var x = this.buildTextContents(i.finalText);
              for (e = x.length, d = i.ps ? i.ps[1] + i.ascent : 0, t = 0; t < e; t += 1)
                (n = this.textSpans[t] || createNS("tspan")).textContent = x[t], n.setAttribute("x", 0), n.setAttribute("y", d), n.style.display = "inherit", P.appendChild(n), this.textSpans[t] = n, d += i.finalLineHeight;
              this.layerElement.appendChild(P);
            }
            for (; t < this.textSpans.length; )
              this.textSpans[t].style.display = "none", t += 1;
            this._sizeChanged = true;
          }, SVGTextLottieElement.prototype.sourceRectAtTime = function() {
            if (this.prepareFrame(this.comp.renderedFrame - this.data.st), this.renderInnerContent(), this._sizeChanged) {
              this._sizeChanged = false;
              var t = this.layerElement.getBBox();
              this.bbox = { top: t.y, left: t.x, width: t.width, height: t.height };
            }
            return this.bbox;
          }, SVGTextLottieElement.prototype.renderInnerContent = function() {
            if (!this.data.singleShape && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
              var t, e;
              this._sizeChanged = true;
              var i, r, s = this.textAnimator.renderedLetters, a = this.textProperty.currentData.l;
              for (e = a.length, t = 0; t < e; t += 1)
                a[t].n || (i = s[t], r = this.textSpans[t], i._mdf.m && r.setAttribute("transform", i.m), i._mdf.o && r.setAttribute("opacity", i.o), i._mdf.sw && r.setAttribute("stroke-width", i.sw), i._mdf.sc && r.setAttribute("stroke", i.sc), i._mdf.fc && r.setAttribute("fill", i.fc));
            }
          }, extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement), SVGShapeElement.prototype.initSecondaryElement = function() {
          }, SVGShapeElement.prototype.identityMatrix = new Matrix(), SVGShapeElement.prototype.buildExpressionInterface = function() {
          }, SVGShapeElement.prototype.createContent = function() {
            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true), this.filterUniqueShapes();
          }, SVGShapeElement.prototype.filterUniqueShapes = function() {
            var t, e, i, r, s = this.shapes.length, a = this.stylesList.length, n = [], o = false;
            for (i = 0; i < a; i += 1) {
              for (r = this.stylesList[i], o = false, n.length = 0, t = 0; t < s; t += 1)
                -1 !== (e = this.shapes[t]).styles.indexOf(r) && (n.push(e), o = e._isAnimated || o);
              n.length > 1 && o && this.setShapesAsAnimated(n);
            }
          }, SVGShapeElement.prototype.setShapesAsAnimated = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
              t[e].setAsAnimated();
          }, SVGShapeElement.prototype.createStyleElement = function(t, e) {
            var i, r = new SVGStyleData(t, e), s = r.pElem;
            return "st" === t.ty ? i = new SVGStrokeStyleData(this, t, r) : "fl" === t.ty ? i = new SVGFillStyleData(this, t, r) : "gf" !== t.ty && "gs" !== t.ty || (i = new ("gf" === t.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this, t, r), this.globalData.defs.appendChild(i.gf), i.maskId && (this.globalData.defs.appendChild(i.ms), this.globalData.defs.appendChild(i.of), s.setAttribute("mask", "url(" + locationHref + "#" + i.maskId + ")"))), "st" !== t.ty && "gs" !== t.ty || (s.setAttribute("stroke-linecap", this.lcEnum[t.lc] || "round"), s.setAttribute("stroke-linejoin", this.ljEnum[t.lj] || "round"), s.setAttribute("fill-opacity", "0"), 1 === t.lj && s.setAttribute("stroke-miterlimit", t.ml)), 2 === t.r && s.setAttribute("fill-rule", "evenodd"), t.ln && s.setAttribute("id", t.ln), t.cl && s.setAttribute("class", t.cl), t.bm && (s.style["mix-blend-mode"] = getBlendMode(t.bm)), this.stylesList.push(r), this.addToAnimatedContents(t, i), i;
          }, SVGShapeElement.prototype.createGroupElement = function(t) {
            var e = new ShapeGroupData();
            return t.ln && e.gr.setAttribute("id", t.ln), t.cl && e.gr.setAttribute("class", t.cl), t.bm && (e.gr.style["mix-blend-mode"] = getBlendMode(t.bm)), e;
          }, SVGShapeElement.prototype.createTransformElement = function(t, e) {
            var i = TransformPropertyFactory.getTransformProperty(this, t, this), r = new SVGTransformData(i, i.o, e);
            return this.addToAnimatedContents(t, r), r;
          }, SVGShapeElement.prototype.createShapeElement = function(t, e, i) {
            var r = 4;
            "rc" === t.ty ? r = 5 : "el" === t.ty ? r = 6 : "sr" === t.ty && (r = 7);
            var s = new SVGShapeData(e, i, ShapePropertyFactory.getShapeProp(this, t, r, this));
            return this.shapes.push(s), this.addShapeToModifiers(s), this.addToAnimatedContents(t, s), s;
          }, SVGShapeElement.prototype.addToAnimatedContents = function(t, e) {
            for (var i = 0, r = this.animatedContents.length; i < r; ) {
              if (this.animatedContents[i].element === e)
                return;
              i += 1;
            }
            this.animatedContents.push({ fn: SVGElementsRenderer.createRenderFunction(t), element: e, data: t });
          }, SVGShapeElement.prototype.setElementStyles = function(t) {
            var e, i = t.styles, r = this.stylesList.length;
            for (e = 0; e < r; e += 1)
              this.stylesList[e].closed || i.push(this.stylesList[e]);
          }, SVGShapeElement.prototype.reloadShapes = function() {
            var t;
            this._isFirstFrame = true;
            var e = this.itemsData.length;
            for (t = 0; t < e; t += 1)
              this.prevViewData[t] = this.itemsData[t];
            for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true), this.filterUniqueShapes(), e = this.dynamicProperties.length, t = 0; t < e; t += 1)
              this.dynamicProperties[t].getValue();
            this.renderModifiers();
          }, SVGShapeElement.prototype.searchShapes = function(t, e, i, r, s, a, n) {
            var o, h, l, p, c, m, f = [].concat(a), d = t.length - 1, u = [], y = [];
            for (o = d; o >= 0; o -= 1) {
              if ((m = this.searchProcessedElement(t[o])) ? e[o] = i[m - 1] : t[o]._render = n, "fl" === t[o].ty || "st" === t[o].ty || "gf" === t[o].ty || "gs" === t[o].ty)
                m ? e[o].style.closed = false : e[o] = this.createStyleElement(t[o], s), t[o]._render && r.appendChild(e[o].style.pElem), u.push(e[o].style);
              else if ("gr" === t[o].ty) {
                if (m)
                  for (l = e[o].it.length, h = 0; h < l; h += 1)
                    e[o].prevViewData[h] = e[o].it[h];
                else
                  e[o] = this.createGroupElement(t[o]);
                this.searchShapes(t[o].it, e[o].it, e[o].prevViewData, e[o].gr, s + 1, f, n), t[o]._render && r.appendChild(e[o].gr);
              } else
                "tr" === t[o].ty ? (m || (e[o] = this.createTransformElement(t[o], r)), p = e[o].transform, f.push(p)) : "sh" === t[o].ty || "rc" === t[o].ty || "el" === t[o].ty || "sr" === t[o].ty ? (m || (e[o] = this.createShapeElement(t[o], f, s)), this.setElementStyles(e[o])) : "tm" === t[o].ty || "rd" === t[o].ty || "ms" === t[o].ty || "pb" === t[o].ty ? (m ? (c = e[o]).closed = false : ((c = ShapeModifiers.getModifier(t[o].ty)).init(this, t[o]), e[o] = c, this.shapeModifiers.push(c)), y.push(c)) : "rp" === t[o].ty && (m ? (c = e[o]).closed = true : (c = ShapeModifiers.getModifier(t[o].ty), e[o] = c, c.init(this, t, o, e), this.shapeModifiers.push(c), n = false), y.push(c));
              this.addProcessedElement(t[o], o + 1);
            }
            for (d = u.length, o = 0; o < d; o += 1)
              u[o].closed = true;
            for (d = y.length, o = 0; o < d; o += 1)
              y[o].closed = true;
          }, SVGShapeElement.prototype.renderInnerContent = function() {
            var t;
            this.renderModifiers();
            var e = this.stylesList.length;
            for (t = 0; t < e; t += 1)
              this.stylesList[t].reset();
            for (this.renderShape(), t = 0; t < e; t += 1)
              (this.stylesList[t]._mdf || this._isFirstFrame) && (this.stylesList[t].msElem && (this.stylesList[t].msElem.setAttribute("d", this.stylesList[t].d), this.stylesList[t].d = "M0 0" + this.stylesList[t].d), this.stylesList[t].pElem.setAttribute("d", this.stylesList[t].d || "M0 0"));
          }, SVGShapeElement.prototype.renderShape = function() {
            var t, e, i = this.animatedContents.length;
            for (t = 0; t < i; t += 1)
              e = this.animatedContents[t], (this._isFirstFrame || e.element._isAnimated) && true !== e.data && e.fn(e.data, e.element, this._isFirstFrame);
          }, SVGShapeElement.prototype.destroy = function() {
            this.destroyBaseElement(), this.shapesData = null, this.itemsData = null;
          }, SVGTintFilter.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
              var e = this.filterManager.effectElements[0].p.v, i = this.filterManager.effectElements[1].p.v, r = this.filterManager.effectElements[2].p.v / 100;
              this.matrixFilter.setAttribute("values", i[0] - e[0] + " 0 0 0 " + e[0] + " " + (i[1] - e[1]) + " 0 0 0 " + e[1] + " " + (i[2] - e[2]) + " 0 0 0 " + e[2] + " 0 0 0 " + r + " 0");
            }
          }, SVGFillFilter.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
              var e = this.filterManager.effectElements[2].p.v, i = this.filterManager.effectElements[6].p.v;
              this.matrixFilter.setAttribute("values", "0 0 0 0 " + e[0] + " 0 0 0 0 " + e[1] + " 0 0 0 0 " + e[2] + " 0 0 0 " + i + " 0");
            }
          }, SVGGaussianBlurEffect.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
              var e = 0.3 * this.filterManager.effectElements[0].p.v, i = this.filterManager.effectElements[1].p.v, r = 3 == i ? 0 : e, s = 2 == i ? 0 : e;
              this.feGaussianBlur.setAttribute("stdDeviation", r + " " + s);
              var a = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
              this.feGaussianBlur.setAttribute("edgeMode", a);
            }
          }, SVGStrokeEffect.prototype.initialize = function() {
            var t, e, i, r, s = this.elem.layerElement.children || this.elem.layerElement.childNodes;
            for (1 === this.filterManager.effectElements[1].p.v ? (r = this.elem.maskManager.masksProperties.length, i = 0) : r = 1 + (i = this.filterManager.effectElements[0].p.v - 1), (e = createNS("g")).setAttribute("fill", "none"), e.setAttribute("stroke-linecap", "round"), e.setAttribute("stroke-dashoffset", 1); i < r; i += 1)
              t = createNS("path"), e.appendChild(t), this.paths.push({ p: t, m: i });
            if (3 === this.filterManager.effectElements[10].p.v) {
              var a = createNS("mask"), n = createElementID();
              a.setAttribute("id", n), a.setAttribute("mask-type", "alpha"), a.appendChild(e), this.elem.globalData.defs.appendChild(a);
              var o = createNS("g");
              for (o.setAttribute("mask", "url(" + locationHref + "#" + n + ")"); s[0]; )
                o.appendChild(s[0]);
              this.elem.layerElement.appendChild(o), this.masker = a, e.setAttribute("stroke", "#fff");
            } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
              if (2 === this.filterManager.effectElements[10].p.v)
                for (s = this.elem.layerElement.children || this.elem.layerElement.childNodes; s.length; )
                  this.elem.layerElement.removeChild(s[0]);
              this.elem.layerElement.appendChild(e), this.elem.layerElement.removeAttribute("mask"), e.setAttribute("stroke", "#fff");
            }
            this.initialized = true, this.pathMasker = e;
          }, SVGStrokeEffect.prototype.renderFrame = function(t) {
            var e;
            this.initialized || this.initialize();
            var i, r, s = this.paths.length;
            for (e = 0; e < s; e += 1)
              if (-1 !== this.paths[e].m && (i = this.elem.maskManager.viewData[this.paths[e].m], r = this.paths[e].p, (t || this.filterManager._mdf || i.prop._mdf) && r.setAttribute("d", i.lastPath), t || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || i.prop._mdf)) {
                var a;
                if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                  var n = 0.01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v), o = 0.01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v), h = r.getTotalLength();
                  a = "0 0 0 " + h * n + " ";
                  var l, p = h * (o - n), c = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01, m = Math.floor(p / c);
                  for (l = 0; l < m; l += 1)
                    a += "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01 + " ";
                  a += "0 " + 10 * h + " 0 0";
                } else
                  a = "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01;
                r.setAttribute("stroke-dasharray", a);
              }
            if ((t || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v), (t || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v), (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (t || this.filterManager.effectElements[3].p._mdf)) {
              var f = this.filterManager.effectElements[3].p.v;
              this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(255 * f[0]) + "," + bmFloor(255 * f[1]) + "," + bmFloor(255 * f[2]) + ")");
            }
          }, SVGTritoneFilter.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
              var e = this.filterManager.effectElements[0].p.v, i = this.filterManager.effectElements[1].p.v, r = this.filterManager.effectElements[2].p.v, s = r[0] + " " + i[0] + " " + e[0], a = r[1] + " " + i[1] + " " + e[1], n = r[2] + " " + i[2] + " " + e[2];
              this.feFuncR.setAttribute("tableValues", s), this.feFuncG.setAttribute("tableValues", a), this.feFuncB.setAttribute("tableValues", n);
            }
          }, SVGProLevelsFilter.prototype.createFeFunc = function(t, e) {
            var i = createNS(t);
            return i.setAttribute("type", "table"), e.appendChild(i), i;
          }, SVGProLevelsFilter.prototype.getTableValue = function(t, e, i, r, s) {
            for (var a, n, o = 0, h = Math.min(t, e), l = Math.max(t, e), p = Array.call(null, { length: 256 }), c = 0, m = s - r, f = e - t; o <= 256; )
              n = (a = o / 256) <= h ? f < 0 ? s : r : a >= l ? f < 0 ? r : s : r + m * Math.pow((a - t) / f, 1 / i), p[c] = n, c += 1, o += 256 / 255;
            return p.join(" ");
          }, SVGProLevelsFilter.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
              var e, i = this.filterManager.effectElements;
              this.feFuncRComposed && (t || i[3].p._mdf || i[4].p._mdf || i[5].p._mdf || i[6].p._mdf || i[7].p._mdf) && (e = this.getTableValue(i[3].p.v, i[4].p.v, i[5].p.v, i[6].p.v, i[7].p.v), this.feFuncRComposed.setAttribute("tableValues", e), this.feFuncGComposed.setAttribute("tableValues", e), this.feFuncBComposed.setAttribute("tableValues", e)), this.feFuncR && (t || i[10].p._mdf || i[11].p._mdf || i[12].p._mdf || i[13].p._mdf || i[14].p._mdf) && (e = this.getTableValue(i[10].p.v, i[11].p.v, i[12].p.v, i[13].p.v, i[14].p.v), this.feFuncR.setAttribute("tableValues", e)), this.feFuncG && (t || i[17].p._mdf || i[18].p._mdf || i[19].p._mdf || i[20].p._mdf || i[21].p._mdf) && (e = this.getTableValue(i[17].p.v, i[18].p.v, i[19].p.v, i[20].p.v, i[21].p.v), this.feFuncG.setAttribute("tableValues", e)), this.feFuncB && (t || i[24].p._mdf || i[25].p._mdf || i[26].p._mdf || i[27].p._mdf || i[28].p._mdf) && (e = this.getTableValue(i[24].p.v, i[25].p.v, i[26].p.v, i[27].p.v, i[28].p.v), this.feFuncB.setAttribute("tableValues", e)), this.feFuncA && (t || i[31].p._mdf || i[32].p._mdf || i[33].p._mdf || i[34].p._mdf || i[35].p._mdf) && (e = this.getTableValue(i[31].p.v, i[32].p.v, i[33].p.v, i[34].p.v, i[35].p.v), this.feFuncA.setAttribute("tableValues", e));
            }
          }, SVGDropShadowEffect.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
              if ((t || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4), t || this.filterManager.effectElements[0].p._mdf) {
                var e = this.filterManager.effectElements[0].p.v;
                this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * e[0]), Math.round(255 * e[1]), Math.round(255 * e[2])));
              }
              if ((t || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255), t || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
                var i = this.filterManager.effectElements[3].p.v, r = (this.filterManager.effectElements[2].p.v - 90) * degToRads, s = i * Math.cos(r), a = i * Math.sin(r);
                this.feOffset.setAttribute("dx", s), this.feOffset.setAttribute("dy", a);
              }
            }
          };
          var _svgMatteSymbols = [];
          function SVGMatte3Effect(t, e, i) {
            this.initialized = false, this.filterManager = e, this.filterElem = t, this.elem = i, i.matteElement = createNS("g"), i.matteElement.appendChild(i.layerElement), i.matteElement.appendChild(i.transformedElement), i.baseElement = i.matteElement;
          }
          function SVGEffects(t) {
            var e, i, r = t.data.ef ? t.data.ef.length : 0, s = createElementID(), a = filtersFactory.createFilter(s, true), n = 0;
            for (this.filters = [], e = 0; e < r; e += 1)
              i = null, 20 === t.data.ef[e].ty ? (n += 1, i = new SVGTintFilter(a, t.effectsManager.effectElements[e])) : 21 === t.data.ef[e].ty ? (n += 1, i = new SVGFillFilter(a, t.effectsManager.effectElements[e])) : 22 === t.data.ef[e].ty ? i = new SVGStrokeEffect(t, t.effectsManager.effectElements[e]) : 23 === t.data.ef[e].ty ? (n += 1, i = new SVGTritoneFilter(a, t.effectsManager.effectElements[e])) : 24 === t.data.ef[e].ty ? (n += 1, i = new SVGProLevelsFilter(a, t.effectsManager.effectElements[e])) : 25 === t.data.ef[e].ty ? (n += 1, i = new SVGDropShadowEffect(a, t.effectsManager.effectElements[e])) : 28 === t.data.ef[e].ty ? i = new SVGMatte3Effect(a, t.effectsManager.effectElements[e], t) : 29 === t.data.ef[e].ty && (n += 1, i = new SVGGaussianBlurEffect(a, t.effectsManager.effectElements[e])), i && this.filters.push(i);
            n && (t.globalData.defs.appendChild(a), t.layerElement.setAttribute("filter", "url(" + locationHref + "#" + s + ")")), this.filters.length && t.addRenderableComponent(this);
          }
          function CVContextData() {
            var t;
            for (this.saved = [], this.cArrPos = 0, this.cTr = new Matrix(), this.cO = 1, this.savedOp = createTypedArray("float32", 15), t = 0; t < 15; t += 1)
              this.saved[t] = createTypedArray("float32", 16);
            this._length = 15;
          }
          function CVBaseElement() {
          }
          function CVImageElement(t, e, i) {
            this.assetData = e.getAssetData(t.refId), this.img = e.imageLoader.getAsset(this.assetData), this.initElement(t, e, i);
          }
          function CVCompElement(t, e, i) {
            this.completeLayers = false, this.layers = t.layers, this.pendingElements = [], this.elements = createSizedArray(this.layers.length), this.initElement(t, e, i), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: true };
          }
          function CVMaskElement(t, e) {
            var i;
            this.data = t, this.element = e, this.masksProperties = this.data.masksProperties || [], this.viewData = createSizedArray(this.masksProperties.length);
            var r = this.masksProperties.length, s = false;
            for (i = 0; i < r; i += 1)
              "n" !== this.masksProperties[i].mode && (s = true), this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);
            this.hasMasks = s, s && this.element.addRenderableComponent(this);
          }
          function CVShapeElement(t, e, i) {
            this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.itemsData = [], this.prevViewData = [], this.shapeModifiers = [], this.processedElements = [], this.transformsManager = new ShapeTransformManager(), this.initElement(t, e, i);
          }
          function CVSolidElement(t, e, i) {
            this.initElement(t, e, i);
          }
          function CVTextElement(t, e, i) {
            this.textSpans = [], this.yOffset = 0, this.fillColorAnim = false, this.strokeColorAnim = false, this.strokeWidthAnim = false, this.stroke = false, this.fill = false, this.justifyOffset = 0, this.currentRender = null, this.renderType = "canvas", this.values = { fill: "rgba(0,0,0,0)", stroke: "rgba(0,0,0,0)", sWidth: 0, fValue: "" }, this.initElement(t, e, i);
          }
          function CVEffects() {
          }
          function HBaseElement() {
          }
          function HSolidElement(t, e, i) {
            this.initElement(t, e, i);
          }
          function HCompElement(t, e, i) {
            this.layers = t.layers, this.supports3d = !t.hasMask, this.completeLayers = false, this.pendingElements = [], this.elements = this.layers ? createSizedArray(this.layers.length) : [], this.initElement(t, e, i), this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: true };
          }
          function HShapeElement(t, e, i) {
            this.shapes = [], this.shapesData = t.shapes, this.stylesList = [], this.shapeModifiers = [], this.itemsData = [], this.processedElements = [], this.animatedContents = [], this.shapesContainer = createNS("g"), this.initElement(t, e, i), this.prevViewData = [], this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 };
          }
          function HTextElement(t, e, i) {
            this.textSpans = [], this.textPaths = [], this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 }, this.renderType = "svg", this.isMasked = false, this.initElement(t, e, i);
          }
          function HImageElement(t, e, i) {
            this.assetData = e.getAssetData(t.refId), this.initElement(t, e, i);
          }
          function HCameraElement(t, e, i) {
            this.initFrame(), this.initBaseData(t, e, i), this.initHierarchy();
            var r = PropertyFactory.getProp;
            if (this.pe = r(this, t.pe, 0, 0, this), t.ks.p.s ? (this.px = r(this, t.ks.p.x, 1, 0, this), this.py = r(this, t.ks.p.y, 1, 0, this), this.pz = r(this, t.ks.p.z, 1, 0, this)) : this.p = r(this, t.ks.p, 1, 0, this), t.ks.a && (this.a = r(this, t.ks.a, 1, 0, this)), t.ks.or.k.length && t.ks.or.k[0].to) {
              var s, a = t.ks.or.k.length;
              for (s = 0; s < a; s += 1)
                t.ks.or.k[s].to = null, t.ks.or.k[s].ti = null;
            }
            this.or = r(this, t.ks.or, 1, degToRads, this), this.or.sh = true, this.rx = r(this, t.ks.rx, 0, degToRads, this), this.ry = r(this, t.ks.ry, 0, degToRads, this), this.rz = r(this, t.ks.rz, 0, degToRads, this), this.mat = new Matrix(), this._prevMat = new Matrix(), this._isFirstFrame = true, this.finalTransform = { mProp: this };
          }
          function HEffects() {
          }
          SVGMatte3Effect.prototype.findSymbol = function(t) {
            for (var e = 0, i = _svgMatteSymbols.length; e < i; ) {
              if (_svgMatteSymbols[e] === t)
                return _svgMatteSymbols[e];
              e += 1;
            }
            return null;
          }, SVGMatte3Effect.prototype.replaceInParent = function(t, e) {
            var i = t.layerElement.parentNode;
            if (i) {
              for (var r, s = i.children, a = 0, n = s.length; a < n && s[a] !== t.layerElement; )
                a += 1;
              a <= n - 2 && (r = s[a + 1]);
              var o = createNS("use");
              o.setAttribute("href", "#" + e), r ? i.insertBefore(o, r) : i.appendChild(o);
            }
          }, SVGMatte3Effect.prototype.setElementAsMask = function(t, e) {
            if (!this.findSymbol(e)) {
              var i = createElementID(), r = createNS("mask");
              r.setAttribute("id", e.layerId), r.setAttribute("mask-type", "alpha"), _svgMatteSymbols.push(e);
              var s = t.globalData.defs;
              s.appendChild(r);
              var a = createNS("symbol");
              a.setAttribute("id", i), this.replaceInParent(e, i), a.appendChild(e.layerElement), s.appendChild(a);
              var n = createNS("use");
              n.setAttribute("href", "#" + i), r.appendChild(n), e.data.hd = false, e.show();
            }
            t.setMatte(e.layerId);
          }, SVGMatte3Effect.prototype.initialize = function() {
            for (var t = this.filterManager.effectElements[0].p.v, e = this.elem.comp.elements, i = 0, r = e.length; i < r; )
              e[i] && e[i].data.ind === t && this.setElementAsMask(this.elem, e[i]), i += 1;
            this.initialized = true;
          }, SVGMatte3Effect.prototype.renderFrame = function() {
            this.initialized || this.initialize();
          }, SVGEffects.prototype.renderFrame = function(t) {
            var e, i = this.filters.length;
            for (e = 0; e < i; e += 1)
              this.filters[e].renderFrame(t);
          }, CVContextData.prototype.duplicate = function() {
            var t = 2 * this._length, e = this.savedOp;
            this.savedOp = createTypedArray("float32", t), this.savedOp.set(e);
            var i = 0;
            for (i = this._length; i < t; i += 1)
              this.saved[i] = createTypedArray("float32", 16);
            this._length = t;
          }, CVContextData.prototype.reset = function() {
            this.cArrPos = 0, this.cTr.reset(), this.cO = 1;
          }, CVBaseElement.prototype = { createElements: function() {
          }, initRendererElement: function() {
          }, createContainerElements: function() {
            this.canvasContext = this.globalData.canvasContext, this.renderableEffectsManager = new CVEffects(this);
          }, createContent: function() {
          }, setBlendMode: function() {
            var t = this.globalData;
            if (t.blendMode !== this.data.bm) {
              t.blendMode = this.data.bm;
              var e = getBlendMode(this.data.bm);
              t.canvasContext.globalCompositeOperation = e;
            }
          }, createRenderableComponents: function() {
            this.maskManager = new CVMaskElement(this.data, this);
          }, hideElement: function() {
            this.hidden || this.isInRange && !this.isTransparent || (this.hidden = true);
          }, showElement: function() {
            this.isInRange && !this.isTransparent && (this.hidden = false, this._isFirstFrame = true, this.maskManager._isFirstFrame = true);
          }, renderFrame: function() {
            if (!this.hidden && !this.data.hd) {
              this.renderTransform(), this.renderRenderable(), this.setBlendMode();
              var t = 0 === this.data.ty;
              this.globalData.renderer.save(t), this.globalData.renderer.ctxTransform(this.finalTransform.mat.props), this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v), this.renderInnerContent(), this.globalData.renderer.restore(t), this.maskManager.hasMasks && this.globalData.renderer.restore(true), this._isFirstFrame && (this._isFirstFrame = false);
            }
          }, destroy: function() {
            this.canvasContext = null, this.data = null, this.globalData = null, this.maskManager.destroy();
          }, mHelper: new Matrix() }, CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement, CVBaseElement.prototype.show = CVBaseElement.prototype.showElement, extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement), CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement, CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame, CVImageElement.prototype.createContent = function() {
            if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
              var t = createTag("canvas");
              t.width = this.assetData.w, t.height = this.assetData.h;
              var e, i, r = t.getContext("2d"), s = this.img.width, a = this.img.height, n = s / a, o = this.assetData.w / this.assetData.h, h = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
              n > o && "xMidYMid slice" === h || n < o && "xMidYMid slice" !== h ? e = (i = a) * o : i = (e = s) / o, r.drawImage(this.img, (s - e) / 2, (a - i) / 2, e, i, 0, 0, this.assetData.w, this.assetData.h), this.img = t;
            }
          }, CVImageElement.prototype.renderInnerContent = function() {
            this.canvasContext.drawImage(this.img, 0, 0);
          }, CVImageElement.prototype.destroy = function() {
            this.img = null;
          }, extendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement), CVCompElement.prototype.renderInnerContent = function() {
            var t, e = this.canvasContext;
            for (e.beginPath(), e.moveTo(0, 0), e.lineTo(this.data.w, 0), e.lineTo(this.data.w, this.data.h), e.lineTo(0, this.data.h), e.lineTo(0, 0), e.clip(), t = this.layers.length - 1; t >= 0; t -= 1)
              (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();
          }, CVCompElement.prototype.destroy = function() {
            var t;
            for (t = this.layers.length - 1; t >= 0; t -= 1)
              this.elements[t] && this.elements[t].destroy();
            this.layers = null, this.elements = null;
          }, CVMaskElement.prototype.renderFrame = function() {
            if (this.hasMasks) {
              var t, e, i, r, s = this.element.finalTransform.mat, a = this.element.canvasContext, n = this.masksProperties.length;
              for (a.beginPath(), t = 0; t < n; t += 1)
                if ("n" !== this.masksProperties[t].mode) {
                  var o;
                  this.masksProperties[t].inv && (a.moveTo(0, 0), a.lineTo(this.element.globalData.compSize.w, 0), a.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h), a.lineTo(0, this.element.globalData.compSize.h), a.lineTo(0, 0)), r = this.viewData[t].v, e = s.applyToPointArray(r.v[0][0], r.v[0][1], 0), a.moveTo(e[0], e[1]);
                  var h = r._length;
                  for (o = 1; o < h; o += 1)
                    i = s.applyToTriplePoints(r.o[o - 1], r.i[o], r.v[o]), a.bezierCurveTo(i[0], i[1], i[2], i[3], i[4], i[5]);
                  i = s.applyToTriplePoints(r.o[o - 1], r.i[0], r.v[0]), a.bezierCurveTo(i[0], i[1], i[2], i[3], i[4], i[5]);
                }
              this.element.globalData.renderer.save(true), a.clip();
            }
          }, CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty, CVMaskElement.prototype.destroy = function() {
            this.element = null;
          }, extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement), CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement, CVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: false }, CVShapeElement.prototype.dashResetter = [], CVShapeElement.prototype.createContent = function() {
            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);
          }, CVShapeElement.prototype.createStyleElement = function(t, e) {
            var i = { data: t, type: t.ty, preTransforms: this.transformsManager.addTransformSequence(e), transforms: [], elements: [], closed: true === t.hd }, r = {};
            if ("fl" === t.ty || "st" === t.ty ? (r.c = PropertyFactory.getProp(this, t.c, 1, 255, this), r.c.k || (i.co = "rgb(" + bmFloor(r.c.v[0]) + "," + bmFloor(r.c.v[1]) + "," + bmFloor(r.c.v[2]) + ")")) : "gf" !== t.ty && "gs" !== t.ty || (r.s = PropertyFactory.getProp(this, t.s, 1, null, this), r.e = PropertyFactory.getProp(this, t.e, 1, null, this), r.h = PropertyFactory.getProp(this, t.h || { k: 0 }, 0, 0.01, this), r.a = PropertyFactory.getProp(this, t.a || { k: 0 }, 0, degToRads, this), r.g = new GradientProperty(this, t.g, this)), r.o = PropertyFactory.getProp(this, t.o, 0, 0.01, this), "st" === t.ty || "gs" === t.ty) {
              if (i.lc = this.lcEnum[t.lc] || "round", i.lj = this.ljEnum[t.lj] || "round", 1 == t.lj && (i.ml = t.ml), r.w = PropertyFactory.getProp(this, t.w, 0, null, this), r.w.k || (i.wi = r.w.v), t.d) {
                var s = new DashProperty(this, t.d, "canvas", this);
                r.d = s, r.d.k || (i.da = r.d.dashArray, i.do = r.d.dashoffset[0]);
              }
            } else
              i.r = 2 === t.r ? "evenodd" : "nonzero";
            return this.stylesList.push(i), r.style = i, r;
          }, CVShapeElement.prototype.createGroupElement = function() {
            return { it: [], prevViewData: [] };
          }, CVShapeElement.prototype.createTransformElement = function(t) {
            return { transform: { opacity: 1, _opMdf: false, key: this.transformsManager.getNewKey(), op: PropertyFactory.getProp(this, t.o, 0, 0.01, this), mProps: TransformPropertyFactory.getTransformProperty(this, t, this) } };
          }, CVShapeElement.prototype.createShapeElement = function(t) {
            var e = new CVShapeData(this, t, this.stylesList, this.transformsManager);
            return this.shapes.push(e), this.addShapeToModifiers(e), e;
          }, CVShapeElement.prototype.reloadShapes = function() {
            var t;
            this._isFirstFrame = true;
            var e = this.itemsData.length;
            for (t = 0; t < e; t += 1)
              this.prevViewData[t] = this.itemsData[t];
            for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []), e = this.dynamicProperties.length, t = 0; t < e; t += 1)
              this.dynamicProperties[t].getValue();
            this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame);
          }, CVShapeElement.prototype.addTransformToStyleList = function(t) {
            var e, i = this.stylesList.length;
            for (e = 0; e < i; e += 1)
              this.stylesList[e].closed || this.stylesList[e].transforms.push(t);
          }, CVShapeElement.prototype.removeTransformFromStyleList = function() {
            var t, e = this.stylesList.length;
            for (t = 0; t < e; t += 1)
              this.stylesList[t].closed || this.stylesList[t].transforms.pop();
          }, CVShapeElement.prototype.closeStyles = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
              t[e].closed = true;
          }, CVShapeElement.prototype.searchShapes = function(t, e, i, r, s) {
            var a, n, o, h, l, p, c = t.length - 1, m = [], f = [], d = [].concat(s);
            for (a = c; a >= 0; a -= 1) {
              if ((h = this.searchProcessedElement(t[a])) ? e[a] = i[h - 1] : t[a]._shouldRender = r, "fl" === t[a].ty || "st" === t[a].ty || "gf" === t[a].ty || "gs" === t[a].ty)
                h ? e[a].style.closed = false : e[a] = this.createStyleElement(t[a], d), m.push(e[a].style);
              else if ("gr" === t[a].ty) {
                if (h)
                  for (o = e[a].it.length, n = 0; n < o; n += 1)
                    e[a].prevViewData[n] = e[a].it[n];
                else
                  e[a] = this.createGroupElement(t[a]);
                this.searchShapes(t[a].it, e[a].it, e[a].prevViewData, r, d);
              } else
                "tr" === t[a].ty ? (h || (p = this.createTransformElement(t[a]), e[a] = p), d.push(e[a]), this.addTransformToStyleList(e[a])) : "sh" === t[a].ty || "rc" === t[a].ty || "el" === t[a].ty || "sr" === t[a].ty ? h || (e[a] = this.createShapeElement(t[a])) : "tm" === t[a].ty || "rd" === t[a].ty || "pb" === t[a].ty ? (h ? (l = e[a]).closed = false : ((l = ShapeModifiers.getModifier(t[a].ty)).init(this, t[a]), e[a] = l, this.shapeModifiers.push(l)), f.push(l)) : "rp" === t[a].ty && (h ? (l = e[a]).closed = true : (l = ShapeModifiers.getModifier(t[a].ty), e[a] = l, l.init(this, t, a, e), this.shapeModifiers.push(l), r = false), f.push(l));
              this.addProcessedElement(t[a], a + 1);
            }
            for (this.removeTransformFromStyleList(), this.closeStyles(m), c = f.length, a = 0; a < c; a += 1)
              f[a].closed = true;
          }, CVShapeElement.prototype.renderInnerContent = function() {
            this.transformHelper.opacity = 1, this.transformHelper._opMdf = false, this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame), this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);
          }, CVShapeElement.prototype.renderShapeTransform = function(t, e) {
            (t._opMdf || e.op._mdf || this._isFirstFrame) && (e.opacity = t.opacity, e.opacity *= e.op.v, e._opMdf = true);
          }, CVShapeElement.prototype.drawLayer = function() {
            var t, e, i, r, s, a, n, o, h, l = this.stylesList.length, p = this.globalData.renderer, c = this.globalData.canvasContext;
            for (t = 0; t < l; t += 1)
              if (("st" !== (o = (h = this.stylesList[t]).type) && "gs" !== o || 0 !== h.wi) && h.data._shouldRender && 0 !== h.coOp && 0 !== this.globalData.currentGlobalAlpha) {
                for (p.save(), a = h.elements, "st" === o || "gs" === o ? (c.strokeStyle = "st" === o ? h.co : h.grd, c.lineWidth = h.wi, c.lineCap = h.lc, c.lineJoin = h.lj, c.miterLimit = h.ml || 0) : c.fillStyle = "fl" === o ? h.co : h.grd, p.ctxOpacity(h.coOp), "st" !== o && "gs" !== o && c.beginPath(), p.ctxTransform(h.preTransforms.finalTransform.props), i = a.length, e = 0; e < i; e += 1) {
                  for ("st" !== o && "gs" !== o || (c.beginPath(), h.da && (c.setLineDash(h.da), c.lineDashOffset = h.do)), s = (n = a[e].trNodes).length, r = 0; r < s; r += 1)
                    "m" === n[r].t ? c.moveTo(n[r].p[0], n[r].p[1]) : "c" === n[r].t ? c.bezierCurveTo(n[r].pts[0], n[r].pts[1], n[r].pts[2], n[r].pts[3], n[r].pts[4], n[r].pts[5]) : c.closePath();
                  "st" !== o && "gs" !== o || (c.stroke(), h.da && c.setLineDash(this.dashResetter));
                }
                "st" !== o && "gs" !== o && c.fill(h.r), p.restore();
              }
          }, CVShapeElement.prototype.renderShape = function(t, e, i, r) {
            var s, a;
            for (a = t, s = e.length - 1; s >= 0; s -= 1)
              "tr" === e[s].ty ? (a = i[s].transform, this.renderShapeTransform(t, a)) : "sh" === e[s].ty || "el" === e[s].ty || "rc" === e[s].ty || "sr" === e[s].ty ? this.renderPath(e[s], i[s]) : "fl" === e[s].ty ? this.renderFill(e[s], i[s], a) : "st" === e[s].ty ? this.renderStroke(e[s], i[s], a) : "gf" === e[s].ty || "gs" === e[s].ty ? this.renderGradientFill(e[s], i[s], a) : "gr" === e[s].ty ? this.renderShape(a, e[s].it, i[s].it) : e[s].ty;
            r && this.drawLayer();
          }, CVShapeElement.prototype.renderStyledShape = function(t, e) {
            if (this._isFirstFrame || e._mdf || t.transforms._mdf) {
              var i, r, s, a = t.trNodes, n = e.paths, o = n._length;
              a.length = 0;
              var h = t.transforms.finalTransform;
              for (s = 0; s < o; s += 1) {
                var l = n.shapes[s];
                if (l && l.v) {
                  for (r = l._length, i = 1; i < r; i += 1)
                    1 === i && a.push({ t: "m", p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0) }), a.push({ t: "c", pts: h.applyToTriplePoints(l.o[i - 1], l.i[i], l.v[i]) });
                  1 === r && a.push({ t: "m", p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0) }), l.c && r && (a.push({ t: "c", pts: h.applyToTriplePoints(l.o[i - 1], l.i[0], l.v[0]) }), a.push({ t: "z" }));
                }
              }
              t.trNodes = a;
            }
          }, CVShapeElement.prototype.renderPath = function(t, e) {
            if (true !== t.hd && t._shouldRender) {
              var i, r = e.styledShapes.length;
              for (i = 0; i < r; i += 1)
                this.renderStyledShape(e.styledShapes[i], e.sh);
            }
          }, CVShapeElement.prototype.renderFill = function(t, e, i) {
            var r = e.style;
            (e.c._mdf || this._isFirstFrame) && (r.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || i._opMdf || this._isFirstFrame) && (r.coOp = e.o.v * i.opacity);
          }, CVShapeElement.prototype.renderGradientFill = function(t, e, i) {
            var r, s = e.style;
            if (!s.grd || e.g._mdf || e.s._mdf || e.e._mdf || 1 !== t.t && (e.h._mdf || e.a._mdf)) {
              var a, n = this.globalData.canvasContext, o = e.s.v, h = e.e.v;
              if (1 === t.t)
                r = n.createLinearGradient(o[0], o[1], h[0], h[1]);
              else {
                var l = Math.sqrt(Math.pow(o[0] - h[0], 2) + Math.pow(o[1] - h[1], 2)), p = Math.atan2(h[1] - o[1], h[0] - o[0]), c = e.h.v;
                c >= 1 ? c = 0.99 : c <= -1 && (c = -0.99);
                var m = l * c, f = Math.cos(p + e.a.v) * m + o[0], d = Math.sin(p + e.a.v) * m + o[1];
                r = n.createRadialGradient(f, d, 0, o[0], o[1], l);
              }
              var u = t.g.p, y = e.g.c, g = 1;
              for (a = 0; a < u; a += 1)
                e.g._hasOpacity && e.g._collapsable && (g = e.g.o[2 * a + 1]), r.addColorStop(y[4 * a] / 100, "rgba(" + y[4 * a + 1] + "," + y[4 * a + 2] + "," + y[4 * a + 3] + "," + g + ")");
              s.grd = r;
            }
            s.coOp = e.o.v * i.opacity;
          }, CVShapeElement.prototype.renderStroke = function(t, e, i) {
            var r = e.style, s = e.d;
            s && (s._mdf || this._isFirstFrame) && (r.da = s.dashArray, r.do = s.dashoffset[0]), (e.c._mdf || this._isFirstFrame) && (r.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"), (e.o._mdf || i._opMdf || this._isFirstFrame) && (r.coOp = e.o.v * i.opacity), (e.w._mdf || this._isFirstFrame) && (r.wi = e.w.v);
          }, CVShapeElement.prototype.destroy = function() {
            this.shapesData = null, this.globalData = null, this.canvasContext = null, this.stylesList.length = 0, this.itemsData.length = 0;
          }, extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement), CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement, CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame, CVSolidElement.prototype.renderInnerContent = function() {
            var t = this.canvasContext;
            t.fillStyle = this.data.sc, t.fillRect(0, 0, this.data.sw, this.data.sh);
          }, extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement), CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d"), CVTextElement.prototype.buildNewText = function() {
            var t = this.textProperty.currentData;
            this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
            var e = false;
            t.fc ? (e = true, this.values.fill = this.buildColor(t.fc)) : this.values.fill = "rgba(0,0,0,0)", this.fill = e;
            var i = false;
            t.sc && (i = true, this.values.stroke = this.buildColor(t.sc), this.values.sWidth = t.sw);
            var r, s, a, n, o, h, l, p, c, m, f, d, u = this.globalData.fontManager.getFontByName(t.f), y = t.l, g = this.mHelper;
            this.stroke = i, this.values.fValue = t.finalSize + "px " + this.globalData.fontManager.getFontByName(t.f).fFamily, s = t.finalText.length;
            var v = this.data.singleShape, b = 1e-3 * t.tr * t.finalSize, P = 0, E = 0, x = true, S = 0;
            for (r = 0; r < s; r += 1) {
              for (n = (a = this.globalData.fontManager.getCharData(t.finalText[r], u.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily)) && a.data || {}, g.reset(), v && y[r].n && (P = -b, E += t.yOffset, E += x ? 1 : 0, x = false), c = (l = n.shapes ? n.shapes[0].it : []).length, g.scale(t.finalSize / 100, t.finalSize / 100), v && this.applyTextPropertiesToMatrix(t, g, y[r].line, P, E), f = createSizedArray(c), p = 0; p < c; p += 1) {
                for (h = l[p].ks.k.i.length, m = l[p].ks.k, d = [], o = 1; o < h; o += 1)
                  1 === o && d.push(g.applyToX(m.v[0][0], m.v[0][1], 0), g.applyToY(m.v[0][0], m.v[0][1], 0)), d.push(g.applyToX(m.o[o - 1][0], m.o[o - 1][1], 0), g.applyToY(m.o[o - 1][0], m.o[o - 1][1], 0), g.applyToX(m.i[o][0], m.i[o][1], 0), g.applyToY(m.i[o][0], m.i[o][1], 0), g.applyToX(m.v[o][0], m.v[o][1], 0), g.applyToY(m.v[o][0], m.v[o][1], 0));
                d.push(g.applyToX(m.o[o - 1][0], m.o[o - 1][1], 0), g.applyToY(m.o[o - 1][0], m.o[o - 1][1], 0), g.applyToX(m.i[0][0], m.i[0][1], 0), g.applyToY(m.i[0][0], m.i[0][1], 0), g.applyToX(m.v[0][0], m.v[0][1], 0), g.applyToY(m.v[0][0], m.v[0][1], 0)), f[p] = d;
              }
              v && (P += y[r].l, P += b), this.textSpans[S] ? this.textSpans[S].elem = f : this.textSpans[S] = { elem: f }, S += 1;
            }
          }, CVTextElement.prototype.renderInnerContent = function() {
            var t, e, i, r, s, a, n = this.canvasContext;
            n.font = this.values.fValue, n.lineCap = "butt", n.lineJoin = "miter", n.miterLimit = 4, this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
            var o, h = this.textAnimator.renderedLetters, l = this.textProperty.currentData.l;
            e = l.length;
            var p, c, m = null, f = null, d = null;
            for (t = 0; t < e; t += 1)
              if (!l[t].n) {
                if ((o = h[t]) && (this.globalData.renderer.save(), this.globalData.renderer.ctxTransform(o.p), this.globalData.renderer.ctxOpacity(o.o)), this.fill) {
                  for (o && o.fc ? m !== o.fc && (m = o.fc, n.fillStyle = o.fc) : m !== this.values.fill && (m = this.values.fill, n.fillStyle = this.values.fill), r = (p = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), i = 0; i < r; i += 1)
                    for (a = (c = p[i]).length, this.globalData.canvasContext.moveTo(c[0], c[1]), s = 2; s < a; s += 6)
                      this.globalData.canvasContext.bezierCurveTo(c[s], c[s + 1], c[s + 2], c[s + 3], c[s + 4], c[s + 5]);
                  this.globalData.canvasContext.closePath(), this.globalData.canvasContext.fill();
                }
                if (this.stroke) {
                  for (o && o.sw ? d !== o.sw && (d = o.sw, n.lineWidth = o.sw) : d !== this.values.sWidth && (d = this.values.sWidth, n.lineWidth = this.values.sWidth), o && o.sc ? f !== o.sc && (f = o.sc, n.strokeStyle = o.sc) : f !== this.values.stroke && (f = this.values.stroke, n.strokeStyle = this.values.stroke), r = (p = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), i = 0; i < r; i += 1)
                    for (a = (c = p[i]).length, this.globalData.canvasContext.moveTo(c[0], c[1]), s = 2; s < a; s += 6)
                      this.globalData.canvasContext.bezierCurveTo(c[s], c[s + 1], c[s + 2], c[s + 3], c[s + 4], c[s + 5]);
                  this.globalData.canvasContext.closePath(), this.globalData.canvasContext.stroke();
                }
                o && this.globalData.renderer.restore();
              }
          }, CVEffects.prototype.renderFrame = function() {
          }, HBaseElement.prototype = { checkBlendMode: function() {
          }, initRendererElement: function() {
            this.baseElement = createTag(this.data.tg || "div"), this.data.hasMask ? (this.svgElement = createNS("svg"), this.layerElement = createNS("g"), this.maskedElement = this.layerElement, this.svgElement.appendChild(this.layerElement), this.baseElement.appendChild(this.svgElement)) : this.layerElement = this.baseElement, styleDiv(this.baseElement);
          }, createContainerElements: function() {
            this.renderableEffectsManager = new CVEffects(this), this.transformedElement = this.baseElement, this.maskedElement = this.layerElement, this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 !== this.data.bm && this.setBlendMode();
          }, renderElement: function() {
            var t = this.transformedElement ? this.transformedElement.style : {};
            if (this.finalTransform._matMdf) {
              var e = this.finalTransform.mat.toCSS();
              t.transform = e, t.webkitTransform = e;
            }
            this.finalTransform._opMdf && (t.opacity = this.finalTransform.mProp.o.v);
          }, renderFrame: function() {
            this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = false));
          }, destroy: function() {
            this.layerElement = null, this.transformedElement = null, this.matteElement && (this.matteElement = null), this.maskManager && (this.maskManager.destroy(), this.maskManager = null);
          }, createRenderableComponents: function() {
            this.maskManager = new MaskElement(this.data, this, this.globalData);
          }, addEffects: function() {
          }, setMatte: function() {
          } }, HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement, HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy, HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting, extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement), HSolidElement.prototype.createContent = function() {
            var t;
            this.data.hasMask ? ((t = createNS("rect")).setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.svgElement.setAttribute("width", this.data.sw), this.svgElement.setAttribute("height", this.data.sh)) : ((t = createTag("div")).style.width = this.data.sw + "px", t.style.height = this.data.sh + "px", t.style.backgroundColor = this.data.sc), this.layerElement.appendChild(t);
          }, extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement), HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements, HCompElement.prototype.createContainerElements = function() {
            this._createBaseContainerElements(), this.data.hasMask ? (this.svgElement.setAttribute("width", this.data.w), this.svgElement.setAttribute("height", this.data.h), this.transformedElement = this.baseElement) : this.transformedElement = this.layerElement;
          }, HCompElement.prototype.addTo3dContainer = function(t, e) {
            for (var i, r = 0; r < e; )
              this.elements[r] && this.elements[r].getBaseElement && (i = this.elements[r].getBaseElement()), r += 1;
            i ? this.layerElement.insertBefore(t, i) : this.layerElement.appendChild(t);
          }, extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement), HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent, HShapeElement.prototype.createContent = function() {
            var t;
            if (this.baseElement.style.fontSize = 0, this.data.hasMask)
              this.layerElement.appendChild(this.shapesContainer), t = this.svgElement;
            else {
              t = createNS("svg");
              var e = this.comp.data ? this.comp.data : this.globalData.compSize;
              t.setAttribute("width", e.w), t.setAttribute("height", e.h), t.appendChild(this.shapesContainer), this.layerElement.appendChild(t);
            }
            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true), this.filterUniqueShapes(), this.shapeCont = t;
          }, HShapeElement.prototype.getTransformedPoint = function(t, e) {
            var i, r = t.length;
            for (i = 0; i < r; i += 1)
              e = t[i].mProps.v.applyToPointArray(e[0], e[1], 0);
            return e;
          }, HShapeElement.prototype.calculateShapeBoundingBox = function(t, e) {
            var i, r, s, a, n, o = t.sh.v, h = t.transformers, l = o._length;
            if (!(l <= 1)) {
              for (i = 0; i < l - 1; i += 1)
                r = this.getTransformedPoint(h, o.v[i]), s = this.getTransformedPoint(h, o.o[i]), a = this.getTransformedPoint(h, o.i[i + 1]), n = this.getTransformedPoint(h, o.v[i + 1]), this.checkBounds(r, s, a, n, e);
              o.c && (r = this.getTransformedPoint(h, o.v[i]), s = this.getTransformedPoint(h, o.o[i]), a = this.getTransformedPoint(h, o.i[0]), n = this.getTransformedPoint(h, o.v[0]), this.checkBounds(r, s, a, n, e));
            }
          }, HShapeElement.prototype.checkBounds = function(t, e, i, r, s) {
            this.getBoundsOfCurve(t, e, i, r);
            var a = this.shapeBoundingBox;
            s.x = bmMin(a.left, s.x), s.xMax = bmMax(a.right, s.xMax), s.y = bmMin(a.top, s.y), s.yMax = bmMax(a.bottom, s.yMax);
          }, HShapeElement.prototype.shapeBoundingBox = { left: 0, right: 0, top: 0, bottom: 0 }, HShapeElement.prototype.tempBoundingBox = { x: 0, xMax: 0, y: 0, yMax: 0, width: 0, height: 0 }, HShapeElement.prototype.getBoundsOfCurve = function(t, e, i, r) {
            for (var s, a, n, o, h, l, p, c = [[t[0], r[0]], [t[1], r[1]]], m = 0; m < 2; ++m)
              a = 6 * t[m] - 12 * e[m] + 6 * i[m], s = -3 * t[m] + 9 * e[m] - 9 * i[m] + 3 * r[m], n = 3 * e[m] - 3 * t[m], a |= 0, n |= 0, 0 == (s |= 0) && 0 === a || (0 === s ? (o = -n / a) > 0 && o < 1 && c[m].push(this.calculateF(o, t, e, i, r, m)) : (h = a * a - 4 * n * s) >= 0 && ((l = (-a + bmSqrt(h)) / (2 * s)) > 0 && l < 1 && c[m].push(this.calculateF(l, t, e, i, r, m)), (p = (-a - bmSqrt(h)) / (2 * s)) > 0 && p < 1 && c[m].push(this.calculateF(p, t, e, i, r, m))));
            this.shapeBoundingBox.left = bmMin.apply(null, c[0]), this.shapeBoundingBox.top = bmMin.apply(null, c[1]), this.shapeBoundingBox.right = bmMax.apply(null, c[0]), this.shapeBoundingBox.bottom = bmMax.apply(null, c[1]);
          }, HShapeElement.prototype.calculateF = function(t, e, i, r, s, a) {
            return bmPow(1 - t, 3) * e[a] + 3 * bmPow(1 - t, 2) * t * i[a] + 3 * (1 - t) * bmPow(t, 2) * r[a] + bmPow(t, 3) * s[a];
          }, HShapeElement.prototype.calculateBoundingBox = function(t, e) {
            var i, r = t.length;
            for (i = 0; i < r; i += 1)
              t[i] && t[i].sh ? this.calculateShapeBoundingBox(t[i], e) : t[i] && t[i].it && this.calculateBoundingBox(t[i].it, e);
          }, HShapeElement.prototype.currentBoxContains = function(t) {
            return this.currentBBox.x <= t.x && this.currentBBox.y <= t.y && this.currentBBox.width + this.currentBBox.x >= t.x + t.width && this.currentBBox.height + this.currentBBox.y >= t.y + t.height;
          }, HShapeElement.prototype.renderInnerContent = function() {
            if (this._renderShapeFrame(), !this.hidden && (this._isFirstFrame || this._mdf)) {
              var t = this.tempBoundingBox, e = 999999;
              if (t.x = e, t.xMax = -e, t.y = e, t.yMax = -e, this.calculateBoundingBox(this.itemsData, t), t.width = t.xMax < t.x ? 0 : t.xMax - t.x, t.height = t.yMax < t.y ? 0 : t.yMax - t.y, this.currentBoxContains(t))
                return;
              var i = false;
              if (this.currentBBox.w !== t.width && (this.currentBBox.w = t.width, this.shapeCont.setAttribute("width", t.width), i = true), this.currentBBox.h !== t.height && (this.currentBBox.h = t.height, this.shapeCont.setAttribute("height", t.height), i = true), i || this.currentBBox.x !== t.x || this.currentBBox.y !== t.y) {
                this.currentBBox.w = t.width, this.currentBBox.h = t.height, this.currentBBox.x = t.x, this.currentBBox.y = t.y, this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
                var r = this.shapeCont.style, s = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                r.transform = s, r.webkitTransform = s;
              }
            }
          }, extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement), HTextElement.prototype.createContent = function() {
            if (this.isMasked = this.checkMasks(), this.isMasked) {
              this.renderType = "svg", this.compW = this.comp.data.w, this.compH = this.comp.data.h, this.svgElement.setAttribute("width", this.compW), this.svgElement.setAttribute("height", this.compH);
              var t = createNS("g");
              this.maskedElement.appendChild(t), this.innerElem = t;
            } else
              this.renderType = "html", this.innerElem = this.layerElement;
            this.checkParenting();
          }, HTextElement.prototype.buildNewText = function() {
            var t = this.textProperty.currentData;
            this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
            var e = this.innerElem.style, i = t.fc ? this.buildColor(t.fc) : "rgba(0,0,0,0)";
            e.fill = i, e.color = i, t.sc && (e.stroke = this.buildColor(t.sc), e.strokeWidth = t.sw + "px");
            var r, s, a = this.globalData.fontManager.getFontByName(t.f);
            if (!this.globalData.fontManager.chars)
              if (e.fontSize = t.finalSize + "px", e.lineHeight = t.finalSize + "px", a.fClass)
                this.innerElem.className = a.fClass;
              else {
                e.fontFamily = a.fFamily;
                var n = t.fWeight, o = t.fStyle;
                e.fontStyle = o, e.fontWeight = n;
              }
            var h, l, p, c = t.l;
            s = c.length;
            var m, f = this.mHelper, d = "", u = 0;
            for (r = 0; r < s; r += 1) {
              if (this.globalData.fontManager.chars ? (this.textPaths[u] ? h = this.textPaths[u] : ((h = createNS("path")).setAttribute("stroke-linecap", "butt"), h.setAttribute("stroke-linejoin", "round"), h.setAttribute("stroke-miterlimit", "4")), this.isMasked || (this.textSpans[u] ? p = (l = this.textSpans[u]).children[0] : ((l = createTag("div")).style.lineHeight = 0, (p = createNS("svg")).appendChild(h), styleDiv(l)))) : this.isMasked ? h = this.textPaths[u] ? this.textPaths[u] : createNS("text") : this.textSpans[u] ? (l = this.textSpans[u], h = this.textPaths[u]) : (styleDiv(l = createTag("span")), styleDiv(h = createTag("span")), l.appendChild(h)), this.globalData.fontManager.chars) {
                var y, g = this.globalData.fontManager.getCharData(t.finalText[r], a.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
                if (y = g ? g.data : null, f.reset(), y && y.shapes && (m = y.shapes[0].it, f.scale(t.finalSize / 100, t.finalSize / 100), d = this.createPathShape(f, m), h.setAttribute("d", d)), this.isMasked)
                  this.innerElem.appendChild(h);
                else {
                  if (this.innerElem.appendChild(l), y && y.shapes) {
                    document.body.appendChild(p);
                    var v = p.getBBox();
                    p.setAttribute("width", v.width + 2), p.setAttribute("height", v.height + 2), p.setAttribute("viewBox", v.x - 1 + " " + (v.y - 1) + " " + (v.width + 2) + " " + (v.height + 2));
                    var b = p.style, P = "translate(" + (v.x - 1) + "px," + (v.y - 1) + "px)";
                    b.transform = P, b.webkitTransform = P, c[r].yOffset = v.y - 1;
                  } else
                    p.setAttribute("width", 1), p.setAttribute("height", 1);
                  l.appendChild(p);
                }
              } else if (h.textContent = c[r].val, h.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"), this.isMasked)
                this.innerElem.appendChild(h);
              else {
                this.innerElem.appendChild(l);
                var E = h.style, x = "translate3d(0," + -t.finalSize / 1.2 + "px,0)";
                E.transform = x, E.webkitTransform = x;
              }
              this.isMasked ? this.textSpans[u] = h : this.textSpans[u] = l, this.textSpans[u].style.display = "block", this.textPaths[u] = h, u += 1;
            }
            for (; u < this.textSpans.length; )
              this.textSpans[u].style.display = "none", u += 1;
          }, HTextElement.prototype.renderInnerContent = function() {
            var t;
            if (this.data.singleShape) {
              if (!this._isFirstFrame && !this.lettersChangedFlag)
                return;
              if (this.isMasked && this.finalTransform._matMdf) {
                this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH), t = this.svgElement.style;
                var e = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
                t.transform = e, t.webkitTransform = e;
              }
            }
            if (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
              var i, r, s, a, n, o = 0, h = this.textAnimator.renderedLetters, l = this.textProperty.currentData.l;
              for (r = l.length, i = 0; i < r; i += 1)
                l[i].n ? o += 1 : (a = this.textSpans[i], n = this.textPaths[i], s = h[o], o += 1, s._mdf.m && (this.isMasked ? a.setAttribute("transform", s.m) : (a.style.webkitTransform = s.m, a.style.transform = s.m)), a.style.opacity = s.o, s.sw && s._mdf.sw && n.setAttribute("stroke-width", s.sw), s.sc && s._mdf.sc && n.setAttribute("stroke", s.sc), s.fc && s._mdf.fc && (n.setAttribute("fill", s.fc), n.style.color = s.fc));
              if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
                var p = this.innerElem.getBBox();
                if (this.currentBBox.w !== p.width && (this.currentBBox.w = p.width, this.svgElement.setAttribute("width", p.width)), this.currentBBox.h !== p.height && (this.currentBBox.h = p.height, this.svgElement.setAttribute("height", p.height)), this.currentBBox.w !== p.width + 2 || this.currentBBox.h !== p.height + 2 || this.currentBBox.x !== p.x - 1 || this.currentBBox.y !== p.y - 1) {
                  this.currentBBox.w = p.width + 2, this.currentBBox.h = p.height + 2, this.currentBBox.x = p.x - 1, this.currentBBox.y = p.y - 1, this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h), t = this.svgElement.style;
                  var c = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                  t.transform = c, t.webkitTransform = c;
                }
              }
            }
          }, extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement), HImageElement.prototype.createContent = function() {
            var t = this.globalData.getAssetsPath(this.assetData), e = new Image();
            this.data.hasMask ? (this.imageElem = createNS("image"), this.imageElem.setAttribute("width", this.assetData.w + "px"), this.imageElem.setAttribute("height", this.assetData.h + "px"), this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), this.layerElement.appendChild(this.imageElem), this.baseElement.setAttribute("width", this.assetData.w), this.baseElement.setAttribute("height", this.assetData.h)) : this.layerElement.appendChild(e), e.crossOrigin = "anonymous", e.src = t, this.data.ln && this.baseElement.setAttribute("id", this.data.ln);
          }, extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement), HCameraElement.prototype.setup = function() {
            var t, e, i, r, s = this.comp.threeDElements.length;
            for (t = 0; t < s; t += 1)
              if ("3d" === (e = this.comp.threeDElements[t]).type) {
                i = e.perspectiveElem.style, r = e.container.style;
                var a = this.pe.v + "px", n = "0px 0px 0px", o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                i.perspective = a, i.webkitPerspective = a, r.transformOrigin = n, r.mozTransformOrigin = n, r.webkitTransformOrigin = n, i.transform = o, i.webkitTransform = o;
              }
          }, HCameraElement.prototype.createElements = function() {
          }, HCameraElement.prototype.hide = function() {
          }, HCameraElement.prototype.renderFrame = function() {
            var t, e, i = this._isFirstFrame;
            if (this.hierarchy)
              for (e = this.hierarchy.length, t = 0; t < e; t += 1)
                i = this.hierarchy[t].finalTransform.mProp._mdf || i;
            if (i || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
              if (this.mat.reset(), this.hierarchy)
                for (t = e = this.hierarchy.length - 1; t >= 0; t -= 1) {
                  var r = this.hierarchy[t].finalTransform.mProp;
                  this.mat.translate(-r.p.v[0], -r.p.v[1], r.p.v[2]), this.mat.rotateX(-r.or.v[0]).rotateY(-r.or.v[1]).rotateZ(r.or.v[2]), this.mat.rotateX(-r.rx.v).rotateY(-r.ry.v).rotateZ(r.rz.v), this.mat.scale(1 / r.s.v[0], 1 / r.s.v[1], 1 / r.s.v[2]), this.mat.translate(r.a.v[0], r.a.v[1], r.a.v[2]);
                }
              if (this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v), this.a) {
                var s;
                s = this.p ? [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]] : [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
                var a = Math.sqrt(Math.pow(s[0], 2) + Math.pow(s[1], 2) + Math.pow(s[2], 2)), n = [s[0] / a, s[1] / a, s[2] / a], o = Math.sqrt(n[2] * n[2] + n[0] * n[0]), h = Math.atan2(n[1], o), l = Math.atan2(n[0], -n[2]);
                this.mat.rotateY(l).rotateX(-h);
              }
              this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v), this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]), this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0), this.mat.translate(0, 0, this.pe.v);
              var p = !this._prevMat.equals(this.mat);
              if ((p || this.pe._mdf) && this.comp.threeDElements) {
                var c, m, f;
                for (e = this.comp.threeDElements.length, t = 0; t < e; t += 1)
                  if ("3d" === (c = this.comp.threeDElements[t]).type) {
                    if (p) {
                      var d = this.mat.toCSS();
                      (f = c.container.style).transform = d, f.webkitTransform = d;
                    }
                    this.pe._mdf && ((m = c.perspectiveElem.style).perspective = this.pe.v + "px", m.webkitPerspective = this.pe.v + "px");
                  }
                this.mat.clone(this._prevMat);
              }
            }
            this._isFirstFrame = false;
          }, HCameraElement.prototype.prepareFrame = function(t) {
            this.prepareProperties(t, true);
          }, HCameraElement.prototype.destroy = function() {
          }, HCameraElement.prototype.getBaseElement = function() {
            return null;
          }, HEffects.prototype.renderFrame = function() {
          };
          var animationManager = function() {
            var t = {}, e = [], i = 0, r = 0, s = 0, a = true, n = false;
            function o(t2) {
              for (var i2 = 0, s2 = t2.target; i2 < r; )
                e[i2].animation === s2 && (e.splice(i2, 1), i2 -= 1, r -= 1, s2.isPaused || p()), i2 += 1;
            }
            function h(t2, i2) {
              if (!t2)
                return null;
              for (var s2 = 0; s2 < r; ) {
                if (e[s2].elem === t2 && null !== e[s2].elem)
                  return e[s2].animation;
                s2 += 1;
              }
              var a2 = new AnimationItem();
              return c(a2, t2), a2.setData(t2, i2), a2;
            }
            function l() {
              s += 1, d();
            }
            function p() {
              s -= 1;
            }
            function c(t2, i2) {
              t2.addEventListener("destroy", o), t2.addEventListener("_active", l), t2.addEventListener("_idle", p), e.push({ elem: i2, animation: t2 }), r += 1;
            }
            function m(t2) {
              var o2, h2 = t2 - i;
              for (o2 = 0; o2 < r; o2 += 1)
                e[o2].animation.advanceTime(h2);
              i = t2, s && !n ? window.requestAnimationFrame(m) : a = true;
            }
            function f(t2) {
              i = t2, window.requestAnimationFrame(m);
            }
            function d() {
              !n && s && a && (window.requestAnimationFrame(f), a = false);
            }
            return t.registerAnimation = h, t.loadAnimation = function(t2) {
              var e2 = new AnimationItem();
              return c(e2, null), e2.setParams(t2), e2;
            }, t.setSpeed = function(t2, i2) {
              var s2;
              for (s2 = 0; s2 < r; s2 += 1)
                e[s2].animation.setSpeed(t2, i2);
            }, t.setDirection = function(t2, i2) {
              var s2;
              for (s2 = 0; s2 < r; s2 += 1)
                e[s2].animation.setDirection(t2, i2);
            }, t.play = function(t2) {
              var i2;
              for (i2 = 0; i2 < r; i2 += 1)
                e[i2].animation.play(t2);
            }, t.pause = function(t2) {
              var i2;
              for (i2 = 0; i2 < r; i2 += 1)
                e[i2].animation.pause(t2);
            }, t.stop = function(t2) {
              var i2;
              for (i2 = 0; i2 < r; i2 += 1)
                e[i2].animation.stop(t2);
            }, t.togglePause = function(t2) {
              var i2;
              for (i2 = 0; i2 < r; i2 += 1)
                e[i2].animation.togglePause(t2);
            }, t.searchAnimations = function(t2, e2, i2) {
              var r2, s2 = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))), a2 = s2.length;
              for (r2 = 0; r2 < a2; r2 += 1)
                i2 && s2[r2].setAttribute("data-bm-type", i2), h(s2[r2], t2);
              if (e2 && 0 === a2) {
                i2 || (i2 = "svg");
                var n2 = document.getElementsByTagName("body")[0];
                n2.innerText = "";
                var o2 = createTag("div");
                o2.style.width = "100%", o2.style.height = "100%", o2.setAttribute("data-bm-type", i2), n2.appendChild(o2), h(o2, t2);
              }
            }, t.resize = function() {
              var t2;
              for (t2 = 0; t2 < r; t2 += 1)
                e[t2].animation.resize();
            }, t.goToAndStop = function(t2, i2, s2) {
              var a2;
              for (a2 = 0; a2 < r; a2 += 1)
                e[a2].animation.goToAndStop(t2, i2, s2);
            }, t.destroy = function(t2) {
              var i2;
              for (i2 = r - 1; i2 >= 0; i2 -= 1)
                e[i2].animation.destroy(t2);
            }, t.freeze = function() {
              n = true;
            }, t.unfreeze = function() {
              n = false, d();
            }, t.setVolume = function(t2, i2) {
              var s2;
              for (s2 = 0; s2 < r; s2 += 1)
                e[s2].animation.setVolume(t2, i2);
            }, t.mute = function(t2) {
              var i2;
              for (i2 = 0; i2 < r; i2 += 1)
                e[i2].animation.mute(t2);
            }, t.unmute = function(t2) {
              var i2;
              for (i2 = 0; i2 < r; i2 += 1)
                e[i2].animation.unmute(t2);
            }, t.getRegisteredAnimations = function() {
              var t2, i2 = e.length, r2 = [];
              for (t2 = 0; t2 < i2; t2 += 1)
                r2.push(e[t2].animation);
              return r2;
            }, t;
          }(), AnimationItem = function() {
            this._cbs = [], this.name = "", this.path = "", this.isLoaded = false, this.currentFrame = 0, this.currentRawFrame = 0, this.firstFrame = 0, this.totalFrames = 0, this.frameRate = 0, this.frameMult = 0, this.playSpeed = 1, this.playDirection = 1, this.playCount = 0, this.animationData = {}, this.assets = [], this.isPaused = true, this.autoplay = false, this.loop = true, this.renderer = null, this.animationID = createElementID(), this.assetsPath = "", this.timeCompleted = 0, this.segmentPos = 0, this.isSubframeEnabled = subframeEnabled, this.segments = [], this._idle = true, this._completedLoop = false, this.projectInterface = ProjectInterface(), this.imagePreloader = new ImagePreloader(), this.audioController = audioControllerFactory(), this.markers = [];
          };
          extendPrototype([BaseEvent], AnimationItem), AnimationItem.prototype.setParams = function(t) {
            (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);
            var e = "svg";
            switch (t.animType ? e = t.animType : t.renderer && (e = t.renderer), e) {
              case "canvas":
                this.renderer = new CanvasRenderer(this, t.rendererSettings);
                break;
              case "svg":
                this.renderer = new SVGRenderer(this, t.rendererSettings);
                break;
              default:
                this.renderer = new HybridRenderer(this, t.rendererSettings);
            }
            this.imagePreloader.setCacheType(e, this.renderer.globalData.defs), this.renderer.setProjectInterface(this.projectInterface), this.animType = e, "" === t.loop || null === t.loop || void 0 === t.loop || true === t.loop ? this.loop = true : false === t.loop ? this.loop = false : this.loop = parseInt(t.loop, 10), this.autoplay = !("autoplay" in t) || t.autoplay, this.name = t.name ? t.name : "", this.autoloadSegments = !Object.prototype.hasOwnProperty.call(t, "autoloadSegments") || t.autoloadSegments, this.assetsPath = t.assetsPath, this.initialSegment = t.initialSegment, t.audioFactory && this.audioController.setAudioFactory(t.audioFactory), t.animationData ? this.configAnimation(t.animationData) : t.path && (-1 !== t.path.lastIndexOf("\\") ? this.path = t.path.substr(0, t.path.lastIndexOf("\\") + 1) : this.path = t.path.substr(0, t.path.lastIndexOf("/") + 1), this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1), this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json")), assetLoader.load(t.path, this.configAnimation.bind(this), function() {
              this.trigger("data_failed");
            }.bind(this)));
          }, AnimationItem.prototype.setData = function(t, e) {
            e && "object" != typeof e && (e = JSON.parse(e));
            var i = { wrapper: t, animationData: e }, r = t.attributes;
            i.path = r.getNamedItem("data-animation-path") ? r.getNamedItem("data-animation-path").value : r.getNamedItem("data-bm-path") ? r.getNamedItem("data-bm-path").value : r.getNamedItem("bm-path") ? r.getNamedItem("bm-path").value : "", i.animType = r.getNamedItem("data-anim-type") ? r.getNamedItem("data-anim-type").value : r.getNamedItem("data-bm-type") ? r.getNamedItem("data-bm-type").value : r.getNamedItem("bm-type") ? r.getNamedItem("bm-type").value : r.getNamedItem("data-bm-renderer") ? r.getNamedItem("data-bm-renderer").value : r.getNamedItem("bm-renderer") ? r.getNamedItem("bm-renderer").value : "canvas";
            var s = r.getNamedItem("data-anim-loop") ? r.getNamedItem("data-anim-loop").value : r.getNamedItem("data-bm-loop") ? r.getNamedItem("data-bm-loop").value : r.getNamedItem("bm-loop") ? r.getNamedItem("bm-loop").value : "";
            "false" === s ? i.loop = false : "true" === s ? i.loop = true : "" !== s && (i.loop = parseInt(s, 10));
            var a = r.getNamedItem("data-anim-autoplay") ? r.getNamedItem("data-anim-autoplay").value : r.getNamedItem("data-bm-autoplay") ? r.getNamedItem("data-bm-autoplay").value : !r.getNamedItem("bm-autoplay") || r.getNamedItem("bm-autoplay").value;
            i.autoplay = "false" !== a, i.name = r.getNamedItem("data-name") ? r.getNamedItem("data-name").value : r.getNamedItem("data-bm-name") ? r.getNamedItem("data-bm-name").value : r.getNamedItem("bm-name") ? r.getNamedItem("bm-name").value : "", "false" === (r.getNamedItem("data-anim-prerender") ? r.getNamedItem("data-anim-prerender").value : r.getNamedItem("data-bm-prerender") ? r.getNamedItem("data-bm-prerender").value : r.getNamedItem("bm-prerender") ? r.getNamedItem("bm-prerender").value : "") && (i.prerender = false), this.setParams(i);
          }, AnimationItem.prototype.includeLayers = function(t) {
            t.op > this.animationData.op && (this.animationData.op = t.op, this.totalFrames = Math.floor(t.op - this.animationData.ip));
            var e, i, r = this.animationData.layers, s = r.length, a = t.layers, n = a.length;
            for (i = 0; i < n; i += 1)
              for (e = 0; e < s; ) {
                if (r[e].id === a[i].id) {
                  r[e] = a[i];
                  break;
                }
                e += 1;
              }
            if ((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars), this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)), t.assets)
              for (s = t.assets.length, e = 0; e < s; e += 1)
                this.animationData.assets.push(t.assets[e]);
            this.animationData.__complete = false, dataManager.completeData(this.animationData, this.renderer.globalData.fontManager), this.renderer.includeLayers(t.layers), expressionsPlugin && expressionsPlugin.initExpressions(this), this.loadNextSegment();
          }, AnimationItem.prototype.loadNextSegment = function() {
            var t = this.animationData.segments;
            if (!t || 0 === t.length || !this.autoloadSegments)
              return this.trigger("data_ready"), void (this.timeCompleted = this.totalFrames);
            var e = t.shift();
            this.timeCompleted = e.time * this.frameRate;
            var i = this.path + this.fileName + "_" + this.segmentPos + ".json";
            this.segmentPos += 1, assetLoader.load(i, this.includeLayers.bind(this), function() {
              this.trigger("data_failed");
            }.bind(this));
          }, AnimationItem.prototype.loadSegments = function() {
            this.animationData.segments || (this.timeCompleted = this.totalFrames), this.loadNextSegment();
          }, AnimationItem.prototype.imagesLoaded = function() {
            this.trigger("loaded_images"), this.checkLoaded();
          }, AnimationItem.prototype.preloadImages = function() {
            this.imagePreloader.setAssetsPath(this.assetsPath), this.imagePreloader.setPath(this.path), this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
          }, AnimationItem.prototype.configAnimation = function(t) {
            if (this.renderer)
              try {
                this.animationData = t, this.initialSegment ? (this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]), this.firstFrame = Math.round(this.initialSegment[0])) : (this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip), this.firstFrame = Math.round(this.animationData.ip)), this.renderer.configAnimation(t), t.assets || (t.assets = []), this.assets = this.animationData.assets, this.frameRate = this.animationData.fr, this.frameMult = this.animationData.fr / 1e3, this.renderer.searchExtraCompositions(t.assets), this.markers = markerParser(t.markers || []), this.trigger("config_ready"), this.preloadImages(), this.loadSegments(), this.updaFrameModifier(), this.waitForFontsLoaded(), this.isPaused && this.audioController.pause();
              } catch (t2) {
                this.triggerConfigError(t2);
              }
          }, AnimationItem.prototype.waitForFontsLoaded = function() {
            this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20));
          }, AnimationItem.prototype.checkLoaded = function() {
            !this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || "canvas" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages() && (this.isLoaded = true, dataManager.completeData(this.animationData, this.renderer.globalData.fontManager), expressionsPlugin && expressionsPlugin.initExpressions(this), this.renderer.initItems(), setTimeout(function() {
              this.trigger("DOMLoaded");
            }.bind(this), 0), this.gotoFrame(), this.autoplay && this.play());
          }, AnimationItem.prototype.resize = function() {
            this.renderer.updateContainerSize();
          }, AnimationItem.prototype.setSubframe = function(t) {
            this.isSubframeEnabled = !!t;
          }, AnimationItem.prototype.gotoFrame = function() {
            this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame, this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted), this.trigger("enterFrame"), this.renderFrame();
          }, AnimationItem.prototype.renderFrame = function() {
            if (false !== this.isLoaded && this.renderer)
              try {
                this.renderer.renderFrame(this.currentFrame + this.firstFrame);
              } catch (t) {
                this.triggerRenderFrameError(t);
              }
          }, AnimationItem.prototype.play = function(t) {
            t && this.name !== t || true === this.isPaused && (this.isPaused = false, this.audioController.resume(), this._idle && (this._idle = false, this.trigger("_active")));
          }, AnimationItem.prototype.pause = function(t) {
            t && this.name !== t || false === this.isPaused && (this.isPaused = true, this._idle = true, this.trigger("_idle"), this.audioController.pause());
          }, AnimationItem.prototype.togglePause = function(t) {
            t && this.name !== t || (true === this.isPaused ? this.play() : this.pause());
          }, AnimationItem.prototype.stop = function(t) {
            t && this.name !== t || (this.pause(), this.playCount = 0, this._completedLoop = false, this.setCurrentRawFrameValue(0));
          }, AnimationItem.prototype.getMarkerData = function(t) {
            for (var e, i = 0; i < this.markers.length; i += 1)
              if ((e = this.markers[i]).payload && e.payload.name === t)
                return e;
            return null;
          }, AnimationItem.prototype.goToAndStop = function(t, e, i) {
            if (!i || this.name === i) {
              var r = Number(t);
              if (isNaN(r)) {
                var s = this.getMarkerData(t);
                s && this.goToAndStop(s.time, true);
              } else
                e ? this.setCurrentRawFrameValue(t) : this.setCurrentRawFrameValue(t * this.frameModifier);
              this.pause();
            }
          }, AnimationItem.prototype.goToAndPlay = function(t, e, i) {
            if (!i || this.name === i) {
              var r = Number(t);
              if (isNaN(r)) {
                var s = this.getMarkerData(t);
                s && (s.duration ? this.playSegments([s.time, s.time + s.duration], true) : this.goToAndStop(s.time, true));
              } else
                this.goToAndStop(r, e, i);
              this.play();
            }
          }, AnimationItem.prototype.advanceTime = function(t) {
            if (true !== this.isPaused && false !== this.isLoaded) {
              var e = this.currentRawFrame + t * this.frameModifier, i = false;
              e >= this.totalFrames - 1 && this.frameModifier > 0 ? this.loop && this.playCount !== this.loop ? e >= this.totalFrames ? (this.playCount += 1, this.checkSegments(e % this.totalFrames) || (this.setCurrentRawFrameValue(e % this.totalFrames), this._completedLoop = true, this.trigger("loopComplete"))) : this.setCurrentRawFrameValue(e) : this.checkSegments(e > this.totalFrames ? e % this.totalFrames : 0) || (i = true, e = this.totalFrames - 1) : e < 0 ? this.checkSegments(e % this.totalFrames) || (!this.loop || this.playCount-- <= 0 && true !== this.loop ? (i = true, e = 0) : (this.setCurrentRawFrameValue(this.totalFrames + e % this.totalFrames), this._completedLoop ? this.trigger("loopComplete") : this._completedLoop = true)) : this.setCurrentRawFrameValue(e), i && (this.setCurrentRawFrameValue(e), this.pause(), this.trigger("complete"));
            }
          }, AnimationItem.prototype.adjustSegment = function(t, e) {
            this.playCount = 0, t[1] < t[0] ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)), this.totalFrames = t[0] - t[1], this.timeCompleted = this.totalFrames, this.firstFrame = t[1], this.setCurrentRawFrameValue(this.totalFrames - 1e-3 - e)) : t[1] > t[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)), this.totalFrames = t[1] - t[0], this.timeCompleted = this.totalFrames, this.firstFrame = t[0], this.setCurrentRawFrameValue(1e-3 + e)), this.trigger("segmentStart");
          }, AnimationItem.prototype.setSegment = function(t, e) {
            var i = -1;
            this.isPaused && (this.currentRawFrame + this.firstFrame < t ? i = t : this.currentRawFrame + this.firstFrame > e && (i = e - t)), this.firstFrame = t, this.totalFrames = e - t, this.timeCompleted = this.totalFrames, -1 !== i && this.goToAndStop(i, true);
          }, AnimationItem.prototype.playSegments = function(t, e) {
            if (e && (this.segments.length = 0), "object" == typeof t[0]) {
              var i, r = t.length;
              for (i = 0; i < r; i += 1)
                this.segments.push(t[i]);
            } else
              this.segments.push(t);
            this.segments.length && e && this.adjustSegment(this.segments.shift(), 0), this.isPaused && this.play();
          }, AnimationItem.prototype.resetSegments = function(t) {
            this.segments.length = 0, this.segments.push([this.animationData.ip, this.animationData.op]), t && this.checkSegments(0);
          }, AnimationItem.prototype.checkSegments = function(t) {
            return !!this.segments.length && (this.adjustSegment(this.segments.shift(), t), true);
          }, AnimationItem.prototype.destroy = function(t) {
            t && this.name !== t || !this.renderer || (this.renderer.destroy(), this.imagePreloader.destroy(), this.trigger("destroy"), this._cbs = null, this.onEnterFrame = null, this.onLoopComplete = null, this.onComplete = null, this.onSegmentStart = null, this.onDestroy = null, this.renderer = null, this.renderer = null, this.imagePreloader = null, this.projectInterface = null);
          }, AnimationItem.prototype.setCurrentRawFrameValue = function(t) {
            this.currentRawFrame = t, this.gotoFrame();
          }, AnimationItem.prototype.setSpeed = function(t) {
            this.playSpeed = t, this.updaFrameModifier();
          }, AnimationItem.prototype.setDirection = function(t) {
            this.playDirection = t < 0 ? -1 : 1, this.updaFrameModifier();
          }, AnimationItem.prototype.setVolume = function(t, e) {
            e && this.name !== e || this.audioController.setVolume(t);
          }, AnimationItem.prototype.getVolume = function() {
            return this.audioController.getVolume();
          }, AnimationItem.prototype.mute = function(t) {
            t && this.name !== t || this.audioController.mute();
          }, AnimationItem.prototype.unmute = function(t) {
            t && this.name !== t || this.audioController.unmute();
          }, AnimationItem.prototype.updaFrameModifier = function() {
            this.frameModifier = this.frameMult * this.playSpeed * this.playDirection, this.audioController.setRate(this.playSpeed * this.playDirection);
          }, AnimationItem.prototype.getPath = function() {
            return this.path;
          }, AnimationItem.prototype.getAssetsPath = function(t) {
            var e = "";
            if (t.e)
              e = t.p;
            else if (this.assetsPath) {
              var i = t.p;
              -1 !== i.indexOf("images/") && (i = i.split("/")[1]), e = this.assetsPath + i;
            } else
              e = this.path, e += t.u ? t.u : "", e += t.p;
            return e;
          }, AnimationItem.prototype.getAssetData = function(t) {
            for (var e = 0, i = this.assets.length; e < i; ) {
              if (t === this.assets[e].id)
                return this.assets[e];
              e += 1;
            }
            return null;
          }, AnimationItem.prototype.hide = function() {
            this.renderer.hide();
          }, AnimationItem.prototype.show = function() {
            this.renderer.show();
          }, AnimationItem.prototype.getDuration = function(t) {
            return t ? this.totalFrames : this.totalFrames / this.frameRate;
          }, AnimationItem.prototype.trigger = function(t) {
            if (this._cbs && this._cbs[t])
              switch (t) {
                case "enterFrame":
                  this.triggerEvent(t, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameModifier));
                  break;
                case "loopComplete":
                  this.triggerEvent(t, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult));
                  break;
                case "complete":
                  this.triggerEvent(t, new BMCompleteEvent(t, this.frameMult));
                  break;
                case "segmentStart":
                  this.triggerEvent(t, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames));
                  break;
                case "destroy":
                  this.triggerEvent(t, new BMDestroyEvent(t, this));
                  break;
                default:
                  this.triggerEvent(t);
              }
            "enterFrame" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameMult)), "loopComplete" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult)), "complete" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t, this.frameMult)), "segmentStart" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames)), "destroy" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t, this));
          }, AnimationItem.prototype.triggerRenderFrameError = function(t) {
            var e = new BMRenderFrameErrorEvent(t, this.currentFrame);
            this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
          }, AnimationItem.prototype.triggerConfigError = function(t) {
            var e = new BMConfigErrorEvent(t, this.currentFrame);
            this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
          };
          var Expressions = { initExpressions: function(t) {
            var e = 0, i = [];
            t.renderer.compInterface = CompExpressionInterface(t.renderer), t.renderer.globalData.projectInterface.registerComposition(t.renderer), t.renderer.globalData.pushExpression = function() {
              e += 1;
            }, t.renderer.globalData.popExpression = function() {
              0 == (e -= 1) && function() {
                var t2, e2 = i.length;
                for (t2 = 0; t2 < e2; t2 += 1)
                  i[t2].release();
                i.length = 0;
              }();
            }, t.renderer.globalData.registerExpressionProperty = function(t2) {
              -1 === i.indexOf(t2) && i.push(t2);
            };
          } };
          expressionsPlugin = Expressions;
          var ExpressionManager = function() {
            var ob = {}, Math = BMMath, window = null, document = null;
            function $bm_isInstanceOfArray(t) {
              return t.constructor === Array || t.constructor === Float32Array;
            }
            function isNumerable(t, e) {
              return "number" === t || "boolean" === t || "string" === t || e instanceof Number;
            }
            function $bm_neg(t) {
              var e = typeof t;
              if ("number" === e || "boolean" === e || t instanceof Number)
                return -t;
              if ($bm_isInstanceOfArray(t)) {
                var i, r = t.length, s = [];
                for (i = 0; i < r; i += 1)
                  s[i] = -t[i];
                return s;
              }
              return t.propType ? t.v : -t;
            }
            var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, "easeIn").get, easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, "easeOut").get, easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, "easeInOut").get;
            function sum(t, e) {
              var i = typeof t, r = typeof e;
              if ("string" === i || "string" === r)
                return t + e;
              if (isNumerable(i, t) && isNumerable(r, e))
                return t + e;
              if ($bm_isInstanceOfArray(t) && isNumerable(r, e))
                return (t = t.slice(0))[0] += e, t;
              if (isNumerable(i, t) && $bm_isInstanceOfArray(e))
                return (e = e.slice(0))[0] = t + e[0], e;
              if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; )
                  ("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? o[s] = t[s] + e[s] : o[s] = void 0 === e[s] ? t[s] : t[s] || e[s], s += 1;
                return o;
              }
              return 0;
            }
            var add = sum;
            function sub(t, e) {
              var i = typeof t, r = typeof e;
              if (isNumerable(i, t) && isNumerable(r, e))
                return "string" === i && (t = parseInt(t, 10)), "string" === r && (e = parseInt(e, 10)), t - e;
              if ($bm_isInstanceOfArray(t) && isNumerable(r, e))
                return (t = t.slice(0))[0] -= e, t;
              if (isNumerable(i, t) && $bm_isInstanceOfArray(e))
                return (e = e.slice(0))[0] = t - e[0], e;
              if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; )
                  ("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? o[s] = t[s] - e[s] : o[s] = void 0 === e[s] ? t[s] : t[s] || e[s], s += 1;
                return o;
              }
              return 0;
            }
            function mul(t, e) {
              var i, r, s, a = typeof t, n = typeof e;
              if (isNumerable(a, t) && isNumerable(n, e))
                return t * e;
              if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                for (s = t.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1)
                  i[r] = t[r] * e;
                return i;
              }
              if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                for (s = e.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1)
                  i[r] = t * e[r];
                return i;
              }
              return 0;
            }
            function div(t, e) {
              var i, r, s, a = typeof t, n = typeof e;
              if (isNumerable(a, t) && isNumerable(n, e))
                return t / e;
              if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                for (s = t.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1)
                  i[r] = t[r] / e;
                return i;
              }
              if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                for (s = e.length, i = createTypedArray("float32", s), r = 0; r < s; r += 1)
                  i[r] = t / e[r];
                return i;
              }
              return 0;
            }
            function mod(t, e) {
              return "string" == typeof t && (t = parseInt(t, 10)), "string" == typeof e && (e = parseInt(e, 10)), t % e;
            }
            var $bm_sum = sum, $bm_sub = sub, $bm_mul = mul, $bm_div = div, $bm_mod = mod;
            function clamp(t, e, i) {
              if (e > i) {
                var r = i;
                i = e, e = r;
              }
              return Math.min(Math.max(t, e), i);
            }
            function radiansToDegrees(t) {
              return t / degToRads;
            }
            var radians_to_degrees = radiansToDegrees;
            function degreesToRadians(t) {
              return t * degToRads;
            }
            var degrees_to_radians = radiansToDegrees, helperLengthArray = [0, 0, 0, 0, 0, 0];
            function length(t, e) {
              if ("number" == typeof t || t instanceof Number)
                return e = e || 0, Math.abs(t - e);
              var i;
              e || (e = helperLengthArray);
              var r = Math.min(t.length, e.length), s = 0;
              for (i = 0; i < r; i += 1)
                s += Math.pow(e[i] - t[i], 2);
              return Math.sqrt(s);
            }
            function normalize(t) {
              return div(t, length(t));
            }
            function rgbToHsl(t) {
              var e, i, r = t[0], s = t[1], a = t[2], n = Math.max(r, s, a), o = Math.min(r, s, a), h = (n + o) / 2;
              if (n === o)
                e = 0, i = 0;
              else {
                var l = n - o;
                switch (i = h > 0.5 ? l / (2 - n - o) : l / (n + o), n) {
                  case r:
                    e = (s - a) / l + (s < a ? 6 : 0);
                    break;
                  case s:
                    e = (a - r) / l + 2;
                    break;
                  case a:
                    e = (r - s) / l + 4;
                }
                e /= 6;
              }
              return [e, i, h, t[3]];
            }
            function hue2rgb(t, e, i) {
              return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? t + 6 * (e - t) * i : i < 0.5 ? e : i < 2 / 3 ? t + (e - t) * (2 / 3 - i) * 6 : t;
            }
            function hslToRgb(t) {
              var e, i, r, s = t[0], a = t[1], n = t[2];
              if (0 === a)
                e = n, r = n, i = n;
              else {
                var o = n < 0.5 ? n * (1 + a) : n + a - n * a, h = 2 * n - o;
                e = hue2rgb(h, o, s + 1 / 3), i = hue2rgb(h, o, s), r = hue2rgb(h, o, s - 1 / 3);
              }
              return [e, i, r, t[3]];
            }
            function linear(t, e, i, r, s) {
              if (void 0 !== r && void 0 !== s || (r = e, s = i, e = 0, i = 1), i < e) {
                var a = i;
                i = e, e = a;
              }
              if (t <= e)
                return r;
              if (t >= i)
                return s;
              var n, o = i === e ? 0 : (t - e) / (i - e);
              if (!r.length)
                return r + (s - r) * o;
              var h = r.length, l = createTypedArray("float32", h);
              for (n = 0; n < h; n += 1)
                l[n] = r[n] + (s[n] - r[n]) * o;
              return l;
            }
            function random(t, e) {
              if (void 0 === e && (void 0 === t ? (t = 0, e = 1) : (e = t, t = void 0)), e.length) {
                var i, r = e.length;
                t || (t = createTypedArray("float32", r));
                var s = createTypedArray("float32", r), a = BMMath.random();
                for (i = 0; i < r; i += 1)
                  s[i] = t[i] + a * (e[i] - t[i]);
                return s;
              }
              return void 0 === t && (t = 0), t + BMMath.random() * (e - t);
            }
            function createPath(t, e, i, r) {
              var s, a = t.length, n = shapePool.newElement();
              n.setPathData(!!r, a);
              var o, h, l = [0, 0];
              for (s = 0; s < a; s += 1)
                o = e && e[s] ? e[s] : l, h = i && i[s] ? i[s] : l, n.setTripleAt(t[s][0], t[s][1], h[0] + t[s][0], h[1] + t[s][1], o[0] + t[s][0], o[1] + t[s][1], s, true);
              return n;
            }
            function initiateExpression(elem, data, property) {
              var val = data.x, needsVelocity = /velocity(?![\w\d])/.test(val), _needsRandom = -1 !== val.indexOf("random"), elemType = elem.data.ty, transform, $bm_transform, content, effect, thisProperty = property;
              thisProperty.valueAtTime = thisProperty.getValueAtTime, Object.defineProperty(thisProperty, "value", { get: function() {
                return thisProperty.v;
              } }), elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate, elem.comp.displayStartTime = 0;
              var inPoint = elem.data.ip / elem.comp.globalData.frameRate, outPoint = elem.data.op / elem.comp.globalData.frameRate, width = elem.data.sw ? elem.data.sw : 0, height = elem.data.sh ? elem.data.sh : 0, name = elem.data.nm, loopIn, loop_in, loopOut, loop_out, smooth, toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime, scoped_bm_rt, expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0], numKeys = property.kf ? data.k.length : 0, active = !this.data || true !== this.data.hd, wiggle = function(t, e) {
                var i, r, s = this.pv.length ? this.pv.length : 1, a = createTypedArray("float32", s), n = Math.floor(5 * time);
                for (i = 0, r = 0; i < n; ) {
                  for (r = 0; r < s; r += 1)
                    a[r] += -e + 2 * e * BMMath.random();
                  i += 1;
                }
                var o = 5 * time, h = o - Math.floor(o), l = createTypedArray("float32", s);
                if (s > 1) {
                  for (r = 0; r < s; r += 1)
                    l[r] = this.pv[r] + a[r] + (-e + 2 * e * BMMath.random()) * h;
                  return l;
                }
                return this.pv + a[0] + (-e + 2 * e * BMMath.random()) * h;
              }.bind(this);
              function loopInDuration(t, e) {
                return loopIn(t, e, true);
              }
              function loopOutDuration(t, e) {
                return loopOut(t, e, true);
              }
              thisProperty.loopIn && (loopIn = thisProperty.loopIn.bind(thisProperty), loop_in = loopIn), thisProperty.loopOut && (loopOut = thisProperty.loopOut.bind(thisProperty), loop_out = loopOut), thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)), this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)), this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
              var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface), time, velocity, value, text, textIndex, textTotal, selectorValue;
              function lookAt(t, e) {
                var i = [e[0] - t[0], e[1] - t[1], e[2] - t[2]], r = Math.atan2(i[0], Math.sqrt(i[1] * i[1] + i[2] * i[2])) / degToRads;
                return [-Math.atan2(i[1], i[2]) / degToRads, r, 0];
              }
              function easeOut(t, e, i, r, s) {
                return applyEase(easeOutBez, t, e, i, r, s);
              }
              function easeIn(t, e, i, r, s) {
                return applyEase(easeInBez, t, e, i, r, s);
              }
              function ease(t, e, i, r, s) {
                return applyEase(easeInOutBez, t, e, i, r, s);
              }
              function applyEase(t, e, i, r, s, a) {
                void 0 === s ? (s = i, a = r) : e = (e - i) / (r - i), e > 1 ? e = 1 : e < 0 && (e = 0);
                var n = t(e);
                if ($bm_isInstanceOfArray(s)) {
                  var o, h = s.length, l = createTypedArray("float32", h);
                  for (o = 0; o < h; o += 1)
                    l[o] = (a[o] - s[o]) * n + s[o];
                  return l;
                }
                return (a - s) * n + s;
              }
              function nearestKey(t) {
                var e, i, r, s = data.k.length;
                if (data.k.length && "number" != typeof data.k[0])
                  if (i = -1, (t *= elem.comp.globalData.frameRate) < data.k[0].t)
                    i = 1, r = data.k[0].t;
                  else {
                    for (e = 0; e < s - 1; e += 1) {
                      if (t === data.k[e].t) {
                        i = e + 1, r = data.k[e].t;
                        break;
                      }
                      if (t > data.k[e].t && t < data.k[e + 1].t) {
                        t - data.k[e].t > data.k[e + 1].t - t ? (i = e + 2, r = data.k[e + 1].t) : (i = e + 1, r = data.k[e].t);
                        break;
                      }
                    }
                    -1 === i && (i = e + 1, r = data.k[e].t);
                  }
                else
                  i = 0, r = 0;
                var a = {};
                return a.index = i, a.time = r / elem.comp.globalData.frameRate, a;
              }
              function key(t) {
                var e, i, r;
                if (!data.k.length || "number" == typeof data.k[0])
                  throw new Error("The property has no keyframe at index " + t);
                t -= 1, e = { time: data.k[t].t / elem.comp.globalData.frameRate, value: [] };
                var s = Object.prototype.hasOwnProperty.call(data.k[t], "s") ? data.k[t].s : data.k[t - 1].e;
                for (r = s.length, i = 0; i < r; i += 1)
                  e[i] = s[i], e.value[i] = s[i];
                return e;
              }
              function framesToTime(t, e) {
                return e || (e = elem.comp.globalData.frameRate), t / e;
              }
              function timeToFrames(t, e) {
                return t || 0 === t || (t = time), e || (e = elem.comp.globalData.frameRate), t * e;
              }
              function seedRandom(t) {
                BMMath.seedrandom(randSeed + t);
              }
              function sourceRectAtTime() {
                return elem.sourceRectAtTime();
              }
              function substring(t, e) {
                return "string" == typeof value ? void 0 === e ? value.substring(t) : value.substring(t, e) : "";
              }
              function substr(t, e) {
                return "string" == typeof value ? void 0 === e ? value.substr(t) : value.substr(t, e) : "";
              }
              function posterizeTime(t) {
                time = 0 === t ? 0 : Math.floor(time * t) / t, value = valueAtTime(time);
              }
              var index = elem.data.ind, hasParent = !(!elem.hierarchy || !elem.hierarchy.length), parent, randSeed = Math.floor(1e6 * Math.random()), globalData = elem.globalData;
              function executeExpression(t) {
                return value = t, _needsRandom && seedRandom(randSeed), this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType ? value : ("textSelector" === this.propType && (textIndex = this.textIndex, textTotal = this.textTotal, selectorValue = this.selectorValue), thisLayer || (text = elem.layerInterface.text, thisLayer = elem.layerInterface, thisComp = elem.comp.compInterface, toWorld = thisLayer.toWorld.bind(thisLayer), fromWorld = thisLayer.fromWorld.bind(thisLayer), fromComp = thisLayer.fromComp.bind(thisLayer), toComp = thisLayer.toComp.bind(thisLayer), mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null, fromCompToSurface = fromComp), transform || (transform = elem.layerInterface("ADBE Transform Group"), $bm_transform = transform, transform && (anchorPoint = transform.anchorPoint)), 4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")), effect || (effect = thisLayer(4)), (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface), time = this.comp.renderedFrame / this.comp.globalData.frameRate, needsVelocity && (velocity = velocityAtTime(time)), expression_function(), this.frameExpressionId = elem.globalData.frameId, "shape" === scoped_bm_rt.propType && (scoped_bm_rt = scoped_bm_rt.v), scoped_bm_rt);
              }
              return executeExpression;
            }
            return ob.initiateExpression = initiateExpression, ob;
          }(), expressionHelpers = { searchExpressions: function(t, e, i) {
            e.x && (i.k = true, i.x = true, i.initiateExpression = ExpressionManager.initiateExpression, i.effectsSequence.push(i.initiateExpression(t, e, i).bind(i)));
          }, getSpeedAtTime: function(t) {
            var e = this.getValueAtTime(t), i = this.getValueAtTime(t + -0.01), r = 0;
            if (e.length) {
              var s;
              for (s = 0; s < e.length; s += 1)
                r += Math.pow(i[s] - e[s], 2);
              r = 100 * Math.sqrt(r);
            } else
              r = 0;
            return r;
          }, getVelocityAtTime: function(t) {
            if (void 0 !== this.vel)
              return this.vel;
            var e, i, r = -1e-3, s = this.getValueAtTime(t), a = this.getValueAtTime(t + r);
            if (s.length)
              for (e = createTypedArray("float32", s.length), i = 0; i < s.length; i += 1)
                e[i] = (a[i] - s[i]) / r;
            else
              e = (a - s) / r;
            return e;
          }, getValueAtTime: function(t) {
            return t *= this.elem.globalData.frameRate, (t -= this.offsetTime) !== this._cachingAtTime.lastFrame && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < t ? this._cachingAtTime.lastIndex : 0, this._cachingAtTime.value = this.interpolateValue(t, this._cachingAtTime), this._cachingAtTime.lastFrame = t), this._cachingAtTime.value;
          }, getStaticValueAtTime: function() {
            return this.pv;
          }, setGroupProperty: function(t) {
            this.propertyGroup = t;
          } };
          !function() {
            function t(t2, e2, i2) {
              if (!this.k || !this.keyframes)
                return this.pv;
              t2 = t2 ? t2.toLowerCase() : "";
              var r2, s2, a2, n2, o2, h2 = this.comp.renderedFrame, l2 = this.keyframes, p2 = l2[l2.length - 1].t;
              if (h2 <= p2)
                return this.pv;
              if (i2 ? s2 = p2 - (r2 = e2 ? Math.abs(p2 - this.elem.comp.globalData.frameRate * e2) : Math.max(0, p2 - this.elem.data.ip)) : ((!e2 || e2 > l2.length - 1) && (e2 = l2.length - 1), r2 = p2 - (s2 = l2[l2.length - 1 - e2].t)), "pingpong" === t2) {
                if (Math.floor((h2 - s2) / r2) % 2 != 0)
                  return this.getValueAtTime((r2 - (h2 - s2) % r2 + s2) / this.comp.globalData.frameRate, 0);
              } else {
                if ("offset" === t2) {
                  var c = this.getValueAtTime(s2 / this.comp.globalData.frameRate, 0), m = this.getValueAtTime(p2 / this.comp.globalData.frameRate, 0), f = this.getValueAtTime(((h2 - s2) % r2 + s2) / this.comp.globalData.frameRate, 0), d = Math.floor((h2 - s2) / r2);
                  if (this.pv.length) {
                    for (n2 = (o2 = new Array(c.length)).length, a2 = 0; a2 < n2; a2 += 1)
                      o2[a2] = (m[a2] - c[a2]) * d + f[a2];
                    return o2;
                  }
                  return (m - c) * d + f;
                }
                if ("continue" === t2) {
                  var u = this.getValueAtTime(p2 / this.comp.globalData.frameRate, 0), y = this.getValueAtTime((p2 - 1e-3) / this.comp.globalData.frameRate, 0);
                  if (this.pv.length) {
                    for (n2 = (o2 = new Array(u.length)).length, a2 = 0; a2 < n2; a2 += 1)
                      o2[a2] = u[a2] + (u[a2] - y[a2]) * ((h2 - p2) / this.comp.globalData.frameRate) / 5e-4;
                    return o2;
                  }
                  return u + (h2 - p2) / 1e-3 * (u - y);
                }
              }
              return this.getValueAtTime(((h2 - s2) % r2 + s2) / this.comp.globalData.frameRate, 0);
            }
            function e(t2, e2, i2) {
              if (!this.k)
                return this.pv;
              t2 = t2 ? t2.toLowerCase() : "";
              var r2, s2, a2, n2, o2, h2 = this.comp.renderedFrame, l2 = this.keyframes, p2 = l2[0].t;
              if (h2 >= p2)
                return this.pv;
              if (i2 ? s2 = p2 + (r2 = e2 ? Math.abs(this.elem.comp.globalData.frameRate * e2) : Math.max(0, this.elem.data.op - p2)) : ((!e2 || e2 > l2.length - 1) && (e2 = l2.length - 1), r2 = (s2 = l2[e2].t) - p2), "pingpong" === t2) {
                if (Math.floor((p2 - h2) / r2) % 2 == 0)
                  return this.getValueAtTime(((p2 - h2) % r2 + p2) / this.comp.globalData.frameRate, 0);
              } else {
                if ("offset" === t2) {
                  var c = this.getValueAtTime(p2 / this.comp.globalData.frameRate, 0), m = this.getValueAtTime(s2 / this.comp.globalData.frameRate, 0), f = this.getValueAtTime((r2 - (p2 - h2) % r2 + p2) / this.comp.globalData.frameRate, 0), d = Math.floor((p2 - h2) / r2) + 1;
                  if (this.pv.length) {
                    for (n2 = (o2 = new Array(c.length)).length, a2 = 0; a2 < n2; a2 += 1)
                      o2[a2] = f[a2] - (m[a2] - c[a2]) * d;
                    return o2;
                  }
                  return f - (m - c) * d;
                }
                if ("continue" === t2) {
                  var u = this.getValueAtTime(p2 / this.comp.globalData.frameRate, 0), y = this.getValueAtTime((p2 + 1e-3) / this.comp.globalData.frameRate, 0);
                  if (this.pv.length) {
                    for (n2 = (o2 = new Array(u.length)).length, a2 = 0; a2 < n2; a2 += 1)
                      o2[a2] = u[a2] + (u[a2] - y[a2]) * (p2 - h2) / 1e-3;
                    return o2;
                  }
                  return u + (u - y) * (p2 - h2) / 1e-3;
                }
              }
              return this.getValueAtTime((r2 - ((p2 - h2) % r2 + p2)) / this.comp.globalData.frameRate, 0);
            }
            function i(t2, e2) {
              if (!this.k)
                return this.pv;
              if (t2 = 0.5 * (t2 || 0.4), (e2 = Math.floor(e2 || 5)) <= 1)
                return this.pv;
              var i2, r2, s2 = this.comp.renderedFrame / this.comp.globalData.frameRate, a2 = s2 - t2, n2 = e2 > 1 ? (s2 + t2 - a2) / (e2 - 1) : 1, o2 = 0, h2 = 0;
              for (i2 = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; o2 < e2; ) {
                if (r2 = this.getValueAtTime(a2 + o2 * n2), this.pv.length)
                  for (h2 = 0; h2 < this.pv.length; h2 += 1)
                    i2[h2] += r2[h2];
                else
                  i2 += r2;
                o2 += 1;
              }
              if (this.pv.length)
                for (h2 = 0; h2 < this.pv.length; h2 += 1)
                  i2[h2] /= e2;
              else
                i2 /= e2;
              return i2;
            }
            function r(t2) {
              this._transformCachingAtTime || (this._transformCachingAtTime = { v: new Matrix() });
              var e2 = this._transformCachingAtTime.v;
              if (e2.cloneFromProps(this.pre.props), this.appliedTransformations < 1) {
                var i2 = this.a.getValueAtTime(t2);
                e2.translate(-i2[0] * this.a.mult, -i2[1] * this.a.mult, i2[2] * this.a.mult);
              }
              if (this.appliedTransformations < 2) {
                var r2 = this.s.getValueAtTime(t2);
                e2.scale(r2[0] * this.s.mult, r2[1] * this.s.mult, r2[2] * this.s.mult);
              }
              if (this.sk && this.appliedTransformations < 3) {
                var s2 = this.sk.getValueAtTime(t2), a2 = this.sa.getValueAtTime(t2);
                e2.skewFromAxis(-s2 * this.sk.mult, a2 * this.sa.mult);
              }
              if (this.r && this.appliedTransformations < 4) {
                var n2 = this.r.getValueAtTime(t2);
                e2.rotate(-n2 * this.r.mult);
              } else if (!this.r && this.appliedTransformations < 4) {
                var o2 = this.rz.getValueAtTime(t2), h2 = this.ry.getValueAtTime(t2), l2 = this.rx.getValueAtTime(t2), p2 = this.or.getValueAtTime(t2);
                e2.rotateZ(-o2 * this.rz.mult).rotateY(h2 * this.ry.mult).rotateX(l2 * this.rx.mult).rotateZ(-p2[2] * this.or.mult).rotateY(p2[1] * this.or.mult).rotateX(p2[0] * this.or.mult);
              }
              if (this.data.p && this.data.p.s) {
                var c = this.px.getValueAtTime(t2), m = this.py.getValueAtTime(t2);
                if (this.data.p.z) {
                  var f = this.pz.getValueAtTime(t2);
                  e2.translate(c * this.px.mult, m * this.py.mult, -f * this.pz.mult);
                } else
                  e2.translate(c * this.px.mult, m * this.py.mult, 0);
              } else {
                var d = this.p.getValueAtTime(t2);
                e2.translate(d[0] * this.p.mult, d[1] * this.p.mult, -d[2] * this.p.mult);
              }
              return e2;
            }
            function s() {
              return this.v.clone(new Matrix());
            }
            var a = TransformPropertyFactory.getTransformProperty;
            TransformPropertyFactory.getTransformProperty = function(t2, e2, i2) {
              var n2 = a(t2, e2, i2);
              return n2.dynamicProperties.length ? n2.getValueAtTime = r.bind(n2) : n2.getValueAtTime = s.bind(n2), n2.setGroupProperty = expressionHelpers.setGroupProperty, n2;
            };
            var n = PropertyFactory.getProp;
            PropertyFactory.getProp = function(r2, s2, a2, o2, h2) {
              var l2 = n(r2, s2, a2, o2, h2);
              l2.kf ? l2.getValueAtTime = expressionHelpers.getValueAtTime.bind(l2) : l2.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(l2), l2.setGroupProperty = expressionHelpers.setGroupProperty, l2.loopOut = t, l2.loopIn = e, l2.smooth = i, l2.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(l2), l2.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(l2), l2.numKeys = 1 === s2.a ? s2.k.length : 0, l2.propertyIndex = s2.ix;
              var p2 = 0;
              return 0 !== a2 && (p2 = createTypedArray("float32", 1 === s2.a ? s2.k[0].s.length : s2.k.length)), l2._cachingAtTime = { lastFrame: initialDefaultFrame, lastIndex: 0, value: p2 }, expressionHelpers.searchExpressions(r2, s2, l2), l2.k && h2.addDynamicProperty(l2), l2;
            };
            var o = ShapePropertyFactory.getConstructorFunction(), h = ShapePropertyFactory.getKeyframedConstructorFunction();
            function l() {
            }
            l.prototype = { vertices: function(t2, e2) {
              this.k && this.getValue();
              var i2, r2 = this.v;
              void 0 !== e2 && (r2 = this.getValueAtTime(e2, 0));
              var s2 = r2._length, a2 = r2[t2], n2 = r2.v, o2 = createSizedArray(s2);
              for (i2 = 0; i2 < s2; i2 += 1)
                o2[i2] = "i" === t2 || "o" === t2 ? [a2[i2][0] - n2[i2][0], a2[i2][1] - n2[i2][1]] : [a2[i2][0], a2[i2][1]];
              return o2;
            }, points: function(t2) {
              return this.vertices("v", t2);
            }, inTangents: function(t2) {
              return this.vertices("i", t2);
            }, outTangents: function(t2) {
              return this.vertices("o", t2);
            }, isClosed: function() {
              return this.v.c;
            }, pointOnPath: function(t2, e2) {
              var i2 = this.v;
              void 0 !== e2 && (i2 = this.getValueAtTime(e2, 0)), this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(i2));
              for (var r2, s2 = this._segmentsLength, a2 = s2.lengths, n2 = s2.totalLength * t2, o2 = 0, h2 = a2.length, l2 = 0; o2 < h2; ) {
                if (l2 + a2[o2].addedLength > n2) {
                  var p2 = o2, c = i2.c && o2 === h2 - 1 ? 0 : o2 + 1, m = (n2 - l2) / a2[o2].addedLength;
                  r2 = bez.getPointInSegment(i2.v[p2], i2.v[c], i2.o[p2], i2.i[c], m, a2[o2]);
                  break;
                }
                l2 += a2[o2].addedLength, o2 += 1;
              }
              return r2 || (r2 = i2.c ? [i2.v[0][0], i2.v[0][1]] : [i2.v[i2._length - 1][0], i2.v[i2._length - 1][1]]), r2;
            }, vectorOnPath: function(t2, e2, i2) {
              1 == t2 ? t2 = this.v.c : 0 == t2 && (t2 = 0.999);
              var r2 = this.pointOnPath(t2, e2), s2 = this.pointOnPath(t2 + 1e-3, e2), a2 = s2[0] - r2[0], n2 = s2[1] - r2[1], o2 = Math.sqrt(Math.pow(a2, 2) + Math.pow(n2, 2));
              return 0 === o2 ? [0, 0] : "tangent" === i2 ? [a2 / o2, n2 / o2] : [-n2 / o2, a2 / o2];
            }, tangentOnPath: function(t2, e2) {
              return this.vectorOnPath(t2, e2, "tangent");
            }, normalOnPath: function(t2, e2) {
              return this.vectorOnPath(t2, e2, "normal");
            }, setGroupProperty: expressionHelpers.setGroupProperty, getValueAtTime: expressionHelpers.getStaticValueAtTime }, extendPrototype([l], o), extendPrototype([l], h), h.prototype.getValueAtTime = function(t2) {
              return this._cachingAtTime || (this._cachingAtTime = { shapeValue: shapePool.clone(this.pv), lastIndex: 0, lastTime: initialDefaultFrame }), t2 *= this.elem.globalData.frameRate, (t2 -= this.offsetTime) !== this._cachingAtTime.lastTime && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < t2 ? this._caching.lastIndex : 0, this._cachingAtTime.lastTime = t2, this.interpolateShape(t2, this._cachingAtTime.shapeValue, this._cachingAtTime)), this._cachingAtTime.shapeValue;
            }, h.prototype.initiateExpression = ExpressionManager.initiateExpression;
            var p = ShapePropertyFactory.getShapeProp;
            ShapePropertyFactory.getShapeProp = function(t2, e2, i2, r2, s2) {
              var a2 = p(t2, e2, i2, r2, s2);
              return a2.propertyIndex = e2.ix, a2.lock = false, 3 === i2 ? expressionHelpers.searchExpressions(t2, e2.pt, a2) : 4 === i2 && expressionHelpers.searchExpressions(t2, e2.ks, a2), a2.k && t2.addDynamicProperty(a2), a2;
            };
          }(), TextProperty.prototype.getExpressionValue = function(t, e) {
            var i = this.calculateExpression(e);
            if (t.t !== i) {
              var r = {};
              return this.copyData(r, t), r.t = i.toString(), r.__complete = false, r;
            }
            return t;
          }, TextProperty.prototype.searchProperty = function() {
            var t = this.searchKeyframes(), e = this.searchExpressions();
            return this.kf = t || e, this.kf;
          }, TextProperty.prototype.searchExpressions = function() {
            return this.data.d.x ? (this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this), this.addEffect(this.getExpressionValue.bind(this)), true) : null;
          };
          var ShapePathInterface = function(t, e, i) {
            var r = e.sh;
            function s(t2) {
              return "Shape" === t2 || "shape" === t2 || "Path" === t2 || "path" === t2 || "ADBE Vector Shape" === t2 || 2 === t2 ? s.path : null;
            }
            var a = propertyGroupFactory(s, i);
            return r.setGroupProperty(PropertyInterface("Path", a)), Object.defineProperties(s, { path: { get: function() {
              return r.k && r.getValue(), r;
            } }, shape: { get: function() {
              return r.k && r.getValue(), r;
            } }, _name: { value: t.nm }, ix: { value: t.ix }, propertyIndex: { value: t.ix }, mn: { value: t.mn }, propertyGroup: { value: i } }), s;
          }, propertyGroupFactory = function(t, e) {
            return function(i) {
              return (i = void 0 === i ? 1 : i) <= 0 ? t : e(i - 1);
            };
          }, PropertyInterface = function(t, e) {
            var i = { _name: t };
            return function(t2) {
              return (t2 = void 0 === t2 ? 1 : t2) <= 0 ? i : e(t2 - 1);
            };
          }, ShapeExpressionInterface = function() {
            function t(t2, a2, c) {
              var m, f = [], d = t2 ? t2.length : 0;
              for (m = 0; m < d; m += 1)
                "gr" === t2[m].ty ? f.push(e(t2[m], a2[m], c)) : "fl" === t2[m].ty ? f.push(i(t2[m], a2[m], c)) : "st" === t2[m].ty ? f.push(r(t2[m], a2[m], c)) : "tm" === t2[m].ty ? f.push(s(t2[m], a2[m], c)) : "tr" === t2[m].ty || ("el" === t2[m].ty ? f.push(n(t2[m], a2[m], c)) : "sr" === t2[m].ty ? f.push(o(t2[m], a2[m], c)) : "sh" === t2[m].ty ? f.push(ShapePathInterface(t2[m], a2[m], c)) : "rc" === t2[m].ty ? f.push(h(t2[m], a2[m], c)) : "rd" === t2[m].ty ? f.push(l(t2[m], a2[m], c)) : "rp" === t2[m].ty && f.push(p(t2[m], a2[m], c)));
              return f;
            }
            function e(e2, i2, r2) {
              var s2 = function(t2) {
                switch (t2) {
                  case "ADBE Vectors Group":
                  case "Contents":
                  case 2:
                    return s2.content;
                  default:
                    return s2.transform;
                }
              };
              s2.propertyGroup = propertyGroupFactory(s2, r2);
              var n2 = function(e3, i3, r3) {
                var s3, n3 = function(t2) {
                  for (var e4 = 0, i4 = s3.length; e4 < i4; ) {
                    if (s3[e4]._name === t2 || s3[e4].mn === t2 || s3[e4].propertyIndex === t2 || s3[e4].ix === t2 || s3[e4].ind === t2)
                      return s3[e4];
                    e4 += 1;
                  }
                  return "number" == typeof t2 ? s3[t2 - 1] : null;
                };
                n3.propertyGroup = propertyGroupFactory(n3, r3), s3 = t(e3.it, i3.it, n3.propertyGroup), n3.numProperties = s3.length;
                var o3 = a(e3.it[e3.it.length - 1], i3.it[i3.it.length - 1], n3.propertyGroup);
                return n3.transform = o3, n3.propertyIndex = e3.cix, n3._name = e3.nm, n3;
              }(e2, i2, s2.propertyGroup), o2 = a(e2.it[e2.it.length - 1], i2.it[i2.it.length - 1], s2.propertyGroup);
              return s2.content = n2, s2.transform = o2, Object.defineProperty(s2, "_name", { get: function() {
                return e2.nm;
              } }), s2.numProperties = e2.np, s2.propertyIndex = e2.ix, s2.nm = e2.nm, s2.mn = e2.mn, s2;
            }
            function i(t2, e2, i2) {
              function r2(t3) {
                return "Color" === t3 || "color" === t3 ? r2.color : "Opacity" === t3 || "opacity" === t3 ? r2.opacity : null;
              }
              return Object.defineProperties(r2, { color: { get: ExpressionPropertyInterface(e2.c) }, opacity: { get: ExpressionPropertyInterface(e2.o) }, _name: { value: t2.nm }, mn: { value: t2.mn } }), e2.c.setGroupProperty(PropertyInterface("Color", i2)), e2.o.setGroupProperty(PropertyInterface("Opacity", i2)), r2;
            }
            function r(t2, e2, i2) {
              var r2, s2 = propertyGroupFactory(l2, i2), a2 = propertyGroupFactory(h2, s2);
              function n2(i3) {
                Object.defineProperty(h2, t2.d[i3].nm, { get: ExpressionPropertyInterface(e2.d.dataProps[i3].p) });
              }
              var o2 = t2.d ? t2.d.length : 0, h2 = {};
              for (r2 = 0; r2 < o2; r2 += 1)
                n2(r2), e2.d.dataProps[r2].p.setGroupProperty(a2);
              function l2(t3) {
                return "Color" === t3 || "color" === t3 ? l2.color : "Opacity" === t3 || "opacity" === t3 ? l2.opacity : "Stroke Width" === t3 || "stroke width" === t3 ? l2.strokeWidth : null;
              }
              return Object.defineProperties(l2, { color: { get: ExpressionPropertyInterface(e2.c) }, opacity: { get: ExpressionPropertyInterface(e2.o) }, strokeWidth: { get: ExpressionPropertyInterface(e2.w) }, dash: { get: function() {
                return h2;
              } }, _name: { value: t2.nm }, mn: { value: t2.mn } }), e2.c.setGroupProperty(PropertyInterface("Color", s2)), e2.o.setGroupProperty(PropertyInterface("Opacity", s2)), e2.w.setGroupProperty(PropertyInterface("Stroke Width", s2)), l2;
            }
            function s(t2, e2, i2) {
              function r2(e3) {
                return e3 === t2.e.ix || "End" === e3 || "end" === e3 ? r2.end : e3 === t2.s.ix ? r2.start : e3 === t2.o.ix ? r2.offset : null;
              }
              var s2 = propertyGroupFactory(r2, i2);
              return r2.propertyIndex = t2.ix, e2.s.setGroupProperty(PropertyInterface("Start", s2)), e2.e.setGroupProperty(PropertyInterface("End", s2)), e2.o.setGroupProperty(PropertyInterface("Offset", s2)), r2.propertyIndex = t2.ix, r2.propertyGroup = i2, Object.defineProperties(r2, { start: { get: ExpressionPropertyInterface(e2.s) }, end: { get: ExpressionPropertyInterface(e2.e) }, offset: { get: ExpressionPropertyInterface(e2.o) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
            }
            function a(t2, e2, i2) {
              function r2(e3) {
                return t2.a.ix === e3 || "Anchor Point" === e3 ? r2.anchorPoint : t2.o.ix === e3 || "Opacity" === e3 ? r2.opacity : t2.p.ix === e3 || "Position" === e3 ? r2.position : t2.r.ix === e3 || "Rotation" === e3 || "ADBE Vector Rotation" === e3 ? r2.rotation : t2.s.ix === e3 || "Scale" === e3 ? r2.scale : t2.sk && t2.sk.ix === e3 || "Skew" === e3 ? r2.skew : t2.sa && t2.sa.ix === e3 || "Skew Axis" === e3 ? r2.skewAxis : null;
              }
              var s2 = propertyGroupFactory(r2, i2);
              return e2.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", s2)), e2.transform.mProps.p.setGroupProperty(PropertyInterface("Position", s2)), e2.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", s2)), e2.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", s2)), e2.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", s2)), e2.transform.mProps.sk && (e2.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", s2)), e2.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", s2))), e2.transform.op.setGroupProperty(PropertyInterface("Opacity", s2)), Object.defineProperties(r2, { opacity: { get: ExpressionPropertyInterface(e2.transform.mProps.o) }, position: { get: ExpressionPropertyInterface(e2.transform.mProps.p) }, anchorPoint: { get: ExpressionPropertyInterface(e2.transform.mProps.a) }, scale: { get: ExpressionPropertyInterface(e2.transform.mProps.s) }, rotation: { get: ExpressionPropertyInterface(e2.transform.mProps.r) }, skew: { get: ExpressionPropertyInterface(e2.transform.mProps.sk) }, skewAxis: { get: ExpressionPropertyInterface(e2.transform.mProps.sa) }, _name: { value: t2.nm } }), r2.ty = "tr", r2.mn = t2.mn, r2.propertyGroup = i2, r2;
            }
            function n(t2, e2, i2) {
              function r2(e3) {
                return t2.p.ix === e3 ? r2.position : t2.s.ix === e3 ? r2.size : null;
              }
              var s2 = propertyGroupFactory(r2, i2);
              r2.propertyIndex = t2.ix;
              var a2 = "tm" === e2.sh.ty ? e2.sh.prop : e2.sh;
              return a2.s.setGroupProperty(PropertyInterface("Size", s2)), a2.p.setGroupProperty(PropertyInterface("Position", s2)), Object.defineProperties(r2, { size: { get: ExpressionPropertyInterface(a2.s) }, position: { get: ExpressionPropertyInterface(a2.p) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
            }
            function o(t2, e2, i2) {
              function r2(e3) {
                return t2.p.ix === e3 ? r2.position : t2.r.ix === e3 ? r2.rotation : t2.pt.ix === e3 ? r2.points : t2.or.ix === e3 || "ADBE Vector Star Outer Radius" === e3 ? r2.outerRadius : t2.os.ix === e3 ? r2.outerRoundness : !t2.ir || t2.ir.ix !== e3 && "ADBE Vector Star Inner Radius" !== e3 ? t2.is && t2.is.ix === e3 ? r2.innerRoundness : null : r2.innerRadius;
              }
              var s2 = propertyGroupFactory(r2, i2), a2 = "tm" === e2.sh.ty ? e2.sh.prop : e2.sh;
              return r2.propertyIndex = t2.ix, a2.or.setGroupProperty(PropertyInterface("Outer Radius", s2)), a2.os.setGroupProperty(PropertyInterface("Outer Roundness", s2)), a2.pt.setGroupProperty(PropertyInterface("Points", s2)), a2.p.setGroupProperty(PropertyInterface("Position", s2)), a2.r.setGroupProperty(PropertyInterface("Rotation", s2)), t2.ir && (a2.ir.setGroupProperty(PropertyInterface("Inner Radius", s2)), a2.is.setGroupProperty(PropertyInterface("Inner Roundness", s2))), Object.defineProperties(r2, { position: { get: ExpressionPropertyInterface(a2.p) }, rotation: { get: ExpressionPropertyInterface(a2.r) }, points: { get: ExpressionPropertyInterface(a2.pt) }, outerRadius: { get: ExpressionPropertyInterface(a2.or) }, outerRoundness: { get: ExpressionPropertyInterface(a2.os) }, innerRadius: { get: ExpressionPropertyInterface(a2.ir) }, innerRoundness: { get: ExpressionPropertyInterface(a2.is) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
            }
            function h(t2, e2, i2) {
              function r2(e3) {
                return t2.p.ix === e3 ? r2.position : t2.r.ix === e3 ? r2.roundness : t2.s.ix === e3 || "Size" === e3 || "ADBE Vector Rect Size" === e3 ? r2.size : null;
              }
              var s2 = propertyGroupFactory(r2, i2), a2 = "tm" === e2.sh.ty ? e2.sh.prop : e2.sh;
              return r2.propertyIndex = t2.ix, a2.p.setGroupProperty(PropertyInterface("Position", s2)), a2.s.setGroupProperty(PropertyInterface("Size", s2)), a2.r.setGroupProperty(PropertyInterface("Rotation", s2)), Object.defineProperties(r2, { position: { get: ExpressionPropertyInterface(a2.p) }, roundness: { get: ExpressionPropertyInterface(a2.r) }, size: { get: ExpressionPropertyInterface(a2.s) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
            }
            function l(t2, e2, i2) {
              function r2(e3) {
                return t2.r.ix === e3 || "Round Corners 1" === e3 ? r2.radius : null;
              }
              var s2 = propertyGroupFactory(r2, i2), a2 = e2;
              return r2.propertyIndex = t2.ix, a2.rd.setGroupProperty(PropertyInterface("Radius", s2)), Object.defineProperties(r2, { radius: { get: ExpressionPropertyInterface(a2.rd) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
            }
            function p(t2, e2, i2) {
              function r2(e3) {
                return t2.c.ix === e3 || "Copies" === e3 ? r2.copies : t2.o.ix === e3 || "Offset" === e3 ? r2.offset : null;
              }
              var s2 = propertyGroupFactory(r2, i2), a2 = e2;
              return r2.propertyIndex = t2.ix, a2.c.setGroupProperty(PropertyInterface("Copies", s2)), a2.o.setGroupProperty(PropertyInterface("Offset", s2)), Object.defineProperties(r2, { copies: { get: ExpressionPropertyInterface(a2.c) }, offset: { get: ExpressionPropertyInterface(a2.o) }, _name: { value: t2.nm } }), r2.mn = t2.mn, r2;
            }
            return function(e2, i2, r2) {
              var s2;
              function a2(t2) {
                if ("number" == typeof t2)
                  return 0 === (t2 = void 0 === t2 ? 1 : t2) ? r2 : s2[t2 - 1];
                for (var e3 = 0, i3 = s2.length; e3 < i3; ) {
                  if (s2[e3]._name === t2)
                    return s2[e3];
                  e3 += 1;
                }
                return null;
              }
              return a2.propertyGroup = propertyGroupFactory(a2, function() {
                return r2;
              }), s2 = t(e2, i2, a2.propertyGroup), a2.numProperties = s2.length, a2._name = "Contents", a2;
            };
          }(), TextExpressionInterface = function(t) {
            var e, i;
            function r(t2) {
              switch (t2) {
                case "ADBE Text Document":
                  return r.sourceText;
                default:
                  return null;
              }
            }
            return Object.defineProperty(r, "sourceText", { get: function() {
              t.textProperty.getValue();
              var r2 = t.textProperty.currentData.t;
              return r2 !== e && (t.textProperty.currentData.t = e, (i = new String(r2)).value = r2 || new String(r2)), i;
            } }), r;
          }, LayerExpressionInterface = function() {
            function t(t2) {
              var e2 = new Matrix();
              return void 0 !== t2 ? this._elem.finalTransform.mProp.getValueAtTime(t2).clone(e2) : this._elem.finalTransform.mProp.applyToMatrix(e2), e2;
            }
            function e(t2, e2) {
              var i2 = this.getMatrix(e2);
              return i2.props[12] = 0, i2.props[13] = 0, i2.props[14] = 0, this.applyPoint(i2, t2);
            }
            function i(t2, e2) {
              var i2 = this.getMatrix(e2);
              return this.applyPoint(i2, t2);
            }
            function r(t2, e2) {
              var i2 = this.getMatrix(e2);
              return i2.props[12] = 0, i2.props[13] = 0, i2.props[14] = 0, this.invertPoint(i2, t2);
            }
            function s(t2, e2) {
              var i2 = this.getMatrix(e2);
              return this.invertPoint(i2, t2);
            }
            function a(t2, e2) {
              if (this._elem.hierarchy && this._elem.hierarchy.length) {
                var i2, r2 = this._elem.hierarchy.length;
                for (i2 = 0; i2 < r2; i2 += 1)
                  this._elem.hierarchy[i2].finalTransform.mProp.applyToMatrix(t2);
              }
              return t2.applyToPointArray(e2[0], e2[1], e2[2] || 0);
            }
            function n(t2, e2) {
              if (this._elem.hierarchy && this._elem.hierarchy.length) {
                var i2, r2 = this._elem.hierarchy.length;
                for (i2 = 0; i2 < r2; i2 += 1)
                  this._elem.hierarchy[i2].finalTransform.mProp.applyToMatrix(t2);
              }
              return t2.inversePoint(e2);
            }
            function o(t2) {
              var e2 = new Matrix();
              if (e2.reset(), this._elem.finalTransform.mProp.applyToMatrix(e2), this._elem.hierarchy && this._elem.hierarchy.length) {
                var i2, r2 = this._elem.hierarchy.length;
                for (i2 = 0; i2 < r2; i2 += 1)
                  this._elem.hierarchy[i2].finalTransform.mProp.applyToMatrix(e2);
                return e2.inversePoint(t2);
              }
              return e2.inversePoint(t2);
            }
            function h() {
              return [1, 1, 1, 1];
            }
            return function(l) {
              var p;
              function c(t2) {
                switch (t2) {
                  case "ADBE Root Vectors Group":
                  case "Contents":
                  case 2:
                    return c.shapeInterface;
                  case 1:
                  case 6:
                  case "Transform":
                  case "transform":
                  case "ADBE Transform Group":
                    return p;
                  case 4:
                  case "ADBE Effect Parade":
                  case "effects":
                  case "Effects":
                    return c.effect;
                  case "ADBE Text Properties":
                    return c.textInterface;
                  default:
                    return null;
                }
              }
              c.getMatrix = t, c.invertPoint = n, c.applyPoint = a, c.toWorld = i, c.toWorldVec = e, c.fromWorld = s, c.fromWorldVec = r, c.toComp = i, c.fromComp = o, c.sampleImage = h, c.sourceRectAtTime = l.sourceRectAtTime.bind(l), c._elem = l;
              var m = getDescriptor(p = TransformExpressionInterface(l.finalTransform.mProp), "anchorPoint");
              return Object.defineProperties(c, { hasParent: { get: function() {
                return l.hierarchy.length;
              } }, parent: { get: function() {
                return l.hierarchy[0].layerInterface;
              } }, rotation: getDescriptor(p, "rotation"), scale: getDescriptor(p, "scale"), position: getDescriptor(p, "position"), opacity: getDescriptor(p, "opacity"), anchorPoint: m, anchor_point: m, transform: { get: function() {
                return p;
              } }, active: { get: function() {
                return l.isInRange;
              } } }), c.startTime = l.data.st, c.index = l.data.ind, c.source = l.data.refId, c.height = 0 === l.data.ty ? l.data.h : 100, c.width = 0 === l.data.ty ? l.data.w : 100, c.inPoint = l.data.ip / l.comp.globalData.frameRate, c.outPoint = l.data.op / l.comp.globalData.frameRate, c._name = l.data.nm, c.registerMaskInterface = function(t2) {
                c.mask = new MaskManagerInterface(t2, l);
              }, c.registerEffectsInterface = function(t2) {
                c.effect = t2;
              }, c;
            };
          }(), FootageInterface = (dataInterfaceFactory = function(t) {
            function e(t2) {
              return "Outline" === t2 ? e.outlineInterface() : null;
            }
            return e._name = "Outline", e.outlineInterface = function(t2) {
              var e2 = "", i = t2.getFootageData();
              function r(t3) {
                if (i[t3])
                  return e2 = t3, "object" == typeof (i = i[t3]) ? r : i;
                var s = t3.indexOf(e2);
                if (-1 !== s) {
                  var a = parseInt(t3.substr(s + e2.length), 10);
                  return "object" == typeof (i = i[a]) ? r : i;
                }
                return "";
              }
              return function() {
                return e2 = "", i = t2.getFootageData(), r;
              };
            }(t), e;
          }, function(t) {
            function e(t2) {
              return "Data" === t2 ? e.dataInterface : null;
            }
            return e._name = "Data", e.dataInterface = dataInterfaceFactory(t), e;
          }), dataInterfaceFactory, CompExpressionInterface = function(t) {
            function e(e2) {
              for (var i = 0, r = t.layers.length; i < r; ) {
                if (t.layers[i].nm === e2 || t.layers[i].ind === e2)
                  return t.elements[i].layerInterface;
                i += 1;
              }
              return null;
            }
            return Object.defineProperty(e, "_name", { value: t.data.nm }), e.layer = e, e.pixelAspect = 1, e.height = t.data.h || t.globalData.compSize.h, e.width = t.data.w || t.globalData.compSize.w, e.pixelAspect = 1, e.frameDuration = 1 / t.globalData.frameRate, e.displayStartTime = 0, e.numLayers = t.layers.length, e;
          }, TransformExpressionInterface = function(t) {
            function e(t2) {
              switch (t2) {
                case "scale":
                case "Scale":
                case "ADBE Scale":
                case 6:
                  return e.scale;
                case "rotation":
                case "Rotation":
                case "ADBE Rotation":
                case "ADBE Rotate Z":
                case 10:
                  return e.rotation;
                case "ADBE Rotate X":
                  return e.xRotation;
                case "ADBE Rotate Y":
                  return e.yRotation;
                case "position":
                case "Position":
                case "ADBE Position":
                case 2:
                  return e.position;
                case "ADBE Position_0":
                  return e.xPosition;
                case "ADBE Position_1":
                  return e.yPosition;
                case "ADBE Position_2":
                  return e.zPosition;
                case "anchorPoint":
                case "AnchorPoint":
                case "Anchor Point":
                case "ADBE AnchorPoint":
                case 1:
                  return e.anchorPoint;
                case "opacity":
                case "Opacity":
                case 11:
                  return e.opacity;
                default:
                  return null;
              }
            }
            var i, r, s, a;
            return Object.defineProperty(e, "rotation", { get: ExpressionPropertyInterface(t.r || t.rz) }), Object.defineProperty(e, "zRotation", { get: ExpressionPropertyInterface(t.rz || t.r) }), Object.defineProperty(e, "xRotation", { get: ExpressionPropertyInterface(t.rx) }), Object.defineProperty(e, "yRotation", { get: ExpressionPropertyInterface(t.ry) }), Object.defineProperty(e, "scale", { get: ExpressionPropertyInterface(t.s) }), t.p ? a = ExpressionPropertyInterface(t.p) : (i = ExpressionPropertyInterface(t.px), r = ExpressionPropertyInterface(t.py), t.pz && (s = ExpressionPropertyInterface(t.pz))), Object.defineProperty(e, "position", { get: function() {
              return t.p ? a() : [i(), r(), s ? s() : 0];
            } }), Object.defineProperty(e, "xPosition", { get: ExpressionPropertyInterface(t.px) }), Object.defineProperty(e, "yPosition", { get: ExpressionPropertyInterface(t.py) }), Object.defineProperty(e, "zPosition", { get: ExpressionPropertyInterface(t.pz) }), Object.defineProperty(e, "anchorPoint", { get: ExpressionPropertyInterface(t.a) }), Object.defineProperty(e, "opacity", { get: ExpressionPropertyInterface(t.o) }), Object.defineProperty(e, "skew", { get: ExpressionPropertyInterface(t.sk) }), Object.defineProperty(e, "skewAxis", { get: ExpressionPropertyInterface(t.sa) }), Object.defineProperty(e, "orientation", { get: ExpressionPropertyInterface(t.or) }), e;
          }, ProjectInterface = function() {
            function t(t2) {
              this.compositions.push(t2);
            }
            return function() {
              function e(t2) {
                for (var e2 = 0, i = this.compositions.length; e2 < i; ) {
                  if (this.compositions[e2].data && this.compositions[e2].data.nm === t2)
                    return this.compositions[e2].prepareFrame && this.compositions[e2].data.xt && this.compositions[e2].prepareFrame(this.currentFrame), this.compositions[e2].compInterface;
                  e2 += 1;
                }
                return null;
              }
              return e.compositions = [], e.currentFrame = 0, e.registerComposition = t, e;
            };
          }(), EffectsExpressionInterface = function() {
            function t(i, r, s, a) {
              function n(t2) {
                for (var e2 = i.ef, r2 = 0, s2 = e2.length; r2 < s2; ) {
                  if (t2 === e2[r2].nm || t2 === e2[r2].mn || t2 === e2[r2].ix)
                    return 5 === e2[r2].ty ? l[r2] : l[r2]();
                  r2 += 1;
                }
                throw new Error();
              }
              var o, h = propertyGroupFactory(n, s), l = [], p = i.ef.length;
              for (o = 0; o < p; o += 1)
                5 === i.ef[o].ty ? l.push(t(i.ef[o], r.effectElements[o], r.effectElements[o].propertyGroup, a)) : l.push(e(r.effectElements[o], i.ef[o].ty, a, h));
              return "ADBE Color Control" === i.mn && Object.defineProperty(n, "color", { get: function() {
                return l[0]();
              } }), Object.defineProperties(n, { numProperties: { get: function() {
                return i.np;
              } }, _name: { value: i.nm }, propertyGroup: { value: h } }), n.enabled = 0 !== i.en, n.active = n.enabled, n;
            }
            function e(t2, e2, i, r) {
              var s = ExpressionPropertyInterface(t2.p);
              return t2.p.setGroupProperty && t2.p.setGroupProperty(PropertyInterface("", r)), function() {
                return 10 === e2 ? i.comp.compInterface(t2.p.v) : s();
              };
            }
            return { createEffectsInterface: function(e2, i) {
              if (e2.effectsManager) {
                var r, s = [], a = e2.data.ef, n = e2.effectsManager.effectElements.length;
                for (r = 0; r < n; r += 1)
                  s.push(t(a[r], e2.effectsManager.effectElements[r], i, e2));
                var o = e2.data.ef || [], h = function(t2) {
                  for (r = 0, n = o.length; r < n; ) {
                    if (t2 === o[r].nm || t2 === o[r].mn || t2 === o[r].ix)
                      return s[r];
                    r += 1;
                  }
                  return null;
                };
                return Object.defineProperty(h, "numProperties", { get: function() {
                  return o.length;
                } }), h;
              }
              return null;
            } };
          }(), MaskManagerInterface = function() {
            function t(t2, e) {
              this._mask = t2, this._data = e;
            }
            return Object.defineProperty(t.prototype, "maskPath", { get: function() {
              return this._mask.prop.k && this._mask.prop.getValue(), this._mask.prop;
            } }), Object.defineProperty(t.prototype, "maskOpacity", { get: function() {
              return this._mask.op.k && this._mask.op.getValue(), 100 * this._mask.op.v;
            } }), function(e) {
              var i, r = createSizedArray(e.viewData.length), s = e.viewData.length;
              for (i = 0; i < s; i += 1)
                r[i] = new t(e.viewData[i], e.masksProperties[i]);
              return function(t2) {
                for (i = 0; i < s; ) {
                  if (e.masksProperties[i].nm === t2)
                    return r[i];
                  i += 1;
                }
                return null;
              };
            };
          }(), ExpressionPropertyInterface = function() {
            var t = { pv: 0, v: 0, mult: 1 }, e = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 };
            function i(t2, e2, i2) {
              Object.defineProperty(t2, "velocity", { get: function() {
                return e2.getVelocityAtTime(e2.comp.currentFrame);
              } }), t2.numKeys = e2.keyframes ? e2.keyframes.length : 0, t2.key = function(r2) {
                if (!t2.numKeys)
                  return 0;
                var s;
                s = "s" in e2.keyframes[r2 - 1] ? e2.keyframes[r2 - 1].s : "e" in e2.keyframes[r2 - 2] ? e2.keyframes[r2 - 2].e : e2.keyframes[r2 - 2].s;
                var a = "unidimensional" === i2 ? new Number(s) : Object.assign({}, s);
                return a.time = e2.keyframes[r2 - 1].t / e2.elem.comp.globalData.frameRate, a.value = "unidimensional" === i2 ? s[0] : s, a;
              }, t2.valueAtTime = e2.getValueAtTime, t2.speedAtTime = e2.getSpeedAtTime, t2.velocityAtTime = e2.getVelocityAtTime, t2.propertyGroup = e2.propertyGroup;
            }
            function r() {
              return t;
            }
            return function(s) {
              return s ? "unidimensional" === s.propType ? function(e2) {
                e2 && "pv" in e2 || (e2 = t);
                var r2 = 1 / e2.mult, s2 = e2.pv * r2, a = new Number(s2);
                return a.value = s2, i(a, e2, "unidimensional"), function() {
                  return e2.k && e2.getValue(), s2 = e2.v * r2, a.value !== s2 && ((a = new Number(s2)).value = s2, i(a, e2, "unidimensional")), a;
                };
              }(s) : function(t2) {
                t2 && "pv" in t2 || (t2 = e);
                var r2 = 1 / t2.mult, s2 = t2.data && t2.data.l || t2.pv.length, a = createTypedArray("float32", s2), n = createTypedArray("float32", s2);
                return a.value = n, i(a, t2, "multidimensional"), function() {
                  t2.k && t2.getValue();
                  for (var e2 = 0; e2 < s2; e2 += 1)
                    n[e2] = t2.v[e2] * r2, a[e2] = n[e2];
                  return a;
                };
              }(s) : r;
            };
          }(), propertyGetTextProp;
          function SliderEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
          }
          function AngleEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
          }
          function ColorEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 1, 0, i);
          }
          function PointEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 1, 0, i);
          }
          function LayerIndexEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
          }
          function MaskIndexEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
          }
          function CheckboxEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i);
          }
          function NoValueEffect() {
            this.p = {};
          }
          function EffectsManager(t, e) {
            var i, r = t.ef || [];
            this.effectElements = [];
            var s, a = r.length;
            for (i = 0; i < a; i += 1)
              s = new GroupEffect(r[i], e), this.effectElements.push(s);
          }
          function GroupEffect(t, e) {
            this.init(t, e);
          }
          propertyGetTextProp = TextSelectorProp.getTextSelectorProp, TextSelectorProp.getTextSelectorProp = function(t, e, i) {
            return 1 === e.t ? new TextExpressionSelectorPropFactory(t, e, i) : propertyGetTextProp(t, e, i);
          }, extendPrototype([DynamicPropertyContainer], GroupEffect), GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties, GroupEffect.prototype.init = function(t, e) {
            var i;
            this.data = t, this.effectElements = [], this.initDynamicPropertyContainer(e);
            var r, s = this.data.ef.length, a = this.data.ef;
            for (i = 0; i < s; i += 1) {
              switch (r = null, a[i].ty) {
                case 0:
                  r = new SliderEffect(a[i], e, this);
                  break;
                case 1:
                  r = new AngleEffect(a[i], e, this);
                  break;
                case 2:
                  r = new ColorEffect(a[i], e, this);
                  break;
                case 3:
                  r = new PointEffect(a[i], e, this);
                  break;
                case 4:
                case 7:
                  r = new CheckboxEffect(a[i], e, this);
                  break;
                case 10:
                  r = new LayerIndexEffect(a[i], e, this);
                  break;
                case 11:
                  r = new MaskIndexEffect(a[i], e, this);
                  break;
                case 5:
                  r = new EffectsManager(a[i], e, this);
                  break;
                default:
                  r = new NoValueEffect(a[i], e, this);
              }
              r && this.effectElements.push(r);
            }
          };
          var lottie = {};
          function setLocationHref(t) {
            locationHref = t;
          }
          function searchAnimations() {
            true === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations();
          }
          function setSubframeRendering(t) {
            subframeEnabled = t;
          }
          function loadAnimation(t) {
            return true === standalone && (t.animationData = JSON.parse(animationData)), animationManager.loadAnimation(t);
          }
          function setQuality(t) {
            if ("string" == typeof t)
              switch (t) {
                case "high":
                  defaultCurveSegments = 200;
                  break;
                default:
                case "medium":
                  defaultCurveSegments = 50;
                  break;
                case "low":
                  defaultCurveSegments = 10;
              }
            else
              !isNaN(t) && t > 1 && (defaultCurveSegments = t);
            roundValues(!(defaultCurveSegments >= 50));
          }
          function inBrowser() {
            return "undefined" != typeof navigator;
          }
          function installPlugin(t, e) {
            "expressions" === t && (expressionsPlugin = e);
          }
          function getFactory(t) {
            switch (t) {
              case "propertyFactory":
                return PropertyFactory;
              case "shapePropertyFactory":
                return ShapePropertyFactory;
              case "matrix":
                return Matrix;
              default:
                return null;
            }
          }
          function checkReady() {
            "complete" === document.readyState && (clearInterval(readyStateCheckInterval), searchAnimations());
          }
          function getQueryVariable(t) {
            for (var e = queryString.split("&"), i = 0; i < e.length; i += 1) {
              var r = e[i].split("=");
              if (decodeURIComponent(r[0]) == t)
                return decodeURIComponent(r[1]);
            }
            return null;
          }
          lottie.play = animationManager.play, lottie.pause = animationManager.pause, lottie.setLocationHref = setLocationHref, lottie.togglePause = animationManager.togglePause, lottie.setSpeed = animationManager.setSpeed, lottie.setDirection = animationManager.setDirection, lottie.stop = animationManager.stop, lottie.searchAnimations = searchAnimations, lottie.registerAnimation = animationManager.registerAnimation, lottie.loadAnimation = loadAnimation, lottie.setSubframeRendering = setSubframeRendering, lottie.resize = animationManager.resize, lottie.goToAndStop = animationManager.goToAndStop, lottie.destroy = animationManager.destroy, lottie.setQuality = setQuality, lottie.inBrowser = inBrowser, lottie.installPlugin = installPlugin, lottie.freeze = animationManager.freeze, lottie.unfreeze = animationManager.unfreeze, lottie.setVolume = animationManager.setVolume, lottie.mute = animationManager.mute, lottie.unmute = animationManager.unmute, lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations, lottie.__getFactory = getFactory, lottie.version = "5.7.8";
          var standalone = "__[STANDALONE]__", animationData = "__[ANIMATIONDATA]__", renderer = "", queryString;
          if (standalone) {
            var scripts = document.getElementsByTagName("script"), index = scripts.length - 1, myScript = scripts[index] || { src: "" };
            queryString = myScript.src.replace(/^[^\?]+\??/, ""), renderer = getQueryVariable("renderer");
          }
          var readyStateCheckInterval = setInterval(checkReady, 100);
          return lottie;
        }, void 0 === (__WEBPACK_AMD_DEFINE_RESULT__ = function() {
          return factory(root);
        }.call(exports, __webpack_require__, exports, module)) || (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
      } }, __webpack_module_cache__ = {};
      function __webpack_require__(t) {
        var e = __webpack_module_cache__[t];
        if (void 0 !== e)
          return e.exports;
        var i = __webpack_module_cache__[t] = { exports: {} };
        return __webpack_modules__[t](i, i.exports, __webpack_require__), i.exports;
      }
      __webpack_require__.n = (t) => {
        var e = t && t.__esModule ? () => t.default : () => t;
        return __webpack_require__.d(e, { a: e }), e;
      }, __webpack_require__.d = (t, e) => {
        for (var i in e)
          __webpack_require__.o(e, i) && !__webpack_require__.o(t, i) && Object.defineProperty(t, i, { enumerable: true, get: e[i] });
      }, __webpack_require__.g = function() {
        if ("object" == typeof globalThis)
          return globalThis;
        try {
          return this || new Function("return this")();
        } catch (t) {
          if ("object" == typeof window)
            return window;
        }
      }(), __webpack_require__.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e);
      var __webpack_exports__ = {};
      (() => {
        "use strict";
        var t = __webpack_require__(992), e = __webpack_require__.n(t);
        const i = function() {
          if ("undefined" != typeof globalThis)
            return globalThis;
          if (void 0 !== __webpack_require__.g)
            return __webpack_require__.g;
          if ("undefined" != typeof self)
            return self;
          if ("undefined" != typeof window)
            return window;
          try {
            return new Function("return this")();
          } catch (t2) {
            return {};
          }
        }();
        void 0 === i.trustedTypes && (i.trustedTypes = { createPolicy: (t2, e2) => e2 }), Object.freeze([]);
        const r = [], s = i.trustedTypes.createPolicy("fast-html", { createHTML: (t2) => t2 });
        let a = s;
        function n() {
          let t2 = 0;
          for (; t2 < r.length; )
            if (r[t2].call(), t2++, t2 > 1024) {
              for (let e2 = 0, i2 = r.length - t2; e2 < i2; e2++)
                r[e2] = r[e2 + t2];
              r.length -= t2, t2 = 0;
            }
          r.length = 0;
        }
        const o = `fast-${Math.random().toString(36).substring(2, 8)}`, h = `${o}{`, l = `}${o}`, p = Object.freeze({ supportsAdoptedStyleSheets: Array.isArray(document.adoptedStyleSheets) && "replace" in CSSStyleSheet.prototype, setHTMLPolicy(t2) {
          if (a !== s)
            throw new Error("The HTML policy can only be set once.");
          a = t2;
        }, createHTML: (t2) => a.createHTML(t2), isMarker: (t2) => t2 && 8 === t2.nodeType && t2.data.startsWith(o), extractDirectiveIndexFromMarker: (t2) => parseInt(t2.data.replace(`${o}:`, "")), createInterpolationPlaceholder: (t2) => `${h}${t2}${l}`, createCustomAttributePlaceholder(t2, e2) {
          return `${t2}="${this.createInterpolationPlaceholder(e2)}"`;
        }, createBlockPlaceholder: (t2) => `<!--${o}:${t2}-->`, queueUpdate(t2) {
          r.length < 1 && window.requestAnimationFrame(n), r.push(t2);
        }, nextUpdate: () => new Promise((t2) => {
          p.queueUpdate(t2);
        }), setAttribute(t2, e2, i2) {
          null == i2 ? t2.removeAttribute(e2) : t2.setAttribute(e2, i2);
        }, setBooleanAttribute(t2, e2, i2) {
          i2 ? t2.setAttribute(e2, "") : t2.removeAttribute(e2);
        }, removeChildNodes(t2) {
          for (let e2 = t2.firstChild; null !== e2; e2 = t2.firstChild)
            t2.removeChild(e2);
        }, createTemplateWalker: (t2) => document.createTreeWalker(t2, 133, null, false) });
        function c(t2) {
          const e2 = this.spillover;
          -1 === e2.indexOf(t2) && e2.push(t2);
        }
        function m(t2) {
          const e2 = this.spillover, i2 = e2.indexOf(t2);
          -1 !== i2 && e2.splice(i2, 1);
        }
        function f(t2) {
          const e2 = this.spillover, i2 = this.source;
          for (let r2 = 0, s2 = e2.length; r2 < s2; ++r2)
            e2[r2].handleChange(i2, t2);
        }
        function d(t2) {
          return -1 !== this.spillover.indexOf(t2);
        }
        class u {
          constructor(t2, e2) {
            this.sub1 = void 0, this.sub2 = void 0, this.spillover = void 0, this.source = t2, this.sub1 = e2;
          }
          has(t2) {
            return this.sub1 === t2 || this.sub2 === t2;
          }
          subscribe(t2) {
            this.has(t2) || (void 0 !== this.sub1 ? void 0 !== this.sub2 ? (this.spillover = [this.sub1, this.sub2, t2], this.subscribe = c, this.unsubscribe = m, this.notify = f, this.has = d, this.sub1 = void 0, this.sub2 = void 0) : this.sub2 = t2 : this.sub1 = t2);
          }
          unsubscribe(t2) {
            this.sub1 === t2 ? this.sub1 = void 0 : this.sub2 === t2 && (this.sub2 = void 0);
          }
          notify(t2) {
            const e2 = this.sub1, i2 = this.sub2, r2 = this.source;
            void 0 !== e2 && e2.handleChange(r2, t2), void 0 !== i2 && i2.handleChange(r2, t2);
          }
        }
        class y {
          constructor(t2) {
            this.subscribers = {}, this.source = t2;
          }
          notify(t2) {
            const e2 = this.subscribers[t2];
            void 0 !== e2 && e2.notify(t2);
          }
          subscribe(t2, e2) {
            let i2 = this.subscribers[e2];
            void 0 === i2 && (this.subscribers[e2] = i2 = new u(this.source)), i2.subscribe(t2);
          }
          unsubscribe(t2, e2) {
            const i2 = this.subscribers[e2];
            void 0 !== i2 && i2.unsubscribe(t2);
          }
        }
        const g = /(:|&&|\|\||if)/, v = /* @__PURE__ */ new WeakMap(), b = /* @__PURE__ */ new WeakMap();
        let P, E = (t2) => {
          throw new Error("Must call enableArrayObservation before observing arrays.");
        };
        class x {
          constructor(t2) {
            this.name = t2, this.field = `_${t2}`, this.callback = `${t2}Changed`;
          }
          getValue(t2) {
            return void 0 !== P && P.watch(t2, this.name), t2[this.field];
          }
          setValue(t2, e2) {
            const i2 = this.field, r2 = t2[i2];
            if (r2 !== e2) {
              t2[i2] = e2;
              const s2 = t2[this.callback];
              "function" == typeof s2 && s2.call(t2, r2, e2), C(t2).notify(this.name);
            }
          }
        }
        const S = Object.freeze({ setArrayObserverFactory(t2) {
          E = t2;
        }, getNotifier(t2) {
          let e2 = t2.$fastController || v.get(t2);
          return void 0 === e2 && (Array.isArray(t2) ? e2 = E(t2) : v.set(t2, e2 = new y(t2))), e2;
        }, track(t2, e2) {
          void 0 !== P && P.watch(t2, e2);
        }, trackVolatile() {
          void 0 !== P && (P.needsRefresh = true);
        }, notify(t2, e2) {
          C(t2).notify(e2);
        }, defineProperty(t2, e2) {
          "string" == typeof e2 && (e2 = new x(e2)), this.getAccessors(t2).push(e2), Reflect.defineProperty(t2, e2.name, { enumerable: true, get: function() {
            return e2.getValue(this);
          }, set: function(t3) {
            e2.setValue(this, t3);
          } });
        }, getAccessors(t2) {
          let e2 = b.get(t2);
          if (void 0 === e2) {
            let i2 = Reflect.getPrototypeOf(t2);
            for (; void 0 === e2 && null !== i2; )
              e2 = b.get(i2), i2 = Reflect.getPrototypeOf(i2);
            e2 = void 0 === e2 ? [] : e2.slice(0), b.set(t2, e2);
          }
          return e2;
        }, binding(t2, e2, i2 = this.isVolatileBinding(t2)) {
          return new T(t2, e2, i2);
        }, isVolatileBinding: (t2) => g.test(t2.toString()) }), C = S.getNotifier, A = (S.trackVolatile, p.queueUpdate);
        class _ {
          constructor() {
            this.index = 0, this.length = 0, this.parent = null, this.parentContext = null;
          }
          get event() {
            return null;
          }
          get isEven() {
            return this.index % 2 == 0;
          }
          get isOdd() {
            return this.index % 2 != 0;
          }
          get isFirst() {
            return 0 === this.index;
          }
          get isInMiddle() {
            return !this.isFirst && !this.isLast;
          }
          get isLast() {
            return this.index === this.length - 1;
          }
        }
        S.defineProperty(_.prototype, "index"), S.defineProperty(_.prototype, "length");
        const k = Object.seal(new _());
        class T extends u {
          constructor(t2, e2, i2 = false) {
            super(t2, e2), this.binding = t2, this.isVolatileBinding = i2, this.needsRefresh = true, this.needsQueue = true, this.first = this, this.last = null, this.propertySource = void 0, this.propertyName = void 0, this.notifier = void 0, this.next = void 0;
          }
          observe(t2, e2) {
            this.needsRefresh && null !== this.last && this.disconnect();
            const i2 = P;
            P = this.needsRefresh ? this : void 0, this.needsRefresh = this.isVolatileBinding;
            const r2 = this.binding(t2, e2);
            return P = i2, r2;
          }
          disconnect() {
            if (null !== this.last) {
              let t2 = this.first;
              for (; void 0 !== t2; )
                t2.notifier.unsubscribe(this, t2.propertyName), t2 = t2.next;
              this.last = null, this.needsRefresh = this.needsQueue = true;
            }
          }
          watch(t2, e2) {
            const i2 = this.last, r2 = C(t2), s2 = null === i2 ? this.first : {};
            if (s2.propertySource = t2, s2.propertyName = e2, s2.notifier = r2, r2.subscribe(this, e2), null !== i2) {
              if (!this.needsRefresh) {
                P = void 0;
                const e3 = i2.propertySource[i2.propertyName];
                P = this, t2 === e3 && (this.needsRefresh = true);
              }
              i2.next = s2;
            }
            this.last = s2;
          }
          handleChange() {
            this.needsQueue && (this.needsQueue = false, A(this));
          }
          call() {
            null !== this.last && (this.needsQueue = true, this.notify(this));
          }
          records() {
            let t2 = this.first;
            return { next: () => {
              const e2 = t2;
              return void 0 === e2 ? { value: void 0, done: true } : (t2 = t2.next, { value: e2, done: false });
            }, [Symbol.iterator]: function() {
              return this;
            } };
          }
        }
        class w {
          constructor() {
            this.targets = /* @__PURE__ */ new WeakSet(), this.behaviors = null;
          }
          addStylesTo(t2) {
            this.targets.add(t2);
          }
          removeStylesFrom(t2) {
            this.targets.delete(t2);
          }
          isAttachedTo(t2) {
            return this.targets.has(t2);
          }
          withBehaviors(...t2) {
            return this.behaviors = null === this.behaviors ? t2 : this.behaviors.concat(t2), this;
          }
        }
        function M(t2) {
          return t2.map((t3) => t3 instanceof w ? M(t3.styles) : [t3]).reduce((t3, e2) => t3.concat(e2), []);
        }
        function D(t2) {
          return t2.map((t3) => t3 instanceof w ? t3.behaviors : null).reduce((t3, e2) => null === e2 ? t3 : (null === t3 && (t3 = []), t3.concat(e2)), null);
        }
        w.create = (() => {
          if (p.supportsAdoptedStyleSheets) {
            const t2 = /* @__PURE__ */ new Map();
            return (e2) => new F(e2, t2);
          }
          return (t2) => new R(t2);
        })();
        class F extends w {
          constructor(t2, e2) {
            super(), this.styles = t2, this.styleSheetCache = e2, this._styleSheets = void 0, this.behaviors = D(t2);
          }
          get styleSheets() {
            if (void 0 === this._styleSheets) {
              const t2 = this.styles, e2 = this.styleSheetCache;
              this._styleSheets = M(t2).map((t3) => {
                if (t3 instanceof CSSStyleSheet)
                  return t3;
                let i2 = e2.get(t3);
                return void 0 === i2 && (i2 = new CSSStyleSheet(), i2.replaceSync(t3), e2.set(t3, i2)), i2;
              });
            }
            return this._styleSheets;
          }
          addStylesTo(t2) {
            t2.adoptedStyleSheets = [...t2.adoptedStyleSheets, ...this.styleSheets], super.addStylesTo(t2);
          }
          removeStylesFrom(t2) {
            const e2 = this.styleSheets;
            t2.adoptedStyleSheets = t2.adoptedStyleSheets.filter((t3) => -1 === e2.indexOf(t3)), super.removeStylesFrom(t2);
          }
        }
        let I = 0;
        class R extends w {
          constructor(t2) {
            super(), this.styles = t2, this.behaviors = null, this.behaviors = D(t2), this.styleSheets = M(t2), this.styleClass = "fast-style-class-" + ++I;
          }
          addStylesTo(t2) {
            const e2 = this.styleSheets, i2 = this.styleClass;
            t2 = this.normalizeTarget(t2);
            for (let r2 = e2.length - 1; r2 > -1; --r2) {
              const s2 = document.createElement("style");
              s2.innerHTML = e2[r2], s2.className = i2, t2.prepend(s2);
            }
            super.addStylesTo(t2);
          }
          removeStylesFrom(t2) {
            const e2 = (t2 = this.normalizeTarget(t2)).querySelectorAll(`.${this.styleClass}`);
            for (let i2 = 0, r2 = e2.length; i2 < r2; ++i2)
              t2.removeChild(e2[i2]);
            super.removeStylesFrom(t2);
          }
          isAttachedTo(t2) {
            return super.isAttachedTo(this.normalizeTarget(t2));
          }
          normalizeTarget(t2) {
            return t2 === document ? document.body : t2;
          }
        }
        const V = { toView: (t2) => t2 ? "true" : "false", fromView: (t2) => null != t2 && "false" !== t2 && false !== t2 && 0 !== t2 };
        class L {
          constructor(t2, e2, i2 = e2.toLowerCase(), r2 = "reflect", s2) {
            this.guards = /* @__PURE__ */ new Set(), this.Owner = t2, this.name = e2, this.attribute = i2, this.mode = r2, this.converter = s2, this.fieldName = `_${e2}`, this.callbackName = `${e2}Changed`, this.hasCallback = this.callbackName in t2.prototype, "boolean" === r2 && void 0 === s2 && (this.converter = V);
          }
          setValue(t2, e2) {
            const i2 = t2[this.fieldName], r2 = this.converter;
            void 0 !== r2 && (e2 = r2.fromView(e2)), i2 !== e2 && (t2[this.fieldName] = e2, this.tryReflectToAttribute(t2), this.hasCallback && t2[this.callbackName](i2, e2), t2.$fastController.notify(this.name));
          }
          getValue(t2) {
            return S.track(t2, this.name), t2[this.fieldName];
          }
          onAttributeChangedCallback(t2, e2) {
            this.guards.has(t2) || (this.guards.add(t2), this.setValue(t2, e2), this.guards.delete(t2));
          }
          tryReflectToAttribute(t2) {
            const e2 = this.mode, i2 = this.guards;
            i2.has(t2) || "fromView" === e2 || p.queueUpdate(() => {
              i2.add(t2);
              const r2 = t2[this.fieldName];
              switch (e2) {
                case "reflect":
                  const e3 = this.converter;
                  p.setAttribute(t2, this.attribute, void 0 !== e3 ? e3.toView(r2) : r2);
                  break;
                case "boolean":
                  p.setBooleanAttribute(t2, this.attribute, r2);
              }
              i2.delete(t2);
            });
          }
          static collect(t2, ...e2) {
            const i2 = [];
            e2.push(t2.attributes);
            for (let r2 = 0, s2 = e2.length; r2 < s2; ++r2) {
              const s3 = e2[r2];
              if (void 0 !== s3)
                for (let e3 = 0, r3 = s3.length; e3 < r3; ++e3) {
                  const r4 = s3[e3];
                  "string" == typeof r4 ? i2.push(new L(t2, r4)) : i2.push(new L(t2, r4.property, r4.attribute, r4.mode, r4.converter));
                }
            }
            return i2;
          }
        }
        function B(t2, e2) {
          let i2;
          function r2(t3, e3) {
            arguments.length > 1 && (i2.property = e3);
            const r3 = t3.constructor.attributes || (t3.constructor.attributes = []);
            r3.push(i2);
          }
          return arguments.length > 1 ? (i2 = {}, void r2(t2, e2)) : (i2 = void 0 === t2 ? {} : t2, r2);
        }
        const O = { mode: "open" }, G = {}, z = /* @__PURE__ */ new Map();
        class N {
          constructor(t2, e2 = t2.definition) {
            "string" == typeof e2 && (e2 = { name: e2 }), this.type = t2, this.name = e2.name, this.template = e2.template;
            const i2 = L.collect(t2, e2.attributes), r2 = new Array(i2.length), s2 = {}, a2 = {};
            for (let t3 = 0, e3 = i2.length; t3 < e3; ++t3) {
              const e4 = i2[t3];
              r2[t3] = e4.attribute, s2[e4.name] = e4, a2[e4.attribute] = e4;
            }
            this.attributes = i2, this.observedAttributes = r2, this.propertyLookup = s2, this.attributeLookup = a2, this.shadowOptions = void 0 === e2.shadowOptions ? O : null === e2.shadowOptions ? void 0 : Object.assign(Object.assign({}, O), e2.shadowOptions), this.elementOptions = void 0 === e2.elementOptions ? G : Object.assign(Object.assign({}, G), e2.elementOptions), this.styles = void 0 === e2.styles ? void 0 : Array.isArray(e2.styles) ? w.create(e2.styles) : e2.styles instanceof w ? e2.styles : w.create([e2.styles]);
          }
          define(t2 = customElements) {
            const e2 = this.type;
            if (!this.isDefined) {
              const t3 = this.attributes, i2 = e2.prototype;
              for (let e3 = 0, r2 = t3.length; e3 < r2; ++e3)
                S.defineProperty(i2, t3[e3]);
              Reflect.defineProperty(e2, "observedAttributes", { value: this.observedAttributes, enumerable: true }), z.set(e2, this), this.isDefined = true;
            }
            return t2.get(this.name) || t2.define(this.name, e2, this.elementOptions), this;
          }
          static forType(t2) {
            return z.get(t2);
          }
        }
        const H = /* @__PURE__ */ new WeakMap(), j = { bubbles: true, composed: true, cancelable: true };
        function q(t2) {
          return t2.shadowRoot || H.get(t2) || null;
        }
        class W extends y {
          constructor(t2, e2) {
            super(t2), this.boundObservables = null, this.behaviors = null, this.needsInitialization = true, this._template = null, this._styles = null, this._isConnected = false, this.view = null, this.element = t2, this.definition = e2;
            const i2 = e2.shadowOptions;
            if (void 0 !== i2) {
              const e3 = t2.attachShadow(i2);
              "closed" === i2.mode && H.set(t2, e3);
            }
            const r2 = S.getAccessors(t2);
            if (r2.length > 0) {
              const e3 = this.boundObservables = /* @__PURE__ */ Object.create(null);
              for (let i3 = 0, s2 = r2.length; i3 < s2; ++i3) {
                const s3 = r2[i3].name, a2 = t2[s3];
                void 0 !== a2 && (delete t2[s3], e3[s3] = a2);
              }
            }
          }
          get isConnected() {
            return S.track(this, "isConnected"), this._isConnected;
          }
          setIsConnected(t2) {
            this._isConnected = t2, S.notify(this, "isConnected");
          }
          get template() {
            return this._template;
          }
          set template(t2) {
            this._template !== t2 && (this._template = t2, this.needsInitialization || this.renderTemplate(t2));
          }
          get styles() {
            return this._styles;
          }
          set styles(t2) {
            this._styles !== t2 && (null !== this._styles && this.removeStyles(this._styles), this._styles = t2, this.needsInitialization || null === t2 || this.addStyles(t2));
          }
          addStyles(t2) {
            const e2 = q(this.element) || this.element.getRootNode();
            if (t2 instanceof HTMLStyleElement)
              e2.prepend(t2);
            else if (!t2.isAttachedTo(e2)) {
              const i2 = t2.behaviors;
              t2.addStylesTo(e2), null !== i2 && this.addBehaviors(i2);
            }
          }
          removeStyles(t2) {
            const e2 = q(this.element) || this.element.getRootNode();
            if (t2 instanceof HTMLStyleElement)
              e2.removeChild(t2);
            else if (t2.isAttachedTo(e2)) {
              const i2 = t2.behaviors;
              t2.removeStylesFrom(e2), null !== i2 && this.removeBehaviors(i2);
            }
          }
          addBehaviors(t2) {
            const e2 = this.behaviors || (this.behaviors = /* @__PURE__ */ new Map()), i2 = t2.length, r2 = [];
            for (let s2 = 0; s2 < i2; ++s2) {
              const i3 = t2[s2];
              e2.has(i3) ? e2.set(i3, e2.get(i3) + 1) : (e2.set(i3, 1), r2.push(i3));
            }
            if (this._isConnected) {
              const t3 = this.element;
              for (let e3 = 0; e3 < r2.length; ++e3)
                r2[e3].bind(t3, k);
            }
          }
          removeBehaviors(t2, e2 = false) {
            const i2 = this.behaviors;
            if (null === i2)
              return;
            const r2 = t2.length, s2 = [];
            for (let a2 = 0; a2 < r2; ++a2) {
              const r3 = t2[a2];
              if (i2.has(r3)) {
                const t3 = i2.get(r3) - 1;
                0 === t3 || e2 ? i2.delete(r3) && s2.push(r3) : i2.set(r3, t3);
              }
            }
            if (this._isConnected) {
              const t3 = this.element;
              for (let e3 = 0; e3 < s2.length; ++e3)
                s2[e3].unbind(t3);
            }
          }
          onConnectedCallback() {
            if (this._isConnected)
              return;
            const t2 = this.element;
            this.needsInitialization ? this.finishInitialization() : null !== this.view && this.view.bind(t2, k);
            const e2 = this.behaviors;
            if (null !== e2)
              for (const [i2] of e2)
                i2.bind(t2, k);
            this.setIsConnected(true);
          }
          onDisconnectedCallback() {
            if (!this._isConnected)
              return;
            this.setIsConnected(false);
            const t2 = this.view;
            null !== t2 && t2.unbind();
            const e2 = this.behaviors;
            if (null !== e2) {
              const t3 = this.element;
              for (const [i2] of e2)
                i2.unbind(t3);
            }
          }
          onAttributeChangedCallback(t2, e2, i2) {
            const r2 = this.definition.attributeLookup[t2];
            void 0 !== r2 && r2.onAttributeChangedCallback(this.element, i2);
          }
          emit(t2, e2, i2) {
            return !!this._isConnected && this.element.dispatchEvent(new CustomEvent(t2, Object.assign(Object.assign({ detail: e2 }, j), i2)));
          }
          finishInitialization() {
            const t2 = this.element, e2 = this.boundObservables;
            if (null !== e2) {
              const i3 = Object.keys(e2);
              for (let r2 = 0, s2 = i3.length; r2 < s2; ++r2) {
                const s3 = i3[r2];
                t2[s3] = e2[s3];
              }
              this.boundObservables = null;
            }
            const i2 = this.definition;
            null === this._template && (this.element.resolveTemplate ? this._template = this.element.resolveTemplate() : i2.template && (this._template = i2.template || null)), null !== this._template && this.renderTemplate(this._template), null === this._styles && (this.element.resolveStyles ? this._styles = this.element.resolveStyles() : i2.styles && (this._styles = i2.styles || null)), null !== this._styles && this.addStyles(this._styles), this.needsInitialization = false;
          }
          renderTemplate(t2) {
            const e2 = this.element, i2 = q(e2) || e2;
            null !== this.view ? (this.view.dispose(), this.view = null) : this.needsInitialization || p.removeChildNodes(i2), t2 && (this.view = t2.render(e2, i2, e2));
          }
          static forCustomElement(t2) {
            const e2 = t2.$fastController;
            if (void 0 !== e2)
              return e2;
            const i2 = N.forType(t2.constructor);
            if (void 0 === i2)
              throw new Error("Missing FASTElement definition.");
            return t2.$fastController = new W(t2, i2);
          }
        }
        function Y(t2) {
          return class extends t2 {
            constructor() {
              super(), W.forCustomElement(this);
            }
            $emit(t3, e2, i2) {
              return this.$fastController.emit(t3, e2, i2);
            }
            connectedCallback() {
              this.$fastController.onConnectedCallback();
            }
            disconnectedCallback() {
              this.$fastController.onDisconnectedCallback();
            }
            attributeChangedCallback(t3, e2, i2) {
              this.$fastController.onAttributeChangedCallback(t3, e2, i2);
            }
          };
        }
        const $ = Object.assign(Y(HTMLElement), { from: (t2) => Y(t2), define: (t2, e2) => new N(t2, e2).define().type });
        class X {
          constructor(t2, e2, i2) {
            this.played = false, this.ready = false, this.playing = false, this.reset = false, this.playOnce = false, this.lottiePlayer = t2, this.animationContainer = e2, this.fastElement = i2, this.registerCompleteListener(), this.registerReadyListener(), this.registerDestroyListener();
          }
          playAnimation() {
            if (!this.playing) {
              if (this.playOnce && this.played)
                return;
              this.playing = true, this.lottiePlayer.setDirection(1), this.lottiePlayer.goToAndPlay(0, true), this.played = true;
            }
          }
          registerCompleteListener() {
            null !== this.lottiePlayer && this.lottiePlayer.addEventListener("complete", () => {
              this.fastElement.$emit("complete"), this.playing = false, this.reset && this.lottiePlayer.goToAndStop(0, true);
            });
          }
          registerReadyListener() {
            null !== this.lottiePlayer && this.lottiePlayer.addEventListener("data_ready", () => {
              this.fastElement.$emit("data_ready"), this.ready = true;
            });
          }
          registerDestroyListener() {
            null !== this.lottiePlayer && this.lottiePlayer.addEventListener("destroy", () => {
              this.removeListener();
            });
          }
        }
        var K;
        !function(t2) {
          t2.Hover = "hover", t2.Click = "click", t2.Morph = "morph", t2.PlayOnShow = "play-on-show", t2.PlayOnce = "play-once", t2.Switch = "switch", t2.MorphLock = "morph-lock", t2.FreezeClick = "freeze-click", t2.ShowAndClick = "show-and-click", t2.ShowAndHover = "show-and-hover", t2.ShowAndMorph = "show-and-morph", t2.ShowAndMorphLock = "show-and-morph-lock", t2.ShowAndFreezeClick = "show-and-freeze-click", t2.ShowAndSwitch = "show-and-switch";
        }(K || (K = {}));
        class U extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.Hover, this.hoverHandler = this.playAnimation.bind(this), this.initListener();
          }
          initListener() {
            this.animationContainer.addEventListener("mouseenter", this.hoverHandler);
          }
          removeListener() {
            this.animationContainer.removeEventListener("mouseenter", this.hoverHandler);
          }
        }
        class J extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.Click, this.clickHandler = this.playAnimation.bind(this), this.initListener();
          }
          initListener() {
            this.animationContainer.addEventListener("click", this.clickHandler);
          }
          removeListener() {
            this.animationContainer.removeEventListener("click", this.clickHandler);
          }
        }
        class Z extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.direction = -1, this.interactionType = K.Morph, this.morphHandler = this.playOnHover.bind(this), this.initListener();
          }
          initListener() {
            this.animationContainer.addEventListener("mouseenter", this.morphHandler), this.animationContainer.addEventListener("mouseleave", this.morphHandler);
          }
          removeListener() {
            this.animationContainer.removeEventListener("mouseenter", this.morphHandler), this.animationContainer.removeEventListener("mouseleave", this.morphHandler);
          }
          playMorphedAnimation() {
            -1 === this.direction ? (this.direction = 1, this.playing = true, this.lottiePlayer.setDirection(this.direction)) : 1 === this.direction && (this.direction = -1, this.playing = true, this.lottiePlayer.setDirection(this.direction)), this.lottiePlayer.play();
          }
          playOnHover() {
            this.playOnce && !this.played ? (this.playMorphedAnimation(), this.played = true) : this.playOnce || this.playMorphedAnimation();
          }
        }
        class Q extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.direction = -1, this.locked = false, this.interactionType = K.MorphLock, this.morphLockHandler = this.playOnHover.bind(this), this.morphLockAnimationHandler = this.lockAnimation.bind(this), this.initListener();
          }
          initListener() {
            this.animationContainer.addEventListener("mouseenter", this.morphLockHandler), this.animationContainer.addEventListener("mouseleave", this.morphLockHandler), this.animationContainer.addEventListener("click", this.morphLockAnimationHandler);
          }
          removeListener() {
            this.animationContainer.removeEventListener("mouseenter", this.morphLockHandler), this.animationContainer.removeEventListener("mouseleave", this.morphLockHandler), this.animationContainer.removeEventListener("click", this.morphLockAnimationHandler);
          }
          lockAnimation() {
            this.locked = !this.locked;
          }
          playMorphedAnimation() {
            -1 === this.direction ? (this.direction = 1, this.playing = true, this.lottiePlayer.setDirection(this.direction)) : 1 === this.direction && (this.direction = -1, this.playing = true, this.lottiePlayer.setDirection(this.direction)), this.lottiePlayer.play();
          }
          playOnHover() {
            this.locked || (this.playOnce && !this.played ? (this.playMorphedAnimation(), this.played = true) : this.playOnce || this.playMorphedAnimation());
          }
        }
        class tt extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.direction = -1, this.interactionType = K.Switch, this.switchHandler = this.playOnClick.bind(this), this.initListener();
          }
          initListener() {
            this.animationContainer.addEventListener("click", this.switchHandler);
          }
          removeListener() {
            this.animationContainer.removeEventListener("click", this.switchHandler);
          }
          playSwitchAnimation() {
            -1 === this.direction ? (this.direction = 1, this.playing = true, this.lottiePlayer.setDirection(this.direction)) : 1 === this.direction && (this.direction = -1, this.playing = true, this.lottiePlayer.setDirection(this.direction)), this.lottiePlayer.play();
          }
          playOnClick() {
            this.playOnce && !this.played ? (this.playSwitchAnimation(), this.played = true) : this.playOnce || this.playSwitchAnimation();
          }
        }
        class et extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.PlayOnShow, this.initListener();
          }
          initListener() {
            this.observer = new IntersectionObserver(this.detectIfShowing.bind(this), { threshold: [1] }), this.observer.observe(this.animationContainer);
          }
          detectIfShowing(t2) {
            true === t2[0].isIntersecting && this.playAnimation();
          }
          removeListener() {
            this.observer.disconnect();
          }
        }
        class it extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.PlayOnce, this.playOnce = true, this.playAnimation();
          }
          removeListener() {
          }
        }
        class rt extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.FreezeClick, this.freezeClickHandler = this.freezeClick.bind(this), this.initListener();
          }
          freezeClick() {
            this.freezeAnimation(), null !== this.lottiePlayer && this.lottiePlayer.addEventListener("complete", () => {
              this.lottiePlayer.goToAndStop(0, true);
            });
          }
          initListener() {
            this.animationContainer.addEventListener("click", this.freezeClickHandler);
          }
          removeListener() {
            this.animationContainer.removeEventListener("click", this.freezeClickHandler);
          }
          freezeAnimation() {
            this.playing ? this.pauseAnimation() : this.resumeAnimation();
          }
          resumeAnimation() {
            this.playing || (this.lottiePlayer.play(), this.playing = true);
          }
          pauseAnimation() {
            this.playing && (this.lottiePlayer.pause(), this.playing = false);
          }
        }
        class st extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.ShowAndClick, this.playOnShow = new et(t2, e2, i2), this.playOnClick = new J(t2, e2, i2);
          }
          removeListener() {
          }
        }
        class at extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.ShowAndClick, this.playOnShow = new et(t2, e2, i2), this.playOnHover = new U(t2, e2, i2);
          }
          removeListener() {
          }
        }
        class nt extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.ShowAndMorph, this.playOnShow = new et(t2, e2, i2), this.playOnMorph = new Z(t2, e2, i2);
          }
          removeListener() {
          }
        }
        class ot extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.ShowAndClick, this.playOnShow = new et(t2, e2, i2), this.playOnMorphLock = new Q(t2, e2, i2);
          }
          removeListener() {
          }
        }
        class ht extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.ShowAndClick, this.playOnShow = new et(t2, e2, i2), this.playOnFreezeClick = new rt(t2, e2, i2);
          }
          removeListener() {
          }
        }
        class lt extends X {
          constructor(t2, e2, i2) {
            super(t2, e2, i2), this.interactionType = K.ShowAndClick, this.playOnShow = new et(t2, e2, i2), this.playOnSwitch = new tt(t2, e2, i2);
          }
          removeListener() {
          }
        }
        var pt = function(t2, e2, i2, r2) {
          var s2, a2 = arguments.length, n2 = a2 < 3 ? e2 : null === r2 ? r2 = Object.getOwnPropertyDescriptor(e2, i2) : r2;
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            n2 = Reflect.decorate(t2, e2, i2, r2);
          else
            for (var o2 = t2.length - 1; o2 >= 0; o2--)
              (s2 = t2[o2]) && (n2 = (a2 < 3 ? s2(n2) : a2 > 3 ? s2(e2, i2, n2) : s2(e2, i2)) || n2);
          return a2 > 3 && n2 && Object.defineProperty(e2, i2, n2), n2;
        };
        let ct = class extends $ {
          constructor() {
            super(), this.lottie = null, this.lottieLoading = false, this.playOnce = false, this.loop = false, this.speed = 1, this.autoplay = false, this.delay = 0, this.reset = false, this.aspectRatio = "xMidYMid slice", this.strokeWidth = null, this.strokeColor = null, this.viewBox = null, this.animationContainer = void 0, this.initShadowRoot();
          }
          connectedCallback() {
            super.connectedCallback(), this.loadIconData();
          }
          disconnectedCallback() {
            super.disconnectedCallback(), this.deloadLottie();
          }
          playOnceChanged(t2, e2) {
            this.playOnce = e2;
          }
          pathChanged(t2, e2) {
            !this.lottieLoading && t2 && (this.path = e2, this.deloadLottie(), this.loadIconData());
          }
          interactionChanged(t2, e2) {
            this.interaction = e2, this.initInteraction();
          }
          loopChanged(t2, e2) {
            this.loop = e2;
          }
          speedChanged(t2, e2) {
            this.speed = parseFloat(e2), this.lottie && this.lottie.setSpeed(this.speed);
          }
          autoplayChanged(t2, e2) {
            this.autoplay = e2;
          }
          delayChanged(t2, e2) {
            this.delay = e2;
          }
          resetChanged(t2, e2) {
            this.reset = e2;
          }
          aspectRatioChanged(t2, e2) {
            if (!this.lottieLoading && this.animationContainer) {
              this.aspectRatio = e2;
              const t3 = this.animationContainer.children;
              for (let e3 = 0; e3 < t3.length; e3++)
                t3[e3].hasAttribute("preserveAspectRatio") && t3[e3].setAttribute("preserveAspectRatio", this.aspectRatio);
            }
          }
          strokeWidthChanged(t2, e2) {
            if (null != this.lottie && this.animationContainer) {
              this.strokeWidth = e2;
              const t3 = this.animationContainer.children;
              for (let e3 = 0; e3 < t3.length; e3++) {
                const i2 = Array.from(t3[e3].querySelectorAll("path"));
                for (let t4 = 0; t4 < i2.length; t4++)
                  i2[t4].hasAttribute("stroke-width") && i2[t4].setAttribute("stroke-width", this.strokeWidth);
              }
            }
          }
          strokeColorChanged(t2, e2) {
            if (null != this.lottie && this.animationContainer) {
              this.strokeColor = e2;
              const t3 = this.animationContainer.children;
              for (let e3 = 0; e3 < t3.length; e3++) {
                const i2 = Array.from(t3[e3].querySelectorAll("path"));
                for (let t4 = 0; t4 < i2.length; t4++)
                  i2[t4].hasAttribute("stroke") && i2[t4].setAttribute("stroke", this.strokeColor);
              }
            }
          }
          viewBoxChanged(t2, e2) {
            if (!this.lottieLoading && this.animationContainer) {
              this.viewBox = e2;
              const t3 = this.animationContainer.children;
              for (let e3 = 0; e3 < t3.length; e3++)
                t3[e3].hasAttribute("viewBox") && t3[e3].setAttribute("viewBox", this.viewBox);
            }
          }
          async loadIconData() {
            if (this.lottieLoading = true, null === this.path)
              return this.lottieLoading = false, void (this.lottie = null);
            try {
              const t2 = await fetch(this.path);
              if (!t2.ok)
                throw new Error();
              this.data = await t2.json();
            } catch (t2) {
              return console.error("[Lottie-interactive] Your JSON data could not be loaded."), void (this.lottieLoading = false);
            }
            (class {
              static changeStrokeWidthColor(t2, e2, i2) {
                null === t2 || null === i2 && null === e2 || "object" == typeof t2 && Object.entries(t2).forEach(([r2, s2]) => {
                  "ty" === r2 && "st" === s2 && (null !== e2 && (t2.w.k = Number(e2)), null !== i2 && (t2.c.k = this.hexToRgbA(i2))), this.changeStrokeWidthColor(s2, e2, i2);
                });
              }
              static changeWidth(t2, e2) {
                null !== t2 && "object" == typeof t2 && Object.entries(t2).forEach(([i2, r2]) => {
                  "ty" === i2 && "st" === r2 && (t2.w.k = Number(e2)), this.changeWidth(r2, e2);
                });
              }
              static changeColor(t2, e2) {
                null !== t2 && "object" == typeof t2 && Object.entries(t2).forEach(([i2, r2]) => {
                  "ty" === i2 && "st" === r2 && (t2.c.k = this.hexToRgbA(e2)), this.changeColor(r2, e2);
                });
              }
              static scaleRGB(t2) {
                return Math.round(t2 / 255 * 100) / 100;
              }
              static hexToRgbA(t2) {
                let e2, i2 = new Array();
                return /^#([A-Fa-f0-9]{3}){1,2}$/.test(t2) ? (e2 = t2.substring(1).split(""), 3 == e2.length && (e2 = [e2[0], e2[0], e2[1], e2[1], e2[2], e2[2]]), e2 = "0x" + e2.join(""), i2.push(this.scaleRGB(e2 >> 16 & 255)), i2.push(this.scaleRGB(e2 >> 8 & 255)), i2.push(this.scaleRGB(255 & e2)), i2.push(1), i2) : this.hexToRgbA("#000000");
              }
            }).changeStrokeWidthColor(this.data, this.strokeWidth, this.strokeColor), this.loadAnimation();
          }
          initInteraction() {
            if (this.lottie && this.interaction) {
              switch (this.currentInteraction && (this.currentInteraction.removeListener(), delete this.currentInteraction), this.interaction) {
                case K.Hover:
                  this.currentInteraction = new U(this.lottie, this.animationContainer, this);
                  break;
                case K.Click:
                  this.currentInteraction = new J(this.lottie, this.animationContainer, this);
                  break;
                case K.Morph:
                  this.currentInteraction = new Z(this.lottie, this.animationContainer, this);
                  break;
                case K.FreezeClick:
                  this.currentInteraction = new rt(this.lottie, this.animationContainer, this);
                  break;
                case K.MorphLock:
                  this.currentInteraction = new Q(this.lottie, this.animationContainer, this);
                  break;
                case K.Switch:
                  this.currentInteraction = new tt(this.lottie, this.animationContainer, this);
                  break;
                case K.PlayOnShow:
                  this.currentInteraction = new et(this.lottie, this.animationContainer, this);
                  break;
                case K.ShowAndClick:
                  this.currentInteraction = new st(this.lottie, this.animationContainer, this);
                  break;
                case K.ShowAndHover:
                  this.currentInteraction = new at(this.lottie, this.animationContainer, this);
                  break;
                case K.ShowAndMorph:
                  this.currentInteraction = new nt(this.lottie, this.animationContainer, this);
                  break;
                case K.ShowAndMorphLock:
                  this.currentInteraction = new ot(this.lottie, this.animationContainer, this);
                  break;
                case K.ShowAndFreezeClick:
                  this.currentInteraction = new ht(this.lottie, this.animationContainer, this);
                  break;
                case K.ShowAndSwitch:
                  this.currentInteraction = new lt(this.lottie, this.animationContainer, this);
                  break;
                case K.PlayOnce:
                  this.currentInteraction = new it(this.lottie, this.animationContainer, this);
              }
              this.currentInteraction.reset = this.reset, this.currentInteraction.playOnce = this.playOnce, this.currentInteraction.playing = this.autoplay;
            }
          }
          initShadowRoot() {
            const t2 = document.createElement("style");
            t2.innerHTML = "\n  :host {\n    justify-content: center;\n    align-items: center;\n    display: inline-flex;\n  }\n  div {\n    width: 100%;\n    height: 100%;\n    margin: auto;\n  }\n", this.shadowRoot.appendChild(t2), this.animationContainer = document.createElement("div"), this.shadowRoot.appendChild(this.animationContainer);
          }
          loadAnimation() {
            setTimeout(() => {
              this.lottie = e().loadAnimation({ container: this.animationContainer, renderer: "svg", loop: this.loop, autoplay: this.autoplay, animationData: this.data, rendererSettings: { preserveAspectRatio: this.aspectRatio, viewBoxSize: this.viewBox } }), this.lottie.setSpeed(this.speed), this.lottie.addEventListener("DOMLoaded", () => {
                this.initInteraction(), this.lottieLoading = false;
              });
            }, this.delay);
          }
          deloadLottie() {
            this.lottie && (this.lottie.destroy(), this.lottie = void 0, this.shadowRoot.lastElementChild.innerHTML = "", this.currentInteraction.removeListener(), delete this.currentInteraction);
          }
        };
        pt([B({ mode: "boolean", attribute: "play-once" })], ct.prototype, "playOnce", void 0), pt([B], ct.prototype, "path", void 0), pt([B], ct.prototype, "interaction", void 0), pt([B({ mode: "boolean" })], ct.prototype, "loop", void 0), pt([B], ct.prototype, "speed", void 0), pt([B({ mode: "boolean" })], ct.prototype, "autoplay", void 0), pt([B], ct.prototype, "delay", void 0), pt([B({ mode: "boolean" })], ct.prototype, "reset", void 0), pt([B({ attribute: "aspect-ratio" })], ct.prototype, "aspectRatio", void 0), pt([B({ attribute: "s-width" })], ct.prototype, "strokeWidth", void 0), pt([B({ attribute: "s-color" })], ct.prototype, "strokeColor", void 0), pt([B({ attribute: "view-box" })], ct.prototype, "viewBox", void 0), ct = pt([("lottie-interactive", function(t2) {
          new N(t2, "lottie-interactive").define();
        })], ct);
      })();
    })();
  }
});
export default require_lottie_interactive();
/*! Bundled license information:

lottie-interactive/dist/lottie-interactive.js:
  (*! For license information please see lottie-interactive.js.LICENSE.txt *)
*/
//# sourceMappingURL=lottie-interactive.js.map
